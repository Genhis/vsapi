### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Common.IAssetManager
  commentId: T:Vintagestory.API.Common.IAssetManager
  id: IAssetManager
  parent: Vintagestory.API.Common
  children:
  - Vintagestory.API.Common.IAssetManager.Add(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IAsset)
  - Vintagestory.API.Common.IAssetManager.AddModOrigin(System.String,System.String)
  - Vintagestory.API.Common.IAssetManager.AddModOrigin(System.String,System.String,System.String)
  - Vintagestory.API.Common.IAssetManager.AddPathOrigin(System.String,System.String)
  - Vintagestory.API.Common.IAssetManager.AllAssets
  - Vintagestory.API.Common.IAssetManager.Exists(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IAssetManager.Get(System.String)
  - Vintagestory.API.Common.IAssetManager.Get(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IAssetManager.GetLocations(System.String,System.String)
  - Vintagestory.API.Common.IAssetManager.GetMany(System.String,System.String,System.Boolean)
  - Vintagestory.API.Common.IAssetManager.GetManyInCategory(System.String,System.String,System.String,System.Boolean)
  - Vintagestory.API.Common.IAssetManager.GetMany``1(Vintagestory.API.Common.ILogger,System.String,System.String)
  - Vintagestory.API.Common.IAssetManager.Get``1(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IAssetManager.Origins
  - Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetCategory)
  - Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IAssetManager.TryGet(System.String,System.Boolean)
  - Vintagestory.API.Common.IAssetManager.TryGet(Vintagestory.API.Common.AssetLocation,System.Boolean)
  langs:
  - csharp
  - vb
  name: IAssetManager
  nameWithType: IAssetManager
  fullName: Vintagestory.API.Common.IAssetManager
  type: Interface
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Takes care loading, reloading and managing all files inside the assets folder. All asset names and paths are always converted to lower case.
  example: []
  syntax:
    content: public interface IAssetManager
    content.vb: Public Interface IAssetManager
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.Common.IAssetManager.AllAssets
  commentId: P:Vintagestory.API.Common.IAssetManager.AllAssets
  id: AllAssets
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: AllAssets
  nameWithType: IAssetManager.AllAssets
  fullName: Vintagestory.API.Common.IAssetManager.AllAssets
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: All assets found in the assets folder
  example: []
  syntax:
    content: Dictionary<AssetLocation, IAsset> AllAssets { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IAsset}
    content.vb: ReadOnly Property AllAssets As Dictionary(Of AssetLocation, IAsset)
  overload: Vintagestory.API.Common.IAssetManager.AllAssets*
- uid: Vintagestory.API.Common.IAssetManager.Exists(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IAssetManager.Exists(Vintagestory.API.Common.AssetLocation)
  id: Exists(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Exists(AssetLocation)
  nameWithType: IAssetManager.Exists(AssetLocation)
  fullName: Vintagestory.API.Common.IAssetManager.Exists(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns true if given asset exists in the list of loaded assets
  example: []
  syntax:
    content: bool Exists(AssetLocation location)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function Exists(location As AssetLocation) As Boolean
  overload: Vintagestory.API.Common.IAssetManager.Exists*
- uid: Vintagestory.API.Common.IAssetManager.Add(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IAsset)
  commentId: M:Vintagestory.API.Common.IAssetManager.Add(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IAsset)
  id: Add(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IAsset)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Add(AssetLocation, IAsset)
  nameWithType: IAssetManager.Add(AssetLocation, IAsset)
  fullName: Vintagestory.API.Common.IAssetManager.Add(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IAsset)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Adds a runtime asset to the game, curently used by ModCompatiblityUtil. Allows you do add an asset found at <code class="paramref">path</code> but loaded from path <code class="paramref">asset</code>.Path.
  example: []
  syntax:
    content: void Add(AssetLocation path, IAsset asset)
    parameters:
    - id: path
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    - id: asset
      type: Vintagestory.API.Common.IAsset
      description: ''
    content.vb: Sub Add(path As AssetLocation, asset As IAsset)
  overload: Vintagestory.API.Common.IAssetManager.Add*
- uid: Vintagestory.API.Common.IAssetManager.Get(System.String)
  commentId: M:Vintagestory.API.Common.IAssetManager.Get(System.String)
  id: Get(System.String)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Get(string)
  nameWithType: IAssetManager.Get(string)
  fullName: Vintagestory.API.Common.IAssetManager.Get(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves an asset from given path within the assets folder. Throws an exception when the asset does not exist. Remember to use lower case paths.
  example: []
  syntax:
    content: IAsset Get(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.Common.IAsset
      description: ''
    content.vb: Function [Get](path As String) As IAsset
  overload: Vintagestory.API.Common.IAssetManager.Get*
  nameWithType.vb: IAssetManager.Get(String)
  fullName.vb: Vintagestory.API.Common.IAssetManager.Get(String)
  name.vb: Get(String)
- uid: Vintagestory.API.Common.IAssetManager.Get(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IAssetManager.Get(Vintagestory.API.Common.AssetLocation)
  id: Get(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Get(AssetLocation)
  nameWithType: IAssetManager.Get(AssetLocation)
  fullName: Vintagestory.API.Common.IAssetManager.Get(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves an asset from given path within the assets folder. Throws an exception when the asset does not exist. Remember to use lower case paths.
  example: []
  syntax:
    content: IAsset Get(AssetLocation Location)
    parameters:
    - id: Location
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: Vintagestory.API.Common.IAsset
      description: ''
    content.vb: Function [Get](Location As AssetLocation) As IAsset
  overload: Vintagestory.API.Common.IAssetManager.Get*
- uid: Vintagestory.API.Common.IAssetManager.TryGet(System.String,System.Boolean)
  commentId: M:Vintagestory.API.Common.IAssetManager.TryGet(System.String,System.Boolean)
  id: TryGet(System.String,System.Boolean)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: TryGet(string, bool)
  nameWithType: IAssetManager.TryGet(string, bool)
  fullName: Vintagestory.API.Common.IAssetManager.TryGet(string, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Retrieves an asset from given path within the assets folder. Returns null when the asset does not exist. Remember to use lower case paths.

    <br /><br /> Mods must not call TryGet to get assets before AssetsLoaded stage in a ModSystem - do not load assets in the Start() method!  In StartClientSide() is OK though.  (Or if you absolutely have to load assets in Start(), use IAssetManager.Get(), but it will throw an exception for anything except a base asset.)
  example: []
  syntax:
    content: IAsset TryGet(string Path, bool loadAsset = true)
    parameters:
    - id: Path
      type: System.String
      description: ''
    - id: loadAsset
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.IAsset
      description: ''
    content.vb: Function TryGet(Path As String, loadAsset As Boolean = True) As IAsset
  overload: Vintagestory.API.Common.IAssetManager.TryGet*
  nameWithType.vb: IAssetManager.TryGet(String, Boolean)
  fullName.vb: Vintagestory.API.Common.IAssetManager.TryGet(String, Boolean)
  name.vb: TryGet(String, Boolean)
- uid: Vintagestory.API.Common.IAssetManager.TryGet(Vintagestory.API.Common.AssetLocation,System.Boolean)
  commentId: M:Vintagestory.API.Common.IAssetManager.TryGet(Vintagestory.API.Common.AssetLocation,System.Boolean)
  id: TryGet(Vintagestory.API.Common.AssetLocation,System.Boolean)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: TryGet(AssetLocation, bool)
  nameWithType: IAssetManager.TryGet(AssetLocation, bool)
  fullName: Vintagestory.API.Common.IAssetManager.TryGet(Vintagestory.API.Common.AssetLocation, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Retrieves an asset from given path within the assets folder. Returns null when the asset does not exist. Remember to use lower case paths.

    <br /><br /> Mods must not call TryGet to get assets before AssetsLoaded stage in a ModSystem - do not load assets in the Start() method!  (Or if you absolutely have to load assets in Start(), use IAssetManager.Get(), but it will throw an exception for anything except a base asset.)
  example: []
  syntax:
    content: IAsset TryGet(AssetLocation Location, bool loadAsset = true)
    parameters:
    - id: Location
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    - id: loadAsset
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.IAsset
      description: ''
    content.vb: Function TryGet(Location As AssetLocation, loadAsset As Boolean = True) As IAsset
  overload: Vintagestory.API.Common.IAssetManager.TryGet*
  nameWithType.vb: IAssetManager.TryGet(AssetLocation, Boolean)
  fullName.vb: Vintagestory.API.Common.IAssetManager.TryGet(Vintagestory.API.Common.AssetLocation, Boolean)
  name.vb: TryGet(AssetLocation, Boolean)
- uid: Vintagestory.API.Common.IAssetManager.GetMany(System.String,System.String,System.Boolean)
  commentId: M:Vintagestory.API.Common.IAssetManager.GetMany(System.String,System.String,System.Boolean)
  id: GetMany(System.String,System.String,System.Boolean)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: GetMany(string, string, bool)
  nameWithType: IAssetManager.GetMany(string, string, bool)
  fullName: Vintagestory.API.Common.IAssetManager.GetMany(string, string, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns all assets inside given domain with the given path. If no domain is specified, all domains will be searched.

    The returned list is considered unsorted.
  example: []
  syntax:
    content: List<IAsset> GetMany(string pathBegins, string domain = null, bool loadAsset = true)
    parameters:
    - id: pathBegins
      type: System.String
      description: ''
    - id: domain
      type: System.String
      description: ''
    - id: loadAsset
      type: System.Boolean
      description: Whether it should load the contents of this asset
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.IAsset}
      description: ''
    content.vb: Function GetMany(pathBegins As String, domain As String = Nothing, loadAsset As Boolean = True) As List(Of IAsset)
  overload: Vintagestory.API.Common.IAssetManager.GetMany*
  nameWithType.vb: IAssetManager.GetMany(String, String, Boolean)
  fullName.vb: Vintagestory.API.Common.IAssetManager.GetMany(String, String, Boolean)
  name.vb: GetMany(String, String, Boolean)
- uid: Vintagestory.API.Common.IAssetManager.GetManyInCategory(System.String,System.String,System.String,System.Boolean)
  commentId: M:Vintagestory.API.Common.IAssetManager.GetManyInCategory(System.String,System.String,System.String,System.Boolean)
  id: GetManyInCategory(System.String,System.String,System.String,System.Boolean)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: GetManyInCategory(string, string, string, bool)
  nameWithType: IAssetManager.GetManyInCategory(string, string, string, bool)
  fullName: Vintagestory.API.Common.IAssetManager.GetManyInCategory(string, string, string, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns all assets inside given category with the given path. If no domain is specified, all domains will be searched.

    The returned list is considered unsorted.
  example: []
  syntax:
    content: List<IAsset> GetManyInCategory(string categoryCode, string pathBegins, string domain = null, bool loadAsset = true)
    parameters:
    - id: categoryCode
      type: System.String
      description: See class <xref href="Vintagestory.API.Common.AssetCategory" data-throw-if-not-resolved="false"></xref>
    - id: pathBegins
      type: System.String
      description: ''
    - id: domain
      type: System.String
      description: ''
    - id: loadAsset
      type: System.Boolean
      description: ''
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.IAsset}
      description: ''
    content.vb: Function GetManyInCategory(categoryCode As String, pathBegins As String, domain As String = Nothing, loadAsset As Boolean = True) As List(Of IAsset)
  overload: Vintagestory.API.Common.IAssetManager.GetManyInCategory*
  nameWithType.vb: IAssetManager.GetManyInCategory(String, String, String, Boolean)
  fullName.vb: Vintagestory.API.Common.IAssetManager.GetManyInCategory(String, String, String, Boolean)
  name.vb: GetManyInCategory(String, String, String, Boolean)
- uid: Vintagestory.API.Common.IAssetManager.GetMany``1(Vintagestory.API.Common.ILogger,System.String,System.String)
  commentId: M:Vintagestory.API.Common.IAssetManager.GetMany``1(Vintagestory.API.Common.ILogger,System.String,System.String)
  id: GetMany``1(Vintagestory.API.Common.ILogger,System.String,System.String)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: GetMany<T>(ILogger, string, string)
  nameWithType: IAssetManager.GetMany<T>(ILogger, string, string)
  fullName: Vintagestory.API.Common.IAssetManager.GetMany<T>(Vintagestory.API.Common.ILogger, string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Searches for all assets in given basepath and uses Newtonsoft.Json to automatically turn them into objects. Will log an error to given ILogger if it can't parse the json file and continue with the next asset. Remember to use lower case paths. If no domain is specified, all domains will be searched.

    The returned list is considered unsorted.
  example: []
  syntax:
    content: Dictionary<AssetLocation, T> GetMany<T>(ILogger logger, string pathBegins, string domain = null)
    parameters:
    - id: logger
      type: Vintagestory.API.Common.ILogger
      description: ''
    - id: pathBegins
      type: System.String
      description: ''
    - id: domain
      type: System.String
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{Vintagestory.API.Common.AssetLocation,{T}}
      description: ''
    content.vb: Function GetMany(Of T)(logger As ILogger, pathBegins As String, domain As String = Nothing) As Dictionary(Of AssetLocation, T)
  overload: Vintagestory.API.Common.IAssetManager.GetMany*
  nameWithType.vb: IAssetManager.GetMany(Of T)(ILogger, String, String)
  fullName.vb: Vintagestory.API.Common.IAssetManager.GetMany(Of T)(Vintagestory.API.Common.ILogger, String, String)
  name.vb: GetMany(Of T)(ILogger, String, String)
- uid: Vintagestory.API.Common.IAssetManager.GetLocations(System.String,System.String)
  commentId: M:Vintagestory.API.Common.IAssetManager.GetLocations(System.String,System.String)
  id: GetLocations(System.String,System.String)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: GetLocations(string, string)
  nameWithType: IAssetManager.GetLocations(string, string)
  fullName: Vintagestory.API.Common.IAssetManager.GetLocations(string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns all asset locations that begins with given path and domain. If no domain is specified, all domains will be searched. The returned list is considered unsorted.
  example: []
  syntax:
    content: List<AssetLocation> GetLocations(string pathBegins, string domain = null)
    parameters:
    - id: pathBegins
      type: System.String
      description: ''
    - id: domain
      type: System.String
      description: ''
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.AssetLocation}
      description: ''
    content.vb: Function GetLocations(pathBegins As String, domain As String = Nothing) As List(Of AssetLocation)
  overload: Vintagestory.API.Common.IAssetManager.GetLocations*
  nameWithType.vb: IAssetManager.GetLocations(String, String)
  fullName.vb: Vintagestory.API.Common.IAssetManager.GetLocations(String, String)
  name.vb: GetLocations(String, String)
- uid: Vintagestory.API.Common.IAssetManager.Get``1(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IAssetManager.Get``1(Vintagestory.API.Common.AssetLocation)
  id: Get``1(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Get<T>(AssetLocation)
  nameWithType: IAssetManager.Get<T>(AssetLocation)
  fullName: Vintagestory.API.Common.IAssetManager.Get<T>(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves an asset from given path within the assets folder and uses JSON.NET to automatically turn them into objects. Throws an exception when the asset does not exist or the conversion failed. Remember to use lower case paths.
  example: []
  syntax:
    content: T Get<T>(AssetLocation location)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Function [Get](Of T)(location As AssetLocation) As T
  overload: Vintagestory.API.Common.IAssetManager.Get*
  nameWithType.vb: IAssetManager.Get(Of T)(AssetLocation)
  fullName.vb: Vintagestory.API.Common.IAssetManager.Get(Of T)(Vintagestory.API.Common.AssetLocation)
  name.vb: Get(Of T)(AssetLocation)
- uid: Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetLocation)
  id: Reload(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Reload(AssetLocation)
  nameWithType: IAssetManager.Reload(AssetLocation)
  fullName: Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Reloads all assets in given base location path. It returns the amount of the found locations.
  example: []
  syntax:
    content: int Reload(AssetLocation baseLocation)
    parameters:
    - id: baseLocation
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function Reload(baseLocation As AssetLocation) As Integer
  overload: Vintagestory.API.Common.IAssetManager.Reload*
- uid: Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetCategory)
  commentId: M:Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetCategory)
  id: Reload(Vintagestory.API.Common.AssetCategory)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Reload(AssetCategory)
  nameWithType: IAssetManager.Reload(AssetCategory)
  fullName: Vintagestory.API.Common.IAssetManager.Reload(Vintagestory.API.Common.AssetCategory)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Reloads all assets in given base location path. It returns the amount of the found locations.
  example: []
  syntax:
    content: int Reload(AssetCategory category)
    parameters:
    - id: category
      type: Vintagestory.API.Common.AssetCategory
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function Reload(category As AssetCategory) As Integer
  overload: Vintagestory.API.Common.IAssetManager.Reload*
- uid: Vintagestory.API.Common.IAssetManager.Origins
  commentId: P:Vintagestory.API.Common.IAssetManager.Origins
  id: Origins
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: Origins
  nameWithType: IAssetManager.Origins
  fullName: Vintagestory.API.Common.IAssetManager.Origins
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns all origins in the priority order. Highest (First) to Lowest (Last)
  example: []
  syntax:
    content: List<IAssetOrigin> Origins { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.IAssetOrigin}
      description: ''
    content.vb: ReadOnly Property Origins As List(Of IAssetOrigin)
  overload: Vintagestory.API.Common.IAssetManager.Origins*
- uid: Vintagestory.API.Common.IAssetManager.AddPathOrigin(System.String,System.String)
  commentId: M:Vintagestory.API.Common.IAssetManager.AddPathOrigin(System.String,System.String)
  id: AddPathOrigin(System.String,System.String)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: AddPathOrigin(string, string)
  nameWithType: IAssetManager.AddPathOrigin(string, string)
  fullName: Vintagestory.API.Common.IAssetManager.AddPathOrigin(string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: >-
      [Obsolete("Use AddModOrigin")]

      void AddPathOrigin(string domain, string fullPath)
    parameters:
    - id: domain
      type: System.String
    - id: fullPath
      type: System.String
    content.vb: >-
      <Obsolete("Use AddModOrigin")>

      Sub AddPathOrigin(domain As String, fullPath As String)
  overload: Vintagestory.API.Common.IAssetManager.AddPathOrigin*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AddModOrigin
  nameWithType.vb: IAssetManager.AddPathOrigin(String, String)
  fullName.vb: Vintagestory.API.Common.IAssetManager.AddPathOrigin(String, String)
  name.vb: AddPathOrigin(String, String)
- uid: Vintagestory.API.Common.IAssetManager.AddModOrigin(System.String,System.String)
  commentId: M:Vintagestory.API.Common.IAssetManager.AddModOrigin(System.String,System.String)
  id: AddModOrigin(System.String,System.String)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: AddModOrigin(string, string)
  nameWithType: IAssetManager.AddModOrigin(string, string)
  fullName: Vintagestory.API.Common.IAssetManager.AddModOrigin(string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: void AddModOrigin(string domain, string fullPath)
    parameters:
    - id: domain
      type: System.String
    - id: fullPath
      type: System.String
    content.vb: Sub AddModOrigin(domain As String, fullPath As String)
  overload: Vintagestory.API.Common.IAssetManager.AddModOrigin*
  nameWithType.vb: IAssetManager.AddModOrigin(String, String)
  fullName.vb: Vintagestory.API.Common.IAssetManager.AddModOrigin(String, String)
  name.vb: AddModOrigin(String, String)
- uid: Vintagestory.API.Common.IAssetManager.AddModOrigin(System.String,System.String,System.String)
  commentId: M:Vintagestory.API.Common.IAssetManager.AddModOrigin(System.String,System.String,System.String)
  id: AddModOrigin(System.String,System.String,System.String)
  parent: Vintagestory.API.Common.IAssetManager
  langs:
  - csharp
  - vb
  name: AddModOrigin(string, string, string)
  nameWithType: IAssetManager.AddModOrigin(string, string, string)
  fullName: Vintagestory.API.Common.IAssetManager.AddModOrigin(string, string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: void AddModOrigin(string domain, string fullPath, string pathForReservedCharsCheck)
    parameters:
    - id: domain
      type: System.String
    - id: fullPath
      type: System.String
    - id: pathForReservedCharsCheck
      type: System.String
    content.vb: Sub AddModOrigin(domain As String, fullPath As String, pathForReservedCharsCheck As String)
  overload: Vintagestory.API.Common.IAssetManager.AddModOrigin*
  nameWithType.vb: IAssetManager.AddModOrigin(String, String, String)
  fullName.vb: Vintagestory.API.Common.IAssetManager.AddModOrigin(String, String, String)
  name.vb: AddModOrigin(String, String, String)
references:
- uid: Vintagestory.API.Common
  commentId: N:Vintagestory.API.Common
  href: Vintagestory.html
  name: Vintagestory.API.Common
  nameWithType: Vintagestory.API.Common
  fullName: Vintagestory.API.Common
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: Vintagestory.API.Common.IAssetManager.AllAssets*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.AllAssets
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_AllAssets
  name: AllAssets
  nameWithType: IAssetManager.AllAssets
  fullName: Vintagestory.API.Common.IAssetManager.AllAssets
- uid: System.Collections.Generic.Dictionary{Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IAsset}
  commentId: T:System.Collections.Generic.Dictionary{Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IAsset}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<AssetLocation, IAsset>
  nameWithType: Dictionary<AssetLocation, IAsset>
  fullName: System.Collections.Generic.Dictionary<Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IAsset>
  nameWithType.vb: Dictionary(Of AssetLocation, IAsset)
  fullName.vb: System.Collections.Generic.Dictionary(Of Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IAsset)
  name.vb: Dictionary(Of AssetLocation, IAsset)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Vintagestory.API.Common.AssetLocation
    name: AssetLocation
    href: Vintagestory.API.Common.AssetLocation.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.IAsset
    name: IAsset
    href: Vintagestory.API.Common.IAsset.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.AssetLocation
    name: AssetLocation
    href: Vintagestory.API.Common.AssetLocation.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.IAsset
    name: IAsset
    href: Vintagestory.API.Common.IAsset.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Common.IAssetManager.Exists*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.Exists
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_Exists_Vintagestory_API_Common_AssetLocation_
  name: Exists
  nameWithType: IAssetManager.Exists
  fullName: Vintagestory.API.Common.IAssetManager.Exists
- uid: Vintagestory.API.Common.AssetLocation
  commentId: T:Vintagestory.API.Common.AssetLocation
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.AssetLocation.html
  name: AssetLocation
  nameWithType: AssetLocation
  fullName: Vintagestory.API.Common.AssetLocation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Common.IAssetManager.Add*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.Add
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_Add_Vintagestory_API_Common_AssetLocation_Vintagestory_API_Common_IAsset_
  name: Add
  nameWithType: IAssetManager.Add
  fullName: Vintagestory.API.Common.IAssetManager.Add
- uid: Vintagestory.API.Common.IAsset
  commentId: T:Vintagestory.API.Common.IAsset
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IAsset.html
  name: IAsset
  nameWithType: IAsset
  fullName: Vintagestory.API.Common.IAsset
- uid: Vintagestory.API.Common.IAssetManager.Get*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.Get
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_Get_System_String_
  name: Get
  nameWithType: IAssetManager.Get
  fullName: Vintagestory.API.Common.IAssetManager.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Vintagestory.API.Common.IAssetManager.TryGet*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.TryGet
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_TryGet_System_String_System_Boolean_
  name: TryGet
  nameWithType: IAssetManager.TryGet
  fullName: Vintagestory.API.Common.IAssetManager.TryGet
- uid: Vintagestory.API.Common.IAssetManager.GetMany*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.GetMany
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_GetMany_System_String_System_String_System_Boolean_
  name: GetMany
  nameWithType: IAssetManager.GetMany
  fullName: Vintagestory.API.Common.IAssetManager.GetMany
- uid: System.Collections.Generic.List{Vintagestory.API.Common.IAsset}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.Common.IAsset}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IAsset>
  nameWithType: List<IAsset>
  fullName: System.Collections.Generic.List<Vintagestory.API.Common.IAsset>
  nameWithType.vb: List(Of IAsset)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.Common.IAsset)
  name.vb: List(Of IAsset)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.Common.IAsset
    name: IAsset
    href: Vintagestory.API.Common.IAsset.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.IAsset
    name: IAsset
    href: Vintagestory.API.Common.IAsset.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.AssetCategory
  commentId: T:Vintagestory.API.Common.AssetCategory
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.AssetCategory.html
  name: AssetCategory
  nameWithType: AssetCategory
  fullName: Vintagestory.API.Common.AssetCategory
- uid: Vintagestory.API.Common.IAssetManager.GetManyInCategory*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.GetManyInCategory
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_GetManyInCategory_System_String_System_String_System_String_System_Boolean_
  name: GetManyInCategory
  nameWithType: IAssetManager.GetManyInCategory
  fullName: Vintagestory.API.Common.IAssetManager.GetManyInCategory
- uid: Vintagestory.API.Common.ILogger
  commentId: T:Vintagestory.API.Common.ILogger
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Vintagestory.API.Common.ILogger
- uid: System.Collections.Generic.Dictionary{Vintagestory.API.Common.AssetLocation,{T}}
  commentId: T:System.Collections.Generic.Dictionary{Vintagestory.API.Common.AssetLocation,``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<AssetLocation, T>
  nameWithType: Dictionary<AssetLocation, T>
  fullName: System.Collections.Generic.Dictionary<Vintagestory.API.Common.AssetLocation, T>
  nameWithType.vb: Dictionary(Of AssetLocation, T)
  fullName.vb: System.Collections.Generic.Dictionary(Of Vintagestory.API.Common.AssetLocation, T)
  name.vb: Dictionary(Of AssetLocation, T)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Vintagestory.API.Common.AssetLocation
    name: AssetLocation
    href: Vintagestory.API.Common.AssetLocation.html
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.AssetLocation
    name: AssetLocation
    href: Vintagestory.API.Common.AssetLocation.html
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IAssetManager.GetLocations*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.GetLocations
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_GetLocations_System_String_System_String_
  name: GetLocations
  nameWithType: IAssetManager.GetLocations
  fullName: Vintagestory.API.Common.IAssetManager.GetLocations
- uid: System.Collections.Generic.List{Vintagestory.API.Common.AssetLocation}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.Common.AssetLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AssetLocation>
  nameWithType: List<AssetLocation>
  fullName: System.Collections.Generic.List<Vintagestory.API.Common.AssetLocation>
  nameWithType.vb: List(Of AssetLocation)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.Common.AssetLocation)
  name.vb: List(Of AssetLocation)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.Common.AssetLocation
    name: AssetLocation
    href: Vintagestory.API.Common.AssetLocation.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.AssetLocation
    name: AssetLocation
    href: Vintagestory.API.Common.AssetLocation.html
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Vintagestory.API.Common.IAssetManager.Reload*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.Reload
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_Reload_Vintagestory_API_Common_AssetLocation_
  name: Reload
  nameWithType: IAssetManager.Reload
  fullName: Vintagestory.API.Common.IAssetManager.Reload
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Vintagestory.API.Common.IAssetManager.Origins*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.Origins
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_Origins
  name: Origins
  nameWithType: IAssetManager.Origins
  fullName: Vintagestory.API.Common.IAssetManager.Origins
- uid: System.Collections.Generic.List{Vintagestory.API.Common.IAssetOrigin}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.Common.IAssetOrigin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IAssetOrigin>
  nameWithType: List<IAssetOrigin>
  fullName: System.Collections.Generic.List<Vintagestory.API.Common.IAssetOrigin>
  nameWithType.vb: List(Of IAssetOrigin)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.Common.IAssetOrigin)
  name.vb: List(Of IAssetOrigin)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.Common.IAssetOrigin
    name: IAssetOrigin
    href: Vintagestory.API.Common.IAssetOrigin.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.IAssetOrigin
    name: IAssetOrigin
    href: Vintagestory.API.Common.IAssetOrigin.html
  - name: )
- uid: Vintagestory.API.Common.IAssetManager.AddPathOrigin*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.AddPathOrigin
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_AddPathOrigin_System_String_System_String_
  name: AddPathOrigin
  nameWithType: IAssetManager.AddPathOrigin
  fullName: Vintagestory.API.Common.IAssetManager.AddPathOrigin
- uid: Vintagestory.API.Common.IAssetManager.AddModOrigin*
  commentId: Overload:Vintagestory.API.Common.IAssetManager.AddModOrigin
  href: Vintagestory.API.Common.IAssetManager.html#Vintagestory_API_Common_IAssetManager_AddModOrigin_System_String_System_String_
  name: AddModOrigin
  nameWithType: IAssetManager.AddModOrigin
  fullName: Vintagestory.API.Common.IAssetManager.AddModOrigin
