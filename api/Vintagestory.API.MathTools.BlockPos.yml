### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.MathTools.BlockPos
  commentId: T:Vintagestory.API.MathTools.BlockPos
  id: BlockPos
  parent: Vintagestory.API.MathTools
  children:
  - Vintagestory.API.MathTools.BlockPos.#ctor
  - Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec3i)
  - Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec3i,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec4i)
  - Vintagestory.API.MathTools.BlockPos.Add(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Add(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.FastVec3i)
  - Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.Vec3i)
  - Vintagestory.API.MathTools.BlockPos.AddCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.AddCopy(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.AddCopy(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing)
  - Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.Vec3i)
  - Vintagestory.API.MathTools.BlockPos.AsVec3i
  - Vintagestory.API.MathTools.BlockPos.Copy
  - Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension
  - Vintagestory.API.MathTools.BlockPos.CreateFromBytes(System.IO.BinaryReader)
  - Vintagestory.API.MathTools.BlockPos.DimensionBoundary
  - Vintagestory.API.MathTools.BlockPos.DistanceSqTo(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.BlockPos.DistanceTo(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.BlockPos.DistanceTo(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.DivCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Down(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.DownCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.East
  - Vintagestory.API.MathTools.BlockPos.EastCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Equals(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Equals(System.Object)
  - Vintagestory.API.MathTools.BlockPos.Equals(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.FacingFrom(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.GetHashCode
  - Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo(System.Double,System.Double)
  - Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.InRangeHorizontally(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.InternalY
  - Vintagestory.API.MathTools.BlockPos.Item(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.ManhattenDistance(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.ManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.North
  - Vintagestory.API.MathTools.BlockPos.NorthCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Offset(Vintagestory.API.MathTools.BlockFacing)
  - Vintagestory.API.MathTools.BlockPos.Set(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Set(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.FastVec3i)
  - Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3d)
  - Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3i)
  - Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(Vintagestory.API.MathTools.Vec3d)
  - Vintagestory.API.MathTools.BlockPos.SetAndEquals(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.SetDimension(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.South
  - Vintagestory.API.MathTools.BlockPos.SouthCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Sub(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Sub(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.SubCopy(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.SubCopy(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.ToBytes(System.IO.BinaryWriter)
  - Vintagestory.API.MathTools.BlockPos.ToLocalPosition(Vintagestory.API.Common.ICoreAPI)
  - Vintagestory.API.MathTools.BlockPos.ToString
  - Vintagestory.API.MathTools.BlockPos.ToVec3d
  - Vintagestory.API.MathTools.BlockPos.ToVec3f
  - Vintagestory.API.MathTools.BlockPos.ToVec3i
  - Vintagestory.API.MathTools.BlockPos.Up(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.UpCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.Walk(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3i,System.Action{System.Int32,System.Int32,System.Int32})
  - Vintagestory.API.MathTools.BlockPos.West
  - Vintagestory.API.MathTools.BlockPos.WestCopy(System.Int32)
  - Vintagestory.API.MathTools.BlockPos.X
  - Vintagestory.API.MathTools.BlockPos.Y
  - Vintagestory.API.MathTools.BlockPos.Z
  - Vintagestory.API.MathTools.BlockPos.dimension
  - Vintagestory.API.MathTools.BlockPos.op_Addition(Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.op_Addition(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.op_Division(Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.op_Equality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.op_Inequality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.op_Multiply(System.Int32,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockPos.op_Multiply(Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.op_Subtraction(Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.MathTools.BlockPos.op_Subtraction(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  langs:
  - csharp
  - vb
  name: BlockPos
  nameWithType: BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos
  type: Class
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    A useful data structure when operating with block postions.<br />

    Valuable Hint: Make use of Copy() or the XXXCopy() variants where needed. A common pitfall is writing code like: BlockPos abovePos = pos.Up(); - with this code abovePos and pos will reference to the same object!
  example: []
  syntax:
    content: >-
      [ProtoContract]

      public class BlockPos : IEquatable<BlockPos>, IVec3
    content.vb: >-
      <ProtoContract>

      Public Class BlockPos Implements IEquatable(Of BlockPos), IVec3
  inheritance:
  - System.Object
  derivedClasses:
  - Vintagestory.API.MathTools.FluidBlockPos
  implements:
  - System.IEquatable{Vintagestory.API.MathTools.BlockPos}
  - Vintagestory.API.MathTools.IVec3
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  - Vintagestory.API.MathTools.BlockPos.Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos)
  attributes:
  - type: ProtoBuf.ProtoContractAttribute
    ctor: ProtoBuf.ProtoContractAttribute.#ctor
    arguments: []
- uid: Vintagestory.API.MathTools.BlockPos.X
  commentId: F:Vintagestory.API.MathTools.BlockPos.X
  id: X
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: X
  nameWithType: BlockPos.X
  fullName: Vintagestory.API.MathTools.BlockPos.X
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: >-
      [ProtoMember(1)]

      public int X
    return:
      type: System.Int32
    content.vb: >-
      <ProtoMember(1)>

      Public X As Integer
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
- uid: Vintagestory.API.MathTools.BlockPos.InternalY
  commentId: P:Vintagestory.API.MathTools.BlockPos.InternalY
  id: InternalY
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: InternalY
  nameWithType: BlockPos.InternalY
  fullName: Vintagestory.API.MathTools.BlockPos.InternalY
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: >-
      [ProtoMember(2)]

      public int InternalY { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <ProtoMember(2)>

      Public Property InternalY As Integer
  overload: Vintagestory.API.MathTools.BlockPos.InternalY*
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
- uid: Vintagestory.API.MathTools.BlockPos.Z
  commentId: F:Vintagestory.API.MathTools.BlockPos.Z
  id: Z
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: BlockPos.Z
  fullName: Vintagestory.API.MathTools.BlockPos.Z
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: >-
      [ProtoMember(3)]

      public int Z
    return:
      type: System.Int32
    content.vb: >-
      <ProtoMember(3)>

      Public Z As Integer
  attributes:
  - type: ProtoBuf.ProtoMemberAttribute
    ctor: ProtoBuf.ProtoMemberAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
- uid: Vintagestory.API.MathTools.BlockPos.Y
  commentId: F:Vintagestory.API.MathTools.BlockPos.Y
  id: Y
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: BlockPos.Y
  fullName: Vintagestory.API.MathTools.BlockPos.Y
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: Vintagestory.API.MathTools.BlockPos.dimension
  commentId: F:Vintagestory.API.MathTools.BlockPos.dimension
  id: dimension
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: dimension
  nameWithType: BlockPos.dimension
  fullName: Vintagestory.API.MathTools.BlockPos.dimension
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public int dimension
    return:
      type: System.Int32
    content.vb: Public dimension As Integer
- uid: Vintagestory.API.MathTools.BlockPos.DimensionBoundary
  commentId: F:Vintagestory.API.MathTools.BlockPos.DimensionBoundary
  id: DimensionBoundary
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: DimensionBoundary
  nameWithType: BlockPos.DimensionBoundary
  fullName: Vintagestory.API.MathTools.BlockPos.DimensionBoundary
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int DimensionBoundary = 32768
    return:
      type: System.Int32
    content.vb: Public Const DimensionBoundary As Integer = 32768
- uid: Vintagestory.API.MathTools.BlockPos.#ctor
  commentId: M:Vintagestory.API.MathTools.BlockPos.#ctor
  id: '#ctor'
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: BlockPos()
  nameWithType: BlockPos.BlockPos()
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos()
  type: Constructor
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: >-
      [Obsolete("Not dimension-aware. Use new BlockPos(dimensionId) where possible")]

      public BlockPos()
    content.vb: >-
      <Obsolete("Not dimension-aware. Use new BlockPos(dimensionId) where possible")>

      Public Sub New()
  overload: Vintagestory.API.MathTools.BlockPos.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not dimension-aware. Use new BlockPos(dimensionId) where possible
  nameWithType.vb: BlockPos.New()
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New()
  name.vb: New()
- uid: Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: BlockPos(int)
  nameWithType: BlockPos.BlockPos(int)
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos(int)
  type: Constructor
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos(int dim)
    parameters:
    - id: dim
      type: System.Int32
    content.vb: Public Sub New([dim] As Integer)
  overload: Vintagestory.API.MathTools.BlockPos.#ctor*
  nameWithType.vb: BlockPos.New(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New(Integer)
  name.vb: New(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: BlockPos(int, int, int)
  nameWithType: BlockPos.BlockPos(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos(int, int, int)
  type: Constructor
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: >-
      [Obsolete("Not dimension-aware. Use overload with a dimension parameter instead")]

      public BlockPos(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    content.vb: >-
      <Obsolete("Not dimension-aware. Use overload with a dimension parameter instead")>

      Public Sub New(x As Integer, y As Integer, z As Integer)
  overload: Vintagestory.API.MathTools.BlockPos.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not dimension-aware. Use overload with a dimension parameter instead
  nameWithType.vb: BlockPos.New(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New(Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: BlockPos(int, int, int, int)
  nameWithType: BlockPos.BlockPos(int, int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos(int, int, int, int)
  type: Constructor
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos(int x, int y, int z, int dim)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    - id: dim
      type: System.Int32
    content.vb: Public Sub New(x As Integer, y As Integer, z As Integer, [dim] As Integer)
  overload: Vintagestory.API.MathTools.BlockPos.#ctor*
  nameWithType.vb: BlockPos.New(Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New(Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec3i)
  commentId: M:Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec3i)
  id: '#ctor(Vintagestory.API.MathTools.Vec3i)'
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: BlockPos(Vec3i)
  nameWithType: BlockPos.BlockPos(Vec3i)
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos(Vintagestory.API.MathTools.Vec3i)
  type: Constructor
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: >-
      [Obsolete("Not dimension-aware. Use overload with a dimension parameter instead")]

      public BlockPos(Vec3i vec)
    parameters:
    - id: vec
      type: Vintagestory.API.MathTools.Vec3i
    content.vb: >-
      <Obsolete("Not dimension-aware. Use overload with a dimension parameter instead")>

      Public Sub New(vec As Vec3i)
  overload: Vintagestory.API.MathTools.BlockPos.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Not dimension-aware. Use overload with a dimension parameter instead
  nameWithType.vb: BlockPos.New(Vec3i)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New(Vintagestory.API.MathTools.Vec3i)
  name.vb: New(Vec3i)
- uid: Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec3i,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec3i,System.Int32)
  id: '#ctor(Vintagestory.API.MathTools.Vec3i,System.Int32)'
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: BlockPos(Vec3i, int)
  nameWithType: BlockPos.BlockPos(Vec3i, int)
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos(Vintagestory.API.MathTools.Vec3i, int)
  type: Constructor
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos(Vec3i vec, int dim)
    parameters:
    - id: vec
      type: Vintagestory.API.MathTools.Vec3i
    - id: dim
      type: System.Int32
    content.vb: Public Sub New(vec As Vec3i, [dim] As Integer)
  overload: Vintagestory.API.MathTools.BlockPos.#ctor*
  nameWithType.vb: BlockPos.New(Vec3i, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New(Vintagestory.API.MathTools.Vec3i, Integer)
  name.vb: New(Vec3i, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec4i)
  commentId: M:Vintagestory.API.MathTools.BlockPos.#ctor(Vintagestory.API.MathTools.Vec4i)
  id: '#ctor(Vintagestory.API.MathTools.Vec4i)'
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: BlockPos(Vec4i)
  nameWithType: BlockPos.BlockPos(Vec4i)
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos(Vintagestory.API.MathTools.Vec4i)
  type: Constructor
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Note - for backwards compatibility, this is *not* dimension-aware; explicitly set the dimension in the resulting BlockPos if you need to
  example: []
  syntax:
    content: public BlockPos(Vec4i vec)
    parameters:
    - id: vec
      type: Vintagestory.API.MathTools.Vec4i
    content.vb: Public Sub New(vec As Vec4i)
  overload: Vintagestory.API.MathTools.BlockPos.#ctor*
  nameWithType.vb: BlockPos.New(Vec4i)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New(Vintagestory.API.MathTools.Vec4i)
  name.vb: New(Vec4i)
- uid: Vintagestory.API.MathTools.BlockPos.Item(System.Int32)
  commentId: P:Vintagestory.API.MathTools.BlockPos.Item(System.Int32)
  id: Item(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: BlockPos.this[int]
  fullName: Vintagestory.API.MathTools.BlockPos.this[int]
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: 0 = x, 1 = y, 2 = z
  example: []
  syntax:
    content: public int this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Default Property this[](i As Integer) As Integer
  overload: Vintagestory.API.MathTools.BlockPos.Item*
  nameWithType.vb: BlockPos.this[](Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.this[](Integer)
  name.vb: this[](Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Up(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Up(System.Int32)
  id: Up(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Up(int)
  nameWithType: BlockPos.Up(int)
  fullName: Vintagestory.API.MathTools.BlockPos.Up(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Move the position vertically up
  example: []
  syntax:
    content: public BlockPos Up(int dy = 1)
    parameters:
    - id: dy
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Up(dy As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Up*
  nameWithType.vb: BlockPos.Up(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Up(Integer)
  name.vb: Up(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Down(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Down(System.Int32)
  id: Down(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Down(int)
  nameWithType: BlockPos.Down(int)
  fullName: Vintagestory.API.MathTools.BlockPos.Down(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Move the position vertically down
  example: []
  syntax:
    content: public BlockPos Down(int dy = 1)
    parameters:
    - id: dy
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Down(dy As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Down*
  nameWithType.vb: BlockPos.Down(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Down(Integer)
  name.vb: Down(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3d)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3d)
  id: Set(Vintagestory.API.MathTools.Vec3d)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Set(Vec3d)
  nameWithType: BlockPos.Set(Vec3d)
  fullName: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3d)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Not dimension aware (but existing dimension in this BlockPos will be preserved) - use SetAndCorrectDimension() for dimension awareness
  example: []
  syntax:
    content: public BlockPos Set(Vec3d origin)
    parameters:
    - id: origin
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function [Set](origin As Vec3d) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Set*
- uid: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3i)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3i)
  id: Set(Vintagestory.API.MathTools.Vec3i)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Set(Vec3i)
  nameWithType: BlockPos.Set(Vec3i)
  fullName: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.Vec3i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos Set(Vec3i pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.Vec3i
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function [Set](pos As Vec3i) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Set*
- uid: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.FastVec3i)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.FastVec3i)
  id: Set(Vintagestory.API.MathTools.FastVec3i)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Set(FastVec3i)
  nameWithType: BlockPos.Set(FastVec3i)
  fullName: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.FastVec3i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos Set(FastVec3i pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.FastVec3i
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function [Set](pos As FastVec3i) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Set*
- uid: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(Vintagestory.API.MathTools.Vec3d)
  commentId: M:Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(Vintagestory.API.MathTools.Vec3d)
  id: SetAndCorrectDimension(Vintagestory.API.MathTools.Vec3d)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: SetAndCorrectDimension(Vec3d)
  nameWithType: BlockPos.SetAndCorrectDimension(Vec3d)
  fullName: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(Vintagestory.API.MathTools.Vec3d)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Dimension aware version of Set() - use this if the Vec3d has the dimension embedded in the Y coordinate (e.g. Y == 65536+ for dimension 2)
  example: []
  syntax:
    content: public BlockPos SetAndCorrectDimension(Vec3d origin)
    parameters:
    - id: origin
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function SetAndCorrectDimension(origin As Vec3d) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension*
- uid: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(System.Int32,System.Int32,System.Int32)
  id: SetAndCorrectDimension(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: SetAndCorrectDimension(int, int, int)
  nameWithType: BlockPos.SetAndCorrectDimension(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Dimension aware version of Set() - use this if there is a dimension embedded in the y coordinate (e.g. y == 65536+ for dimension 2)
  example: []
  syntax:
    content: public BlockPos SetAndCorrectDimension(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function SetAndCorrectDimension(x As Integer, y As Integer, z As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension*
  nameWithType.vb: BlockPos.SetAndCorrectDimension(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension(Integer, Integer, Integer)
  name.vb: SetAndCorrectDimension(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Set(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Set(System.Int32,System.Int32,System.Int32)
  id: Set(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Set(int, int, int)
  nameWithType: BlockPos.Set(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.Set(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Sets XYZ to new values - not dimension aware (but existing dimension will be preserved) - use SetAndCorrectDimension() for dimension awareness
  example: []
  syntax:
    content: public BlockPos Set(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function [Set](x As Integer, y As Integer, z As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Set*
  nameWithType.vb: BlockPos.Set(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Set(Integer, Integer, Integer)
  name.vb: Set(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Set(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Set(System.Single,System.Single,System.Single)
  id: Set(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Set(float, float, float)
  nameWithType: BlockPos.Set(float, float, float)
  fullName: Vintagestory.API.MathTools.BlockPos.Set(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos Set(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function [Set](x As Single, y As Single, z As Single) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Set*
  nameWithType.vb: BlockPos.Set(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Set(Single, Single, Single)
  name.vb: Set(Single, Single, Single)
- uid: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.BlockPos)
  id: Set(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Set(BlockPos)
  nameWithType: BlockPos.Set(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.Set(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos Set(BlockPos blockPos)
    parameters:
    - id: blockPos
      type: Vintagestory.API.MathTools.BlockPos
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function [Set](blockPos As BlockPos) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Set*
- uid: Vintagestory.API.MathTools.BlockPos.SetDimension(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.SetDimension(System.Int32)
  id: SetDimension(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: SetDimension(int)
  nameWithType: BlockPos.SetDimension(int)
  fullName: Vintagestory.API.MathTools.BlockPos.SetDimension(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos SetDimension(int dim)
    parameters:
    - id: dim
      type: System.Int32
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function SetDimension([dim] As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.SetDimension*
  nameWithType.vb: BlockPos.SetDimension(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.SetDimension(Integer)
  name.vb: SetDimension(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.SetAndEquals(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.SetAndEquals(System.Int32,System.Int32,System.Int32)
  id: SetAndEquals(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: SetAndEquals(int, int, int)
  nameWithType: BlockPos.SetAndEquals(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.SetAndEquals(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Sets this BlockPos to the x,y,z values given, and returns a boolean stating if the existing values were already equal to x,y,z
  example: []
  syntax:
    content: public bool SetAndEquals(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: Returns true if the BlockPos already held these exact x, y, z values (the .Set operation has not changed anything)<br />Returns false if the .Set operation caused a change to the BlockPos
    content.vb: Public Function SetAndEquals(x As Integer, y As Integer, z As Integer) As Boolean
  overload: Vintagestory.API.MathTools.BlockPos.SetAndEquals*
  nameWithType.vb: BlockPos.SetAndEquals(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.SetAndEquals(Integer, Integer, Integer)
  name.vb: SetAndEquals(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.ToBytes(System.IO.BinaryWriter)
  commentId: M:Vintagestory.API.MathTools.BlockPos.ToBytes(System.IO.BinaryWriter)
  id: ToBytes(System.IO.BinaryWriter)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ToBytes(BinaryWriter)
  nameWithType: BlockPos.ToBytes(BinaryWriter)
  fullName: Vintagestory.API.MathTools.BlockPos.ToBytes(System.IO.BinaryWriter)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public void ToBytes(BinaryWriter writer)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
    content.vb: Public Sub ToBytes(writer As BinaryWriter)
  overload: Vintagestory.API.MathTools.BlockPos.ToBytes*
- uid: Vintagestory.API.MathTools.BlockPos.ToLocalPosition(Vintagestory.API.Common.ICoreAPI)
  commentId: M:Vintagestory.API.MathTools.BlockPos.ToLocalPosition(Vintagestory.API.Common.ICoreAPI)
  id: ToLocalPosition(Vintagestory.API.Common.ICoreAPI)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ToLocalPosition(ICoreAPI)
  nameWithType: BlockPos.ToLocalPosition(ICoreAPI)
  fullName: Vintagestory.API.MathTools.BlockPos.ToLocalPosition(Vintagestory.API.Common.ICoreAPI)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Convert a block position to coordinates relative to the world spawn position. Note this is dimension unaware
  example: []
  syntax:
    content: public Vec3i ToLocalPosition(ICoreAPI api)
    parameters:
    - id: api
      type: Vintagestory.API.Common.ICoreAPI
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec3i
      description: ''
    content.vb: Public Function ToLocalPosition(api As ICoreAPI) As Vec3i
  overload: Vintagestory.API.MathTools.BlockPos.ToLocalPosition*
- uid: Vintagestory.API.MathTools.BlockPos.West
  commentId: M:Vintagestory.API.MathTools.BlockPos.West
  id: West
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: West()
  nameWithType: BlockPos.West()
  fullName: Vintagestory.API.MathTools.BlockPos.West()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos West()
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function West() As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.West*
- uid: Vintagestory.API.MathTools.BlockPos.CreateFromBytes(System.IO.BinaryReader)
  commentId: M:Vintagestory.API.MathTools.BlockPos.CreateFromBytes(System.IO.BinaryReader)
  id: CreateFromBytes(System.IO.BinaryReader)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: CreateFromBytes(BinaryReader)
  nameWithType: BlockPos.CreateFromBytes(BinaryReader)
  fullName: Vintagestory.API.MathTools.BlockPos.CreateFromBytes(System.IO.BinaryReader)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos CreateFromBytes(BinaryReader reader)
    parameters:
    - id: reader
      type: System.IO.BinaryReader
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Function CreateFromBytes(reader As BinaryReader) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.CreateFromBytes*
- uid: Vintagestory.API.MathTools.BlockPos.North
  commentId: M:Vintagestory.API.MathTools.BlockPos.North
  id: North
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: North()
  nameWithType: BlockPos.North()
  fullName: Vintagestory.API.MathTools.BlockPos.North()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos North()
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function North() As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.North*
- uid: Vintagestory.API.MathTools.BlockPos.East
  commentId: M:Vintagestory.API.MathTools.BlockPos.East
  id: East
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: East()
  nameWithType: BlockPos.East()
  fullName: Vintagestory.API.MathTools.BlockPos.East()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos East()
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function East() As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.East*
- uid: Vintagestory.API.MathTools.BlockPos.South
  commentId: M:Vintagestory.API.MathTools.BlockPos.South
  id: South
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: South()
  nameWithType: BlockPos.South()
  fullName: Vintagestory.API.MathTools.BlockPos.South()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos South()
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function South() As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.South*
- uid: Vintagestory.API.MathTools.BlockPos.FacingFrom(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.FacingFrom(Vintagestory.API.MathTools.BlockPos)
  id: FacingFrom(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: FacingFrom(BlockPos)
  nameWithType: BlockPos.FacingFrom(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.FacingFrom(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the direction moved from the other blockPos, to get to this BlockPos
  example: []
  syntax:
    content: public BlockFacing FacingFrom(BlockPos other)
    parameters:
    - id: other
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Function FacingFrom(other As BlockPos) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockPos.FacingFrom*
- uid: Vintagestory.API.MathTools.BlockPos.WestCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.WestCopy(System.Int32)
  id: WestCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: WestCopy(int)
  nameWithType: BlockPos.WestCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.WestCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position with the x-position adjusted by -<code class="paramref">length</code>
  example: []
  syntax:
    content: public BlockPos WestCopy(int length = 1)
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function WestCopy(length As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.WestCopy*
  nameWithType.vb: BlockPos.WestCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.WestCopy(Integer)
  name.vb: WestCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.SouthCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.SouthCopy(System.Int32)
  id: SouthCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: SouthCopy(int)
  nameWithType: BlockPos.SouthCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.SouthCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position with the z-position adjusted by +<code class="paramref">length</code>
  example: []
  syntax:
    content: public BlockPos SouthCopy(int length = 1)
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function SouthCopy(length As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.SouthCopy*
  nameWithType.vb: BlockPos.SouthCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.SouthCopy(Integer)
  name.vb: SouthCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.EastCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.EastCopy(System.Int32)
  id: EastCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: EastCopy(int)
  nameWithType: BlockPos.EastCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.EastCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position with the x-position adjusted by +<code class="paramref">length</code>
  example: []
  syntax:
    content: public BlockPos EastCopy(int length = 1)
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function EastCopy(length As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.EastCopy*
  nameWithType.vb: BlockPos.EastCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.EastCopy(Integer)
  name.vb: EastCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.NorthCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.NorthCopy(System.Int32)
  id: NorthCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: NorthCopy(int)
  nameWithType: BlockPos.NorthCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.NorthCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position with the z-position adjusted by -<code class="paramref">length</code>
  example: []
  syntax:
    content: public BlockPos NorthCopy(int length = 1)
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function NorthCopy(length As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.NorthCopy*
  nameWithType.vb: BlockPos.NorthCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.NorthCopy(Integer)
  name.vb: NorthCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.DownCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.DownCopy(System.Int32)
  id: DownCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: DownCopy(int)
  nameWithType: BlockPos.DownCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.DownCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position with the y-position adjusted by -<code class="paramref">length</code>
  example: []
  syntax:
    content: public BlockPos DownCopy(int length = 1)
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function DownCopy(length As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.DownCopy*
  nameWithType.vb: BlockPos.DownCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.DownCopy(Integer)
  name.vb: DownCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.UpCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.UpCopy(System.Int32)
  id: UpCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: UpCopy(int)
  nameWithType: BlockPos.UpCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.UpCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position with the y-position adjusted by +<code class="paramref">length</code>
  example: []
  syntax:
    content: public BlockPos UpCopy(int length = 1)
    parameters:
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function UpCopy(length As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.UpCopy*
  nameWithType.vb: BlockPos.UpCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.UpCopy(Integer)
  name.vb: UpCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Copy
  commentId: M:Vintagestory.API.MathTools.BlockPos.Copy
  id: Copy
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: BlockPos.Copy()
  fullName: Vintagestory.API.MathTools.BlockPos.Copy()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position
  example: []
  syntax:
    content: public virtual BlockPos Copy()
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Overridable Function Copy() As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Copy*
- uid: Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension
  commentId: M:Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension
  id: CopyAndCorrectDimension
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: CopyAndCorrectDimension()
  nameWithType: BlockPos.CopyAndCorrectDimension()
  fullName: Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position, obtaining the correct dimension value from the Y value
  example: []
  syntax:
    content: public virtual BlockPos CopyAndCorrectDimension()
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Overridable Function CopyAndCorrectDimension() As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension*
- uid: Vintagestory.API.MathTools.BlockPos.Add(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Add(System.Single,System.Single,System.Single)
  id: Add(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Add(float, float, float)
  nameWithType: BlockPos.Add(float, float, float)
  fullName: Vintagestory.API.MathTools.BlockPos.Add(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Offsets the position by given xyz
  example: []
  syntax:
    content: public BlockPos Add(float dx, float dy, float dz)
    parameters:
    - id: dx
      type: System.Single
      description: ''
    - id: dy
      type: System.Single
      description: ''
    - id: dz
      type: System.Single
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Add(dx As Single, dy As Single, dz As Single) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Add*
  nameWithType.vb: BlockPos.Add(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Add(Single, Single, Single)
  name.vb: Add(Single, Single, Single)
- uid: Vintagestory.API.MathTools.BlockPos.Add(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Add(System.Int32,System.Int32,System.Int32)
  id: Add(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Add(int, int, int)
  nameWithType: BlockPos.Add(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.Add(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Offsets the position by given xyz
  example: []
  syntax:
    content: public BlockPos Add(int dx, int dy, int dz)
    parameters:
    - id: dx
      type: System.Int32
      description: ''
    - id: dy
      type: System.Int32
      description: ''
    - id: dz
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Add(dx As Integer, dy As Integer, dz As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Add*
  nameWithType.vb: BlockPos.Add(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Add(Integer, Integer, Integer)
  name.vb: Add(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.Vec3i)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.Vec3i)
  id: Add(Vintagestory.API.MathTools.Vec3i)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Add(Vec3i)
  nameWithType: BlockPos.Add(Vec3i)
  fullName: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.Vec3i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Offsets the position by given xyz vector
  example: []
  syntax:
    content: public BlockPos Add(Vec3i vector)
    parameters:
    - id: vector
      type: Vintagestory.API.MathTools.Vec3i
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Add(vector As Vec3i) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Add*
- uid: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.FastVec3i)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.FastVec3i)
  id: Add(Vintagestory.API.MathTools.FastVec3i)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Add(FastVec3i)
  nameWithType: BlockPos.Add(FastVec3i)
  fullName: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.FastVec3i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Offsets the position by given xyz vector
  example: []
  syntax:
    content: public BlockPos Add(FastVec3i vector)
    parameters:
    - id: vector
      type: Vintagestory.API.MathTools.FastVec3i
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Add(vector As FastVec3i) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Add*
- uid: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockPos)
  id: Add(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Add(BlockPos)
  nameWithType: BlockPos.Add(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Offsets the position by given xyz vector
  example: []
  syntax:
    content: public BlockPos Add(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Add(pos As BlockPos) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Add*
- uid: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  id: Add(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Add(BlockFacing, int)
  nameWithType: BlockPos.Add(BlockFacing, int)
  fullName: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockFacing, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Offsets the position into the direction of given block face
  example: []
  syntax:
    content: public BlockPos Add(BlockFacing facing, int length = 1)
    parameters:
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Add(facing As BlockFacing, length As Integer = 1) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Add*
  nameWithType.vb: BlockPos.Add(BlockFacing, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Add(Vintagestory.API.MathTools.BlockFacing, Integer)
  name.vb: Add(BlockFacing, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Offset(Vintagestory.API.MathTools.BlockFacing)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Offset(Vintagestory.API.MathTools.BlockFacing)
  id: Offset(Vintagestory.API.MathTools.BlockFacing)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Offset(BlockFacing)
  nameWithType: BlockPos.Offset(BlockFacing)
  fullName: Vintagestory.API.MathTools.BlockPos.Offset(Vintagestory.API.MathTools.BlockFacing)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Offsets the position into the direction of given block face
  example: []
  syntax:
    content: public BlockPos Offset(BlockFacing facing)
    parameters:
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function Offset(facing As BlockFacing) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Offset*
- uid: Vintagestory.API.MathTools.BlockPos.AddCopy(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.BlockPos.AddCopy(System.Single,System.Single,System.Single)
  id: AddCopy(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: AddCopy(float, float, float)
  nameWithType: BlockPos.AddCopy(float, float, float)
  fullName: Vintagestory.API.MathTools.BlockPos.AddCopy(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position and offsets it by given xyz
  example: []
  syntax:
    content: public BlockPos AddCopy(float dx, float dy, float dz)
    parameters:
    - id: dx
      type: System.Single
      description: ''
    - id: dy
      type: System.Single
      description: ''
    - id: dz
      type: System.Single
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function AddCopy(dx As Single, dy As Single, dz As Single) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.AddCopy*
  nameWithType.vb: BlockPos.AddCopy(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.AddCopy(Single, Single, Single)
  name.vb: AddCopy(Single, Single, Single)
- uid: Vintagestory.API.MathTools.BlockPos.AddCopy(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.AddCopy(System.Int32,System.Int32,System.Int32)
  id: AddCopy(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: AddCopy(int, int, int)
  nameWithType: BlockPos.AddCopy(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.AddCopy(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position and offsets it by given xyz
  example: []
  syntax:
    content: public BlockPos AddCopy(int dx, int dy, int dz)
    parameters:
    - id: dx
      type: System.Int32
      description: ''
    - id: dy
      type: System.Int32
      description: ''
    - id: dz
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function AddCopy(dx As Integer, dy As Integer, dz As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.AddCopy*
  nameWithType.vb: BlockPos.AddCopy(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.AddCopy(Integer, Integer, Integer)
  name.vb: AddCopy(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.AddCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.AddCopy(System.Int32)
  id: AddCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: AddCopy(int)
  nameWithType: BlockPos.AddCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.AddCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position and offsets it by given xyz
  example: []
  syntax:
    content: public BlockPos AddCopy(int xyz)
    parameters:
    - id: xyz
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function AddCopy(xyz As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.AddCopy*
  nameWithType.vb: BlockPos.AddCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.AddCopy(Integer)
  name.vb: AddCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.Vec3i)
  commentId: M:Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.Vec3i)
  id: AddCopy(Vintagestory.API.MathTools.Vec3i)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: AddCopy(Vec3i)
  nameWithType: BlockPos.AddCopy(Vec3i)
  fullName: Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.Vec3i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position and offsets it by given xyz
  example: []
  syntax:
    content: public BlockPos AddCopy(Vec3i vector)
    parameters:
    - id: vector
      type: Vintagestory.API.MathTools.Vec3i
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function AddCopy(vector As Vec3i) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.AddCopy*
- uid: Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing)
  commentId: M:Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing)
  id: AddCopy(Vintagestory.API.MathTools.BlockFacing)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: AddCopy(BlockFacing)
  nameWithType: BlockPos.AddCopy(BlockFacing)
  fullName: Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position and offsets it in the direction of given block face
  example: []
  syntax:
    content: public BlockPos AddCopy(BlockFacing facing)
    parameters:
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function AddCopy(facing As BlockFacing) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.AddCopy*
- uid: Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  id: AddCopy(Vintagestory.API.MathTools.BlockFacing,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: AddCopy(BlockFacing, int)
  nameWithType: BlockPos.AddCopy(BlockFacing, int)
  fullName: Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position and offsets it in the direction of given block face
  example: []
  syntax:
    content: public BlockPos AddCopy(BlockFacing facing, int length)
    parameters:
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    - id: length
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function AddCopy(facing As BlockFacing, length As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.AddCopy*
  nameWithType.vb: BlockPos.AddCopy(BlockFacing, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.AddCopy(Vintagestory.API.MathTools.BlockFacing, Integer)
  name.vb: AddCopy(BlockFacing, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.Sub(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Sub(Vintagestory.API.MathTools.BlockPos)
  id: Sub(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Sub(BlockPos)
  nameWithType: BlockPos.Sub(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.Sub(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Substract a position =&gt; you'll have the manhatten distance
  example: []
  syntax:
    content: public BlockPos Sub(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function [Sub](pos As BlockPos) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Sub*
- uid: Vintagestory.API.MathTools.BlockPos.Sub(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Sub(System.Int32,System.Int32,System.Int32)
  id: Sub(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Sub(int, int, int)
  nameWithType: BlockPos.Sub(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.Sub(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Substract a position =&gt; you'll have the manhatten distance
  example: []
  syntax:
    content: public BlockPos Sub(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function [Sub](x As Integer, y As Integer, z As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.Sub*
  nameWithType.vb: BlockPos.Sub(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Sub(Integer, Integer, Integer)
  name.vb: Sub(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.SubCopy(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.SubCopy(Vintagestory.API.MathTools.BlockPos)
  id: SubCopy(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: SubCopy(BlockPos)
  nameWithType: BlockPos.SubCopy(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.SubCopy(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Substract a position =&gt; you'll have the manhatten distance
  example: []
  syntax:
    content: public BlockPos SubCopy(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function SubCopy(pos As BlockPos) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.SubCopy*
- uid: Vintagestory.API.MathTools.BlockPos.SubCopy(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.SubCopy(System.Int32,System.Int32,System.Int32)
  id: SubCopy(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: SubCopy(int, int, int)
  nameWithType: BlockPos.SubCopy(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.SubCopy(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public BlockPos SubCopy(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Function SubCopy(x As Integer, y As Integer, z As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.SubCopy*
  nameWithType.vb: BlockPos.SubCopy(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.SubCopy(Integer, Integer, Integer)
  name.vb: SubCopy(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.DivCopy(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.DivCopy(System.Int32)
  id: DivCopy(System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: DivCopy(int)
  nameWithType: BlockPos.DivCopy(int)
  fullName: Vintagestory.API.MathTools.BlockPos.DivCopy(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a copy of this blocks position and divides it by given factor
  example: []
  syntax:
    content: public BlockPos DivCopy(int factor)
    parameters:
    - id: factor
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Function DivCopy(factor As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.DivCopy*
  nameWithType.vb: BlockPos.DivCopy(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.DivCopy(Integer)
  name.vb: DivCopy(Integer)
- uid: Vintagestory.API.MathTools.BlockPos.DistanceTo(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.DistanceTo(Vintagestory.API.MathTools.BlockPos)
  id: DistanceTo(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: DistanceTo(BlockPos)
  nameWithType: BlockPos.DistanceTo(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.DistanceTo(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the Euclidean distance to between this and given position. Note if dimensions are different returns maximum value (i.e. infinite)
  example: []
  syntax:
    content: public float DistanceTo(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function DistanceTo(pos As BlockPos) As Single
  overload: Vintagestory.API.MathTools.BlockPos.DistanceTo*
- uid: Vintagestory.API.MathTools.BlockPos.DistanceTo(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.BlockPos.DistanceTo(System.Double,System.Double,System.Double)
  id: DistanceTo(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: DistanceTo(double, double, double)
  nameWithType: BlockPos.DistanceTo(double, double, double)
  fullName: Vintagestory.API.MathTools.BlockPos.DistanceTo(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the Euclidean distance to between this and given position. Note this is dimension unaware
  example: []
  syntax:
    content: public float DistanceTo(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
      description: ''
    - id: y
      type: System.Double
      description: ''
    - id: z
      type: System.Double
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function DistanceTo(x As Double, y As Double, z As Double) As Single
  overload: Vintagestory.API.MathTools.BlockPos.DistanceTo*
  nameWithType.vb: BlockPos.DistanceTo(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.DistanceTo(Double, Double, Double)
  name.vb: DistanceTo(Double, Double, Double)
- uid: Vintagestory.API.MathTools.BlockPos.DistanceSqTo(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.BlockPos.DistanceSqTo(System.Double,System.Double,System.Double)
  id: DistanceSqTo(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: DistanceSqTo(double, double, double)
  nameWithType: BlockPos.DistanceSqTo(double, double, double)
  fullName: Vintagestory.API.MathTools.BlockPos.DistanceSqTo(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the squared Euclidean distance to between this and given position. Dimension aware
  example: []
  syntax:
    content: public float DistanceSqTo(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
      description: ''
    - id: y
      type: System.Double
      description: ''
    - id: z
      type: System.Double
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function DistanceSqTo(x As Double, y As Double, z As Double) As Single
  overload: Vintagestory.API.MathTools.BlockPos.DistanceSqTo*
  nameWithType.vb: BlockPos.DistanceSqTo(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.DistanceSqTo(Double, Double, Double)
  name.vb: DistanceSqTo(Double, Double, Double)
- uid: Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge(System.Double,System.Double,System.Double)
  id: DistanceSqToNearerEdge(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: DistanceSqToNearerEdge(double, double, double)
  nameWithType: BlockPos.DistanceSqToNearerEdge(double, double, double)
  fullName: Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the squared Euclidean distance between the nearer edge of this blockpos (assumed 1 x 0.75 x 1 cube) and given position

    The 0.75 offset is because the "heat source" is likely to be above the base position of this block: it's approximate

    Note this is dimension unaware
  example: []
  syntax:
    content: public double DistanceSqToNearerEdge(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Function DistanceSqToNearerEdge(x As Double, y As Double, z As Double) As Double
  overload: Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge*
  nameWithType.vb: BlockPos.DistanceSqToNearerEdge(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge(Double, Double, Double)
  name.vb: DistanceSqToNearerEdge(Double, Double, Double)
- uid: Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo(System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo(System.Double,System.Double)
  id: HorDistanceSqTo(System.Double,System.Double)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: HorDistanceSqTo(double, double)
  nameWithType: BlockPos.HorDistanceSqTo(double, double)
  fullName: Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo(double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the squared Euclidean horizontal distance to between this and given position

    Note this is dimension unaware
  example: []
  syntax:
    content: public float HorDistanceSqTo(double x, double z)
    parameters:
    - id: x
      type: System.Double
      description: ''
    - id: z
      type: System.Double
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function HorDistanceSqTo(x As Double, z As Double) As Single
  overload: Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo*
  nameWithType.vb: BlockPos.HorDistanceSqTo(Double, Double)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo(Double, Double)
  name.vb: HorDistanceSqTo(Double, Double)
- uid: Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  id: HorizontalManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: HorizontalManhattenDistance(BlockPos)
  nameWithType: BlockPos.HorizontalManhattenDistance(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the manhatten distance to given position
  example: []
  syntax:
    content: public int HorizontalManhattenDistance(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function HorizontalManhattenDistance(pos As BlockPos) As Integer
  overload: Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance*
- uid: Vintagestory.API.MathTools.BlockPos.ManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.ManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  id: ManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ManhattenDistance(BlockPos)
  nameWithType: BlockPos.ManhattenDistance(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.ManhattenDistance(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the manhatten distance to given position
  example: []
  syntax:
    content: public int ManhattenDistance(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function ManhattenDistance(pos As BlockPos) As Integer
  overload: Vintagestory.API.MathTools.BlockPos.ManhattenDistance*
- uid: Vintagestory.API.MathTools.BlockPos.ManhattenDistance(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.ManhattenDistance(System.Int32,System.Int32,System.Int32)
  id: ManhattenDistance(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ManhattenDistance(int, int, int)
  nameWithType: BlockPos.ManhattenDistance(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.ManhattenDistance(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the manhatten distance to given position

    Note this is dimension unaware
  example: []
  syntax:
    content: public int ManhattenDistance(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function ManhattenDistance(x As Integer, y As Integer, z As Integer) As Integer
  overload: Vintagestory.API.MathTools.BlockPos.ManhattenDistance*
  nameWithType.vb: BlockPos.ManhattenDistance(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.ManhattenDistance(Integer, Integer, Integer)
  name.vb: ManhattenDistance(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.InRangeHorizontally(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.InRangeHorizontally(System.Int32,System.Int32,System.Int32)
  id: InRangeHorizontally(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: InRangeHorizontally(int, int, int)
  nameWithType: BlockPos.InRangeHorizontally(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.InRangeHorizontally(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns true if the specified x,z is within a box the specified range around this position

    Note this is dimension unaware
  example: []
  syntax:
    content: public bool InRangeHorizontally(int x, int z, int range)
    parameters:
    - id: x
      type: System.Int32
    - id: z
      type: System.Int32
    - id: range
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function InRangeHorizontally(x As Integer, z As Integer, range As Integer) As Boolean
  overload: Vintagestory.API.MathTools.BlockPos.InRangeHorizontally*
  nameWithType.vb: BlockPos.InRangeHorizontally(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.InRangeHorizontally(Integer, Integer, Integer)
  name.vb: InRangeHorizontally(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.ToVec3d
  commentId: M:Vintagestory.API.MathTools.BlockPos.ToVec3d
  id: ToVec3d
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ToVec3d()
  nameWithType: BlockPos.ToVec3d()
  fullName: Vintagestory.API.MathTools.BlockPos.ToVec3d()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Creates a new instance of a Vec3d initialized with this position

    Note this is dimension unaware
  example: []
  syntax:
    content: public Vec3d ToVec3d()
    return:
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    content.vb: Public Function ToVec3d() As Vec3d
  overload: Vintagestory.API.MathTools.BlockPos.ToVec3d*
- uid: Vintagestory.API.MathTools.BlockPos.ToVec3i
  commentId: M:Vintagestory.API.MathTools.BlockPos.ToVec3i
  id: ToVec3i
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ToVec3i()
  nameWithType: BlockPos.ToVec3i()
  fullName: Vintagestory.API.MathTools.BlockPos.ToVec3i()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Creates a new instance of a Vec3i initialized with this position

    Note this is dimension unaware
  example: []
  syntax:
    content: public Vec3i ToVec3i()
    return:
      type: Vintagestory.API.MathTools.Vec3i
      description: ''
    content.vb: Public Function ToVec3i() As Vec3i
  overload: Vintagestory.API.MathTools.BlockPos.ToVec3i*
- uid: Vintagestory.API.MathTools.BlockPos.ToVec3f
  commentId: M:Vintagestory.API.MathTools.BlockPos.ToVec3f
  id: ToVec3f
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ToVec3f()
  nameWithType: BlockPos.ToVec3f()
  fullName: Vintagestory.API.MathTools.BlockPos.ToVec3f()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public Vec3f ToVec3f()
    return:
      type: Vintagestory.API.MathTools.Vec3f
    content.vb: Public Function ToVec3f() As Vec3f
  overload: Vintagestory.API.MathTools.BlockPos.ToVec3f*
- uid: Vintagestory.API.MathTools.BlockPos.ToString
  commentId: M:Vintagestory.API.MathTools.BlockPos.ToString
  id: ToString
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BlockPos.ToString()
  fullName: Vintagestory.API.MathTools.BlockPos.ToString()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Vintagestory.API.MathTools.BlockPos.ToString*
- uid: Vintagestory.API.MathTools.BlockPos.Equals(System.Object)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Equals(System.Object)
  id: Equals(System.Object)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: BlockPos.Equals(object)
  fullName: Vintagestory.API.MathTools.BlockPos.Equals(object)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Vintagestory.API.MathTools.BlockPos.Equals*
  nameWithType.vb: BlockPos.Equals(Object)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Equals(Object)
  name.vb: Equals(Object)
- uid: Vintagestory.API.MathTools.BlockPos.GetHashCode
  commentId: M:Vintagestory.API.MathTools.BlockPos.GetHashCode
  id: GetHashCode
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BlockPos.GetHashCode()
  fullName: Vintagestory.API.MathTools.BlockPos.GetHashCode()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Vintagestory.API.MathTools.BlockPos.GetHashCode*
- uid: Vintagestory.API.MathTools.BlockPos.Equals(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Equals(Vintagestory.API.MathTools.BlockPos)
  id: Equals(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Equals(BlockPos)
  nameWithType: BlockPos.Equals(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.Equals(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(BlockPos other)
    parameters:
    - id: other
      type: Vintagestory.API.MathTools.BlockPos
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As BlockPos) As Boolean
  overload: Vintagestory.API.MathTools.BlockPos.Equals*
  implements:
  - System.IEquatable{Vintagestory.API.MathTools.BlockPos}.Equals(Vintagestory.API.MathTools.BlockPos)
- uid: Vintagestory.API.MathTools.BlockPos.Equals(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.Equals(System.Int32,System.Int32,System.Int32)
  id: Equals(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Equals(int, int, int)
  nameWithType: BlockPos.Equals(int, int, int)
  fullName: Vintagestory.API.MathTools.BlockPos.Equals(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public bool Equals(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: z
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Equals(x As Integer, y As Integer, z As Integer) As Boolean
  overload: Vintagestory.API.MathTools.BlockPos.Equals*
  nameWithType.vb: BlockPos.Equals(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Equals(Integer, Integer, Integer)
  name.vb: Equals(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.op_Addition(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Addition(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  id: op_Addition(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator +(BlockPos, BlockPos)
  nameWithType: BlockPos.operator +(BlockPos, BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.operator +(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos operator +(BlockPos left, BlockPos right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: Vintagestory.API.MathTools.BlockPos
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Operator +(left As BlockPos, right As BlockPos) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.op_Addition*
  nameWithType.vb: BlockPos.+(BlockPos, BlockPos)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.+(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  name.vb: +(BlockPos, BlockPos)
- uid: Vintagestory.API.MathTools.BlockPos.op_Subtraction(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Subtraction(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  id: op_Subtraction(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator -(BlockPos, BlockPos)
  nameWithType: BlockPos.operator -(BlockPos, BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.operator -(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos operator -(BlockPos left, BlockPos right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: Vintagestory.API.MathTools.BlockPos
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Operator -(left As BlockPos, right As BlockPos) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.op_Subtraction*
  nameWithType.vb: BlockPos.-(BlockPos, BlockPos)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.-(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  name.vb: -(BlockPos, BlockPos)
- uid: Vintagestory.API.MathTools.BlockPos.op_Addition(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Addition(Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: op_Addition(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator +(BlockPos, int)
  nameWithType: BlockPos.operator +(BlockPos, int)
  fullName: Vintagestory.API.MathTools.BlockPos.operator +(Vintagestory.API.MathTools.BlockPos, int)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos operator +(BlockPos left, int right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: System.Int32
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Operator +(left As BlockPos, right As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.op_Addition*
  nameWithType.vb: BlockPos.+(BlockPos, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.+(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: +(BlockPos, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.op_Subtraction(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Subtraction(Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: op_Subtraction(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator -(BlockPos, int)
  nameWithType: BlockPos.operator -(BlockPos, int)
  fullName: Vintagestory.API.MathTools.BlockPos.operator -(Vintagestory.API.MathTools.BlockPos, int)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos operator -(BlockPos left, int right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: System.Int32
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Operator -(left As BlockPos, right As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.op_Subtraction*
  nameWithType.vb: BlockPos.-(BlockPos, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.-(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: -(BlockPos, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.op_Multiply(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Multiply(Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: op_Multiply(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator *(BlockPos, int)
  nameWithType: BlockPos.operator *(BlockPos, int)
  fullName: Vintagestory.API.MathTools.BlockPos.operator *(Vintagestory.API.MathTools.BlockPos, int)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos operator *(BlockPos left, int right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: System.Int32
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Operator *(left As BlockPos, right As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.op_Multiply*
  nameWithType.vb: BlockPos.*(BlockPos, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.*(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: '*(BlockPos, Integer)'
- uid: Vintagestory.API.MathTools.BlockPos.op_Multiply(System.Int32,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Multiply(System.Int32,Vintagestory.API.MathTools.BlockPos)
  id: op_Multiply(System.Int32,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator *(int, BlockPos)
  nameWithType: BlockPos.operator *(int, BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.operator *(int, Vintagestory.API.MathTools.BlockPos)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos operator *(int left, BlockPos right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: Vintagestory.API.MathTools.BlockPos
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Operator *(left As Integer, right As BlockPos) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.op_Multiply*
  nameWithType.vb: BlockPos.*(Integer, BlockPos)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.*(Integer, Vintagestory.API.MathTools.BlockPos)
  name.vb: '*(Integer, BlockPos)'
- uid: Vintagestory.API.MathTools.BlockPos.op_Division(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Division(Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: op_Division(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator /(BlockPos, int)
  nameWithType: BlockPos.operator /(BlockPos, int)
  fullName: Vintagestory.API.MathTools.BlockPos.operator /(Vintagestory.API.MathTools.BlockPos, int)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockPos operator /(BlockPos left, int right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: System.Int32
    return:
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Public Shared Operator /(left As BlockPos, right As Integer) As BlockPos
  overload: Vintagestory.API.MathTools.BlockPos.op_Division*
  nameWithType.vb: BlockPos./(BlockPos, Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockPos./(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: /(BlockPos, Integer)
- uid: Vintagestory.API.MathTools.BlockPos.op_Equality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Equality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  id: op_Equality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator ==(BlockPos, BlockPos)
  nameWithType: BlockPos.operator ==(BlockPos, BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.operator ==(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static bool operator ==(BlockPos left, BlockPos right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: Vintagestory.API.MathTools.BlockPos
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As BlockPos, right As BlockPos) As Boolean
  overload: Vintagestory.API.MathTools.BlockPos.op_Equality*
  nameWithType.vb: BlockPos.=(BlockPos, BlockPos)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.=(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  name.vb: =(BlockPos, BlockPos)
- uid: Vintagestory.API.MathTools.BlockPos.op_Inequality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockPos.op_Inequality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  id: op_Inequality(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: operator !=(BlockPos, BlockPos)
  nameWithType: BlockPos.operator !=(BlockPos, BlockPos)
  fullName: Vintagestory.API.MathTools.BlockPos.operator !=(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  type: Operator
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static bool operator !=(BlockPos left, BlockPos right)
    parameters:
    - id: left
      type: Vintagestory.API.MathTools.BlockPos
    - id: right
      type: Vintagestory.API.MathTools.BlockPos
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As BlockPos, right As BlockPos) As Boolean
  overload: Vintagestory.API.MathTools.BlockPos.op_Inequality*
  nameWithType.vb: BlockPos.<>(BlockPos, BlockPos)
  fullName.vb: Vintagestory.API.MathTools.BlockPos.<>(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  name.vb: <>(BlockPos, BlockPos)
- uid: Vintagestory.API.MathTools.BlockPos.AsVec3i
  commentId: P:Vintagestory.API.MathTools.BlockPos.AsVec3i
  id: AsVec3i
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: AsVec3i
  nameWithType: BlockPos.AsVec3i
  fullName: Vintagestory.API.MathTools.BlockPos.AsVec3i
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  example: []
  syntax:
    content: public Vec3i AsVec3i { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.Vec3i
    content.vb: Public ReadOnly Property AsVec3i As Vec3i
  overload: Vintagestory.API.MathTools.BlockPos.AsVec3i*
  implements:
  - Vintagestory.API.MathTools.IVec3.AsVec3i
- uid: Vintagestory.API.MathTools.BlockPos.Walk(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3i,System.Action{System.Int32,System.Int32,System.Int32})
  commentId: M:Vintagestory.API.MathTools.BlockPos.Walk(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3i,System.Action{System.Int32,System.Int32,System.Int32})
  id: Walk(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3i,System.Action{System.Int32,System.Int32,System.Int32})
  parent: Vintagestory.API.MathTools.BlockPos
  langs:
  - csharp
  - vb
  name: Walk(BlockPos, BlockPos, Vec3i, Action<int, int, int>)
  nameWithType: BlockPos.Walk(BlockPos, BlockPos, Vec3i, Action<int, int, int>)
  fullName: Vintagestory.API.MathTools.BlockPos.Walk(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Vec3i, System.Action<int, int, int>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static void Walk(BlockPos startPos, BlockPos untilPos, Vec3i mapSizeForClamp, Action<int, int, int> onpos)
    parameters:
    - id: startPos
      type: Vintagestory.API.MathTools.BlockPos
    - id: untilPos
      type: Vintagestory.API.MathTools.BlockPos
    - id: mapSizeForClamp
      type: Vintagestory.API.MathTools.Vec3i
    - id: onpos
      type: System.Action{System.Int32,System.Int32,System.Int32}
    content.vb: Public Shared Sub Walk(startPos As BlockPos, untilPos As BlockPos, mapSizeForClamp As Vec3i, onpos As Action(Of Integer, Integer, Integer))
  overload: Vintagestory.API.MathTools.BlockPos.Walk*
  nameWithType.vb: BlockPos.Walk(BlockPos, BlockPos, Vec3i, Action(Of Integer, Integer, Integer))
  fullName.vb: Vintagestory.API.MathTools.BlockPos.Walk(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Vec3i, System.Action(Of Integer, Integer, Integer))
  name.vb: Walk(BlockPos, BlockPos, Vec3i, Action(Of Integer, Integer, Integer))
references:
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Vintagestory.API.MathTools.BlockPos}
  commentId: T:System.IEquatable{Vintagestory.API.MathTools.BlockPos}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<BlockPos>
  nameWithType: IEquatable<BlockPos>
  fullName: System.IEquatable<Vintagestory.API.MathTools.BlockPos>
  nameWithType.vb: IEquatable(Of BlockPos)
  fullName.vb: System.IEquatable(Of Vintagestory.API.MathTools.BlockPos)
  name.vb: IEquatable(Of BlockPos)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
- uid: Vintagestory.API.MathTools.IVec3
  commentId: T:Vintagestory.API.MathTools.IVec3
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.IVec3.html
  name: IVec3
  nameWithType: IVec3
  fullName: Vintagestory.API.MathTools.IVec3
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.MathTools.BlockPos.Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Util.PosUtil
  definition: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  href: Vintagestory.API.Util.PosUtil.html#Vintagestory_API_Util_PosUtil_SetOrCreate_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  name: SetOrCreate(BlockPos, BlockPos)
  nameWithType: PosUtil.SetOrCreate(BlockPos, BlockPos)
  fullName: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  spec.csharp:
  - uid: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
    name: SetOrCreate
    href: Vintagestory.API.Util.PosUtil.html#Vintagestory_API_Util_PosUtil_SetOrCreate_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
    name: SetOrCreate
    href: Vintagestory.API.Util.PosUtil.html#Vintagestory_API_Util_PosUtil_SetOrCreate_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  href: Vintagestory.API.Util.PosUtil.html#Vintagestory_API_Util_PosUtil_SetOrCreate_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  name: SetOrCreate(BlockPos, BlockPos)
  nameWithType: PosUtil.SetOrCreate(BlockPos, BlockPos)
  fullName: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  spec.csharp:
  - uid: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
    name: SetOrCreate
    href: Vintagestory.API.Util.PosUtil.html#Vintagestory_API_Util_PosUtil_SetOrCreate_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.PosUtil.SetOrCreate(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
    name: SetOrCreate
    href: Vintagestory.API.Util.PosUtil.html#Vintagestory_API_Util_PosUtil_SetOrCreate_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
- uid: Vintagestory.API.Util.PosUtil
  commentId: T:Vintagestory.API.Util.PosUtil
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.PosUtil.html
  name: PosUtil
  nameWithType: PosUtil
  fullName: Vintagestory.API.Util.PosUtil
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Vintagestory.API.MathTools.BlockPos.InternalY*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.InternalY
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_InternalY
  name: InternalY
  nameWithType: BlockPos.InternalY
  fullName: Vintagestory.API.MathTools.BlockPos.InternalY
- uid: Vintagestory.API.MathTools.BlockPos.#ctor*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.#ctor
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos__ctor
  name: BlockPos
  nameWithType: BlockPos.BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos.BlockPos
  nameWithType.vb: BlockPos.New
  fullName.vb: Vintagestory.API.MathTools.BlockPos.New
  name.vb: New
- uid: Vintagestory.API.MathTools.Vec3i
  commentId: T:Vintagestory.API.MathTools.Vec3i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3i.html
  name: Vec3i
  nameWithType: Vec3i
  fullName: Vintagestory.API.MathTools.Vec3i
- uid: Vintagestory.API.MathTools.Vec4i
  commentId: T:Vintagestory.API.MathTools.Vec4i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec4i.html
  name: Vec4i
  nameWithType: Vec4i
  fullName: Vintagestory.API.MathTools.Vec4i
- uid: Vintagestory.API.MathTools.BlockPos.Item*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Item
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Item_System_Int32_
  name: this
  nameWithType: BlockPos.this
  fullName: Vintagestory.API.MathTools.BlockPos.this
  nameWithType.vb: BlockPos.this[]
  fullName.vb: Vintagestory.API.MathTools.BlockPos.this[]
  name.vb: this[]
- uid: Vintagestory.API.MathTools.BlockPos.Up*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Up
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Up_System_Int32_
  name: Up
  nameWithType: BlockPos.Up
  fullName: Vintagestory.API.MathTools.BlockPos.Up
- uid: Vintagestory.API.MathTools.BlockPos
  commentId: T:Vintagestory.API.MathTools.BlockPos
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockPos.html
  name: BlockPos
  nameWithType: BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos
- uid: Vintagestory.API.MathTools.BlockPos.Down*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Down
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Down_System_Int32_
  name: Down
  nameWithType: BlockPos.Down
  fullName: Vintagestory.API.MathTools.BlockPos.Down
- uid: Vintagestory.API.MathTools.BlockPos.Set*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Set
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Set_Vintagestory_API_MathTools_Vec3d_
  name: Set
  nameWithType: BlockPos.Set
  fullName: Vintagestory.API.MathTools.BlockPos.Set
- uid: Vintagestory.API.MathTools.Vec3d
  commentId: T:Vintagestory.API.MathTools.Vec3d
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3d.html
  name: Vec3d
  nameWithType: Vec3d
  fullName: Vintagestory.API.MathTools.Vec3d
- uid: Vintagestory.API.MathTools.FastVec3i
  commentId: T:Vintagestory.API.MathTools.FastVec3i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.FastVec3i.html
  name: FastVec3i
  nameWithType: FastVec3i
  fullName: Vintagestory.API.MathTools.FastVec3i
- uid: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_SetAndCorrectDimension_Vintagestory_API_MathTools_Vec3d_
  name: SetAndCorrectDimension
  nameWithType: BlockPos.SetAndCorrectDimension
  fullName: Vintagestory.API.MathTools.BlockPos.SetAndCorrectDimension
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Vintagestory.API.MathTools.BlockPos.SetDimension*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.SetDimension
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_SetDimension_System_Int32_
  name: SetDimension
  nameWithType: BlockPos.SetDimension
  fullName: Vintagestory.API.MathTools.BlockPos.SetDimension
- uid: Vintagestory.API.MathTools.BlockPos.SetAndEquals*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.SetAndEquals
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_SetAndEquals_System_Int32_System_Int32_System_Int32_
  name: SetAndEquals
  nameWithType: BlockPos.SetAndEquals
  fullName: Vintagestory.API.MathTools.BlockPos.SetAndEquals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Vintagestory.API.MathTools.BlockPos.ToBytes*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.ToBytes
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_ToBytes_System_IO_BinaryWriter_
  name: ToBytes
  nameWithType: BlockPos.ToBytes
  fullName: Vintagestory.API.MathTools.BlockPos.ToBytes
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Vintagestory.API.MathTools.BlockPos.ToLocalPosition*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.ToLocalPosition
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_ToLocalPosition_Vintagestory_API_Common_ICoreAPI_
  name: ToLocalPosition
  nameWithType: BlockPos.ToLocalPosition
  fullName: Vintagestory.API.MathTools.BlockPos.ToLocalPosition
- uid: Vintagestory.API.Common.ICoreAPI
  commentId: T:Vintagestory.API.Common.ICoreAPI
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ICoreAPI.html
  name: ICoreAPI
  nameWithType: ICoreAPI
  fullName: Vintagestory.API.Common.ICoreAPI
- uid: Vintagestory.API.Common
  commentId: N:Vintagestory.API.Common
  href: Vintagestory.html
  name: Vintagestory.API.Common
  nameWithType: Vintagestory.API.Common
  fullName: Vintagestory.API.Common
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
- uid: Vintagestory.API.MathTools.BlockPos.West*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.West
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_West
  name: West
  nameWithType: BlockPos.West
  fullName: Vintagestory.API.MathTools.BlockPos.West
- uid: Vintagestory.API.MathTools.BlockPos.CreateFromBytes*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.CreateFromBytes
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_CreateFromBytes_System_IO_BinaryReader_
  name: CreateFromBytes
  nameWithType: BlockPos.CreateFromBytes
  fullName: Vintagestory.API.MathTools.BlockPos.CreateFromBytes
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binaryreader
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: Vintagestory.API.MathTools.BlockPos.North*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.North
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_North
  name: North
  nameWithType: BlockPos.North
  fullName: Vintagestory.API.MathTools.BlockPos.North
- uid: Vintagestory.API.MathTools.BlockPos.East*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.East
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_East
  name: East
  nameWithType: BlockPos.East
  fullName: Vintagestory.API.MathTools.BlockPos.East
- uid: Vintagestory.API.MathTools.BlockPos.South*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.South
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_South
  name: South
  nameWithType: BlockPos.South
  fullName: Vintagestory.API.MathTools.BlockPos.South
- uid: Vintagestory.API.MathTools.BlockPos.FacingFrom*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.FacingFrom
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_FacingFrom_Vintagestory_API_MathTools_BlockPos_
  name: FacingFrom
  nameWithType: BlockPos.FacingFrom
  fullName: Vintagestory.API.MathTools.BlockPos.FacingFrom
- uid: Vintagestory.API.MathTools.BlockFacing
  commentId: T:Vintagestory.API.MathTools.BlockFacing
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockFacing.html
  name: BlockFacing
  nameWithType: BlockFacing
  fullName: Vintagestory.API.MathTools.BlockFacing
- uid: Vintagestory.API.MathTools.BlockPos.WestCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.WestCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_WestCopy_System_Int32_
  name: WestCopy
  nameWithType: BlockPos.WestCopy
  fullName: Vintagestory.API.MathTools.BlockPos.WestCopy
- uid: Vintagestory.API.MathTools.BlockPos.SouthCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.SouthCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_SouthCopy_System_Int32_
  name: SouthCopy
  nameWithType: BlockPos.SouthCopy
  fullName: Vintagestory.API.MathTools.BlockPos.SouthCopy
- uid: Vintagestory.API.MathTools.BlockPos.EastCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.EastCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_EastCopy_System_Int32_
  name: EastCopy
  nameWithType: BlockPos.EastCopy
  fullName: Vintagestory.API.MathTools.BlockPos.EastCopy
- uid: Vintagestory.API.MathTools.BlockPos.NorthCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.NorthCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_NorthCopy_System_Int32_
  name: NorthCopy
  nameWithType: BlockPos.NorthCopy
  fullName: Vintagestory.API.MathTools.BlockPos.NorthCopy
- uid: Vintagestory.API.MathTools.BlockPos.DownCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.DownCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_DownCopy_System_Int32_
  name: DownCopy
  nameWithType: BlockPos.DownCopy
  fullName: Vintagestory.API.MathTools.BlockPos.DownCopy
- uid: Vintagestory.API.MathTools.BlockPos.UpCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.UpCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_UpCopy_System_Int32_
  name: UpCopy
  nameWithType: BlockPos.UpCopy
  fullName: Vintagestory.API.MathTools.BlockPos.UpCopy
- uid: Vintagestory.API.MathTools.BlockPos.Copy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Copy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Copy
  name: Copy
  nameWithType: BlockPos.Copy
  fullName: Vintagestory.API.MathTools.BlockPos.Copy
- uid: Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_CopyAndCorrectDimension
  name: CopyAndCorrectDimension
  nameWithType: BlockPos.CopyAndCorrectDimension
  fullName: Vintagestory.API.MathTools.BlockPos.CopyAndCorrectDimension
- uid: Vintagestory.API.MathTools.BlockPos.Add*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Add
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Add_System_Single_System_Single_System_Single_
  name: Add
  nameWithType: BlockPos.Add
  fullName: Vintagestory.API.MathTools.BlockPos.Add
- uid: Vintagestory.API.MathTools.BlockPos.Offset*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Offset
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Offset_Vintagestory_API_MathTools_BlockFacing_
  name: Offset
  nameWithType: BlockPos.Offset
  fullName: Vintagestory.API.MathTools.BlockPos.Offset
- uid: Vintagestory.API.MathTools.BlockPos.AddCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.AddCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_AddCopy_System_Single_System_Single_System_Single_
  name: AddCopy
  nameWithType: BlockPos.AddCopy
  fullName: Vintagestory.API.MathTools.BlockPos.AddCopy
- uid: Vintagestory.API.MathTools.BlockPos.Sub*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Sub
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Sub_Vintagestory_API_MathTools_BlockPos_
  name: Sub
  nameWithType: BlockPos.Sub
  fullName: Vintagestory.API.MathTools.BlockPos.Sub
- uid: Vintagestory.API.MathTools.BlockPos.SubCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.SubCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_SubCopy_Vintagestory_API_MathTools_BlockPos_
  name: SubCopy
  nameWithType: BlockPos.SubCopy
  fullName: Vintagestory.API.MathTools.BlockPos.SubCopy
- uid: Vintagestory.API.MathTools.BlockPos.DivCopy*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.DivCopy
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_DivCopy_System_Int32_
  name: DivCopy
  nameWithType: BlockPos.DivCopy
  fullName: Vintagestory.API.MathTools.BlockPos.DivCopy
- uid: Vintagestory.API.MathTools.BlockPos.DistanceTo*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.DistanceTo
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_DistanceTo_Vintagestory_API_MathTools_BlockPos_
  name: DistanceTo
  nameWithType: BlockPos.DistanceTo
  fullName: Vintagestory.API.MathTools.BlockPos.DistanceTo
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Vintagestory.API.MathTools.BlockPos.DistanceSqTo*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.DistanceSqTo
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_DistanceSqTo_System_Double_System_Double_System_Double_
  name: DistanceSqTo
  nameWithType: BlockPos.DistanceSqTo
  fullName: Vintagestory.API.MathTools.BlockPos.DistanceSqTo
- uid: Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_DistanceSqToNearerEdge_System_Double_System_Double_System_Double_
  name: DistanceSqToNearerEdge
  nameWithType: BlockPos.DistanceSqToNearerEdge
  fullName: Vintagestory.API.MathTools.BlockPos.DistanceSqToNearerEdge
- uid: Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_HorDistanceSqTo_System_Double_System_Double_
  name: HorDistanceSqTo
  nameWithType: BlockPos.HorDistanceSqTo
  fullName: Vintagestory.API.MathTools.BlockPos.HorDistanceSqTo
- uid: Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_HorizontalManhattenDistance_Vintagestory_API_MathTools_BlockPos_
  name: HorizontalManhattenDistance
  nameWithType: BlockPos.HorizontalManhattenDistance
  fullName: Vintagestory.API.MathTools.BlockPos.HorizontalManhattenDistance
- uid: Vintagestory.API.MathTools.BlockPos.ManhattenDistance*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.ManhattenDistance
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_ManhattenDistance_Vintagestory_API_MathTools_BlockPos_
  name: ManhattenDistance
  nameWithType: BlockPos.ManhattenDistance
  fullName: Vintagestory.API.MathTools.BlockPos.ManhattenDistance
- uid: Vintagestory.API.MathTools.BlockPos.InRangeHorizontally*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.InRangeHorizontally
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_InRangeHorizontally_System_Int32_System_Int32_System_Int32_
  name: InRangeHorizontally
  nameWithType: BlockPos.InRangeHorizontally
  fullName: Vintagestory.API.MathTools.BlockPos.InRangeHorizontally
- uid: Vintagestory.API.MathTools.BlockPos.ToVec3d*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.ToVec3d
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_ToVec3d
  name: ToVec3d
  nameWithType: BlockPos.ToVec3d
  fullName: Vintagestory.API.MathTools.BlockPos.ToVec3d
- uid: Vintagestory.API.MathTools.BlockPos.ToVec3i*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.ToVec3i
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_ToVec3i
  name: ToVec3i
  nameWithType: BlockPos.ToVec3i
  fullName: Vintagestory.API.MathTools.BlockPos.ToVec3i
- uid: Vintagestory.API.MathTools.BlockPos.ToVec3f*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.ToVec3f
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_ToVec3f
  name: ToVec3f
  nameWithType: BlockPos.ToVec3f
  fullName: Vintagestory.API.MathTools.BlockPos.ToVec3f
- uid: Vintagestory.API.MathTools.Vec3f
  commentId: T:Vintagestory.API.MathTools.Vec3f
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3f.html
  name: Vec3f
  nameWithType: Vec3f
  fullName: Vintagestory.API.MathTools.Vec3f
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.BlockPos.ToString*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.ToString
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_ToString
  name: ToString
  nameWithType: BlockPos.ToString
  fullName: Vintagestory.API.MathTools.BlockPos.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.MathTools.BlockPos.Equals*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Equals
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Equals_System_Object_
  name: Equals
  nameWithType: BlockPos.Equals
  fullName: Vintagestory.API.MathTools.BlockPos.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.BlockPos.GetHashCode*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.GetHashCode
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_GetHashCode
  name: GetHashCode
  nameWithType: BlockPos.GetHashCode
  fullName: Vintagestory.API.MathTools.BlockPos.GetHashCode
- uid: System.IEquatable{Vintagestory.API.MathTools.BlockPos}.Equals(Vintagestory.API.MathTools.BlockPos)
  commentId: M:System.IEquatable{Vintagestory.API.MathTools.BlockPos}.Equals(Vintagestory.API.MathTools.BlockPos)
  parent: System.IEquatable{Vintagestory.API.MathTools.BlockPos}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(BlockPos)
  nameWithType: IEquatable<BlockPos>.Equals(BlockPos)
  fullName: System.IEquatable<Vintagestory.API.MathTools.BlockPos>.Equals(Vintagestory.API.MathTools.BlockPos)
  nameWithType.vb: IEquatable(Of BlockPos).Equals(BlockPos)
  fullName.vb: System.IEquatable(Of Vintagestory.API.MathTools.BlockPos).Equals(Vintagestory.API.MathTools.BlockPos)
  spec.csharp:
  - uid: System.IEquatable{Vintagestory.API.MathTools.BlockPos}.Equals(Vintagestory.API.MathTools.BlockPos)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Vintagestory.API.MathTools.BlockPos}.Equals(Vintagestory.API.MathTools.BlockPos)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: Vintagestory.API.MathTools.BlockPos.op_Addition*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.op_Addition
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Addition_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  name: operator +
  nameWithType: BlockPos.operator +
  fullName: Vintagestory.API.MathTools.BlockPos.operator +
  nameWithType.vb: BlockPos.+
  fullName.vb: Vintagestory.API.MathTools.BlockPos.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos.op_Addition*
    name: +
    href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Addition_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
- uid: Vintagestory.API.MathTools.BlockPos.op_Subtraction*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.op_Subtraction
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Subtraction_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  name: operator -
  nameWithType: BlockPos.operator -
  fullName: Vintagestory.API.MathTools.BlockPos.operator -
  nameWithType.vb: BlockPos.-
  fullName.vb: Vintagestory.API.MathTools.BlockPos.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos.op_Subtraction*
    name: '-'
    href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Subtraction_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
- uid: Vintagestory.API.MathTools.BlockPos.op_Multiply*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.op_Multiply
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Multiply_Vintagestory_API_MathTools_BlockPos_System_Int32_
  name: operator *
  nameWithType: BlockPos.operator *
  fullName: Vintagestory.API.MathTools.BlockPos.operator *
  nameWithType.vb: BlockPos.*
  fullName.vb: Vintagestory.API.MathTools.BlockPos.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos.op_Multiply*
    name: '*'
    href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Multiply_Vintagestory_API_MathTools_BlockPos_System_Int32_
- uid: Vintagestory.API.MathTools.BlockPos.op_Division*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.op_Division
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Division_Vintagestory_API_MathTools_BlockPos_System_Int32_
  name: operator /
  nameWithType: BlockPos.operator /
  fullName: Vintagestory.API.MathTools.BlockPos.operator /
  nameWithType.vb: BlockPos./
  fullName.vb: Vintagestory.API.MathTools.BlockPos./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos.op_Division*
    name: /
    href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Division_Vintagestory_API_MathTools_BlockPos_System_Int32_
- uid: Vintagestory.API.MathTools.BlockPos.op_Equality*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.op_Equality
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Equality_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  name: operator ==
  nameWithType: BlockPos.operator ==
  fullName: Vintagestory.API.MathTools.BlockPos.operator ==
  nameWithType.vb: BlockPos.=
  fullName.vb: Vintagestory.API.MathTools.BlockPos.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos.op_Equality*
    name: ==
    href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Equality_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
- uid: Vintagestory.API.MathTools.BlockPos.op_Inequality*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.op_Inequality
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Inequality_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  name: operator !=
  nameWithType: BlockPos.operator !=
  fullName: Vintagestory.API.MathTools.BlockPos.operator !=
  nameWithType.vb: BlockPos.<>
  fullName.vb: Vintagestory.API.MathTools.BlockPos.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos.op_Inequality*
    name: '!='
    href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_op_Inequality_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
- uid: Vintagestory.API.MathTools.BlockPos.AsVec3i*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.AsVec3i
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_AsVec3i
  name: AsVec3i
  nameWithType: BlockPos.AsVec3i
  fullName: Vintagestory.API.MathTools.BlockPos.AsVec3i
- uid: Vintagestory.API.MathTools.IVec3.AsVec3i
  commentId: P:Vintagestory.API.MathTools.IVec3.AsVec3i
  parent: Vintagestory.API.MathTools.IVec3
  href: Vintagestory.API.MathTools.IVec3.html#Vintagestory_API_MathTools_IVec3_AsVec3i
  name: AsVec3i
  nameWithType: IVec3.AsVec3i
  fullName: Vintagestory.API.MathTools.IVec3.AsVec3i
- uid: Vintagestory.API.MathTools.BlockPos.Walk*
  commentId: Overload:Vintagestory.API.MathTools.BlockPos.Walk
  href: Vintagestory.API.MathTools.BlockPos.html#Vintagestory_API_MathTools_BlockPos_Walk_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_Vec3i_System_Action_System_Int32_System_Int32_System_Int32__
  name: Walk
  nameWithType: BlockPos.Walk
  fullName: Vintagestory.API.MathTools.BlockPos.Walk
- uid: System.Action{System.Int32,System.Int32,System.Int32}
  commentId: T:System.Action{System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<int, int, int>
  nameWithType: Action<int, int, int>
  fullName: System.Action<int, int, int>
  nameWithType.vb: Action(Of Integer, Integer, Integer)
  fullName.vb: System.Action(Of Integer, Integer, Integer)
  name.vb: Action(Of Integer, Integer, Integer)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
