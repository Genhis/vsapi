### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Common.IWorldChunk
  commentId: T:Vintagestory.API.Common.IWorldChunk
  id: IWorldChunk
  parent: Vintagestory.API.Common
  children:
  - Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock
  - Vintagestory.API.Common.IWorldChunk.AddEntity(Vintagestory.API.Common.Entities.Entity)
  - Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[])
  - Vintagestory.API.Common.IWorldChunk.BlockEntities
  - Vintagestory.API.Common.IWorldChunk.Blocks
  - Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32,System.Boolean)
  - Vintagestory.API.Common.IWorldChunk.BreakDecor(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  - Vintagestory.API.Common.IWorldChunk.Data
  - Vintagestory.API.Common.IWorldChunk.Disposed
  - Vintagestory.API.Common.IWorldChunk.Empty
  - Vintagestory.API.Common.IWorldChunk.Entities
  - Vintagestory.API.Common.IWorldChunk.EntitiesCount
  - Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering
  - Vintagestory.API.Common.IWorldChunk.GetDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IWorldChunk.GetDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Collections.Generic.IList{Vintagestory.API.Common.Block})
  - Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IWorldChunk.GetModdata(System.String)
  - Vintagestory.API.Common.IWorldChunk.GetModdata``1(System.String,``0)
  - Vintagestory.API.Common.IWorldChunk.GetSubDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IWorldChunk.LightPositions
  - Vintagestory.API.Common.IWorldChunk.Lighting
  - Vintagestory.API.Common.IWorldChunk.LiveModData
  - Vintagestory.API.Common.IWorldChunk.MapChunk
  - Vintagestory.API.Common.IWorldChunk.MarkFresh
  - Vintagestory.API.Common.IWorldChunk.MarkModified
  - Vintagestory.API.Common.IWorldChunk.MaybeBlocks
  - Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock
  - Vintagestory.API.Common.IWorldChunk.RemoveEntity(System.Int64)
  - Vintagestory.API.Common.IWorldChunk.RemoveModdata(System.String)
  - Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block,System.Int32,System.Int32)
  - Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  - Vintagestory.API.Common.IWorldChunk.SetDecors(System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block})
  - Vintagestory.API.Common.IWorldChunk.SetModdata(System.String,System.Byte[])
  - Vintagestory.API.Common.IWorldChunk.SetModdata``1(System.String,``0)
  - Vintagestory.API.Common.IWorldChunk.Unpack
  - Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock(System.Int32,System.Int32)
  - Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(System.Int32)
  - Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(System.Int32,System.Int32@)
  - Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly
  langs:
  - csharp
  - vb
  name: IWorldChunk
  nameWithType: IWorldChunk
  fullName: Vintagestory.API.Common.IWorldChunk
  type: Interface
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: public interface IWorldChunk
    content.vb: Public Interface IWorldChunk
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.Common.IWorldChunk.Empty
  commentId: P:Vintagestory.API.Common.IWorldChunk.Empty
  id: Empty
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: IWorldChunk.Empty
  fullName: Vintagestory.API.Common.IWorldChunk.Empty
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: bool Empty { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Empty As Boolean
  overload: Vintagestory.API.Common.IWorldChunk.Empty*
- uid: Vintagestory.API.Common.IWorldChunk.MapChunk
  commentId: P:Vintagestory.API.Common.IWorldChunk.MapChunk
  id: MapChunk
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: MapChunk
  nameWithType: IWorldChunk.MapChunk
  fullName: Vintagestory.API.Common.IWorldChunk.MapChunk
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Holds a reference to the current map data of this chunk column
  example: []
  syntax:
    content: IMapChunk MapChunk { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IMapChunk
    content.vb: ReadOnly Property MapChunk As IMapChunk
  overload: Vintagestory.API.Common.IWorldChunk.MapChunk*
- uid: Vintagestory.API.Common.IWorldChunk.Data
  commentId: P:Vintagestory.API.Common.IWorldChunk.Data
  id: Data
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: IWorldChunk.Data
  fullName: Vintagestory.API.Common.IWorldChunk.Data
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: 'Holds all the blockids for each coordinate, access via index: (y * chunksize + z) * chunksize + x'
  example: []
  syntax:
    content: IChunkBlocks Data { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IChunkBlocks
    content.vb: ReadOnly Property Data As IChunkBlocks
  overload: Vintagestory.API.Common.IWorldChunk.Data*
- uid: Vintagestory.API.Common.IWorldChunk.Blocks
  commentId: P:Vintagestory.API.Common.IWorldChunk.Blocks
  id: Blocks
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Blocks
  nameWithType: IWorldChunk.Blocks
  fullName: Vintagestory.API.Common.IWorldChunk.Blocks
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Use <xref href="Vintagestory.API.Common.IWorldChunk.Data" data-throw-if-not-resolved="false"></xref> instead
  example: []
  syntax:
    content: >-
      [Obsolete("Use Data field")]

      IChunkBlocks Blocks { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IChunkBlocks
    content.vb: >-
      <Obsolete("Use Data field")>

      ReadOnly Property Blocks As IChunkBlocks
  overload: Vintagestory.API.Common.IWorldChunk.Blocks*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Data field
- uid: Vintagestory.API.Common.IWorldChunk.Lighting
  commentId: P:Vintagestory.API.Common.IWorldChunk.Lighting
  id: Lighting
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Lighting
  nameWithType: IWorldChunk.Lighting
  fullName: Vintagestory.API.Common.IWorldChunk.Lighting
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: 'Holds all the lighting data for each coordinate, access via index: (y * chunksize + z) * chunksize + x'
  example: []
  syntax:
    content: IChunkLight Lighting { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IChunkLight
    content.vb: ReadOnly Property Lighting As IChunkLight
  overload: Vintagestory.API.Common.IWorldChunk.Lighting*
- uid: Vintagestory.API.Common.IWorldChunk.MaybeBlocks
  commentId: P:Vintagestory.API.Common.IWorldChunk.MaybeBlocks
  id: MaybeBlocks
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: MaybeBlocks
  nameWithType: IWorldChunk.MaybeBlocks
  fullName: Vintagestory.API.Common.IWorldChunk.MaybeBlocks
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Faster (non-blocking) access to blocks at the cost of sometimes returning 0 instead of the real block. Use <xref href="Vintagestory.API.Common.IWorldChunk.Data" data-throw-if-not-resolved="false"></xref> if you need reliable block access. Also should only be used for reading. Currently used for the particle system.
  example: []
  syntax:
    content: IChunkBlocks MaybeBlocks { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IChunkBlocks
    content.vb: ReadOnly Property MaybeBlocks As IChunkBlocks
  overload: Vintagestory.API.Common.IWorldChunk.MaybeBlocks*
- uid: Vintagestory.API.Common.IWorldChunk.Entities
  commentId: P:Vintagestory.API.Common.IWorldChunk.Entities
  id: Entities
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Entities
  nameWithType: IWorldChunk.Entities
  fullName: Vintagestory.API.Common.IWorldChunk.Entities
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: An array holding all Entities currently residing in this chunk. This array may be larger than the amount of entities in the chunk.
  example: []
  syntax:
    content: Entity[] Entities { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.Entities.Entity[]
    content.vb: ReadOnly Property Entities As Entity()
  overload: Vintagestory.API.Common.IWorldChunk.Entities*
- uid: Vintagestory.API.Common.IWorldChunk.EntitiesCount
  commentId: P:Vintagestory.API.Common.IWorldChunk.EntitiesCount
  id: EntitiesCount
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: EntitiesCount
  nameWithType: IWorldChunk.EntitiesCount
  fullName: Vintagestory.API.Common.IWorldChunk.EntitiesCount
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Actual count of entities in this chunk
  example: []
  syntax:
    content: int EntitiesCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property EntitiesCount As Integer
  overload: Vintagestory.API.Common.IWorldChunk.EntitiesCount*
- uid: Vintagestory.API.Common.IWorldChunk.BlockEntities
  commentId: P:Vintagestory.API.Common.IWorldChunk.BlockEntities
  id: BlockEntities
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: BlockEntities
  nameWithType: IWorldChunk.BlockEntities
  fullName: Vintagestory.API.Common.IWorldChunk.BlockEntities
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: An array holding block Entities currently residing in this chunk. This array may be larger than the amount of block entities in the chunk.
  example: []
  syntax:
    content: Dictionary<BlockPos, BlockEntity> BlockEntities { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.BlockEntity}
    content.vb: Property BlockEntities As Dictionary(Of BlockPos, BlockEntity)
  overload: Vintagestory.API.Common.IWorldChunk.BlockEntities*
- uid: Vintagestory.API.Common.IWorldChunk.Unpack
  commentId: M:Vintagestory.API.Common.IWorldChunk.Unpack
  id: Unpack
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Unpack()
  nameWithType: IWorldChunk.Unpack()
  fullName: Vintagestory.API.Common.IWorldChunk.Unpack()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Blockdata and Light might be compressed, always call this method if you want to access these
  example: []
  syntax:
    content: void Unpack()
    content.vb: Sub Unpack()
  overload: Vintagestory.API.Common.IWorldChunk.Unpack*
- uid: Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly
  commentId: M:Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly
  id: Unpack_ReadOnly
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Unpack_ReadOnly()
  nameWithType: IWorldChunk.Unpack_ReadOnly()
  fullName: Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: "Like Unpack(), except it must be used readonly: the calling code promises not to write any changes to this chunk's blocks or lighting"
  example: []
  syntax:
    content: bool Unpack_ReadOnly()
    return:
      type: System.Boolean
    content.vb: Function Unpack_ReadOnly() As Boolean
  overload: Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly*
- uid: Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock(System.Int32,System.Int32)
  id: UnpackAndReadBlock(System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: UnpackAndReadBlock(int, int)
  nameWithType: IWorldChunk.UnpackAndReadBlock(int, int)
  fullName: Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Like Unpack_ReadOnly(), except it actually reads and returns the block ID at index<br />

    (Returns 0 if the chunk was disposed)
  example: []
  syntax:
    content: int UnpackAndReadBlock(int index, int layer)
    parameters:
    - id: index
      type: System.Int32
    - id: layer
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Function UnpackAndReadBlock(index As Integer, layer As Integer) As Integer
  overload: Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock*
  nameWithType.vb: IWorldChunk.UnpackAndReadBlock(Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock(Integer, Integer)
  name.vb: UnpackAndReadBlock(Integer, Integer)
- uid: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(System.Int32)
  id: Unpack_AndReadLight(System.Int32)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Unpack_AndReadLight(int)
  nameWithType: IWorldChunk.Unpack_AndReadLight(int)
  fullName: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Like Unpack_ReadOnly(), except it actually reads and returns the Light at index<br />

    (Returns 0 if the chunk was disposed)
  example: []
  syntax:
    content: ushort Unpack_AndReadLight(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.UInt16
    content.vb: Function Unpack_AndReadLight(index As Integer) As UShort
  overload: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight*
  nameWithType.vb: IWorldChunk.Unpack_AndReadLight(Integer)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(Integer)
  name.vb: Unpack_AndReadLight(Integer)
- uid: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(System.Int32,System.Int32@)
  commentId: M:Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(System.Int32,System.Int32@)
  id: Unpack_AndReadLight(System.Int32,System.Int32@)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Unpack_AndReadLight(int, out int)
  nameWithType: IWorldChunk.Unpack_AndReadLight(int, out int)
  fullName: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(int, out int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    A version of Unpack_AndReadLight which also returns the lightSat<br />

    (Returns 0 if the chunk was disposed)
  example: []
  syntax:
    content: ushort Unpack_AndReadLight(int index, out int lightSat)
    parameters:
    - id: index
      type: System.Int32
    - id: lightSat
      type: System.Int32
    return:
      type: System.UInt16
    content.vb: Function Unpack_AndReadLight(index As Integer, lightSat As Integer) As UShort
  overload: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight*
  nameWithType.vb: IWorldChunk.Unpack_AndReadLight(Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight(Integer, Integer)
  name.vb: Unpack_AndReadLight(Integer, Integer)
- uid: Vintagestory.API.Common.IWorldChunk.MarkModified
  commentId: M:Vintagestory.API.Common.IWorldChunk.MarkModified
  id: MarkModified
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: MarkModified()
  nameWithType: IWorldChunk.MarkModified()
  fullName: Vintagestory.API.Common.IWorldChunk.MarkModified()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Marks this chunk as modified. If called on server side it will be stored to disk on the next autosave or during shutdown, if called on client not much happens (but it will be preserved from packing for next ~8 seconds)
  example: []
  syntax:
    content: void MarkModified()
    content.vb: Sub MarkModified()
  overload: Vintagestory.API.Common.IWorldChunk.MarkModified*
- uid: Vintagestory.API.Common.IWorldChunk.MarkFresh
  commentId: M:Vintagestory.API.Common.IWorldChunk.MarkFresh
  id: MarkFresh
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: MarkFresh()
  nameWithType: IWorldChunk.MarkFresh()
  fullName: Vintagestory.API.Common.IWorldChunk.MarkFresh()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Marks this chunk as recently accessed. This will prevent the chunk from getting compressed by the in-memory chunk compression algorithm
  example: []
  syntax:
    content: void MarkFresh()
    content.vb: Sub MarkFresh()
  overload: Vintagestory.API.Common.IWorldChunk.MarkFresh*
- uid: Vintagestory.API.Common.IWorldChunk.LightPositions
  commentId: P:Vintagestory.API.Common.IWorldChunk.LightPositions
  id: LightPositions
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: LightPositions
  nameWithType: IWorldChunk.LightPositions
  fullName: Vintagestory.API.Common.IWorldChunk.LightPositions
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns a list of a in-chunk indexed positions of all light sources in this chunk
  example: []
  syntax:
    content: HashSet<int> LightPositions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Int32}
    content.vb: Property LightPositions As HashSet(Of Integer)
  overload: Vintagestory.API.Common.IWorldChunk.LightPositions*
- uid: Vintagestory.API.Common.IWorldChunk.Disposed
  commentId: P:Vintagestory.API.Common.IWorldChunk.Disposed
  id: Disposed
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: Disposed
  nameWithType: IWorldChunk.Disposed
  fullName: Vintagestory.API.Common.IWorldChunk.Disposed
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Whether this chunk got unloaded
  example: []
  syntax:
    content: bool Disposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Disposed As Boolean
  overload: Vintagestory.API.Common.IWorldChunk.Disposed*
- uid: Vintagestory.API.Common.IWorldChunk.AddEntity(Vintagestory.API.Common.Entities.Entity)
  commentId: M:Vintagestory.API.Common.IWorldChunk.AddEntity(Vintagestory.API.Common.Entities.Entity)
  id: AddEntity(Vintagestory.API.Common.Entities.Entity)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: AddEntity(Entity)
  nameWithType: IWorldChunk.AddEntity(Entity)
  fullName: Vintagestory.API.Common.IWorldChunk.AddEntity(Vintagestory.API.Common.Entities.Entity)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Adds an entity to the chunk.
  example: []
  syntax:
    content: void AddEntity(Entity entity)
    parameters:
    - id: entity
      type: Vintagestory.API.Common.Entities.Entity
      description: The entity to add.
    content.vb: Sub AddEntity(entity As Entity)
  overload: Vintagestory.API.Common.IWorldChunk.AddEntity*
- uid: Vintagestory.API.Common.IWorldChunk.RemoveEntity(System.Int64)
  commentId: M:Vintagestory.API.Common.IWorldChunk.RemoveEntity(System.Int64)
  id: RemoveEntity(System.Int64)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: RemoveEntity(long)
  nameWithType: IWorldChunk.RemoveEntity(long)
  fullName: Vintagestory.API.Common.IWorldChunk.RemoveEntity(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes an entity from the chunk.
  example: []
  syntax:
    content: bool RemoveEntity(long entityId)
    parameters:
    - id: entityId
      type: System.Int64
      description: the ID for the entity
    return:
      type: System.Boolean
      description: Whether or not the entity was removed.
    content.vb: Function RemoveEntity(entityId As Long) As Boolean
  overload: Vintagestory.API.Common.IWorldChunk.RemoveEntity*
  nameWithType.vb: IWorldChunk.RemoveEntity(Long)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.RemoveEntity(Long)
  name.vb: RemoveEntity(Long)
- uid: Vintagestory.API.Common.IWorldChunk.SetModdata(System.String,System.Byte[])
  commentId: M:Vintagestory.API.Common.IWorldChunk.SetModdata(System.String,System.Byte[])
  id: SetModdata(System.String,System.Byte[])
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: SetModdata(string, byte[])
  nameWithType: IWorldChunk.SetModdata(string, byte[])
  fullName: Vintagestory.API.Common.IWorldChunk.SetModdata(string, byte[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Allows setting of arbitrary, permanantly stored moddata of this chunk. When set on the server before the chunk is sent to the client, the data will also be sent to the client.

    When set on the client the data is discarded once the chunk gets unloaded
  example: []
  syntax:
    content: void SetModdata(string key, byte[] data)
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: data
      type: System.Byte[]
      description: ''
    content.vb: Sub SetModdata(key As String, data As Byte())
  overload: Vintagestory.API.Common.IWorldChunk.SetModdata*
  nameWithType.vb: IWorldChunk.SetModdata(String, Byte())
  fullName.vb: Vintagestory.API.Common.IWorldChunk.SetModdata(String, Byte())
  name.vb: SetModdata(String, Byte())
- uid: Vintagestory.API.Common.IWorldChunk.RemoveModdata(System.String)
  commentId: M:Vintagestory.API.Common.IWorldChunk.RemoveModdata(System.String)
  id: RemoveModdata(System.String)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: RemoveModdata(string)
  nameWithType: IWorldChunk.RemoveModdata(string)
  fullName: Vintagestory.API.Common.IWorldChunk.RemoveModdata(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes the permanently stored data.
  example: []
  syntax:
    content: void RemoveModdata(string key)
    parameters:
    - id: key
      type: System.String
      description: ''
    content.vb: Sub RemoveModdata(key As String)
  overload: Vintagestory.API.Common.IWorldChunk.RemoveModdata*
  nameWithType.vb: IWorldChunk.RemoveModdata(String)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.RemoveModdata(String)
  name.vb: RemoveModdata(String)
- uid: Vintagestory.API.Common.IWorldChunk.GetModdata(System.String)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetModdata(System.String)
  id: GetModdata(System.String)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetModdata(string)
  nameWithType: IWorldChunk.GetModdata(string)
  fullName: Vintagestory.API.Common.IWorldChunk.GetModdata(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve arbitrary, permantly stored mod data
  example: []
  syntax:
    content: byte[] GetModdata(string key)
    parameters:
    - id: key
      type: System.String
      description: ''
    return:
      type: System.Byte[]
      description: ''
    content.vb: Function GetModdata(key As String) As Byte()
  overload: Vintagestory.API.Common.IWorldChunk.GetModdata*
  nameWithType.vb: IWorldChunk.GetModdata(String)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.GetModdata(String)
  name.vb: GetModdata(String)
- uid: Vintagestory.API.Common.IWorldChunk.SetModdata``1(System.String,``0)
  commentId: M:Vintagestory.API.Common.IWorldChunk.SetModdata``1(System.String,``0)
  id: SetModdata``1(System.String,``0)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: SetModdata<T>(string, T)
  nameWithType: IWorldChunk.SetModdata<T>(string, T)
  fullName: Vintagestory.API.Common.IWorldChunk.SetModdata<T>(string, T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Allows setting of arbitrary, permanantly stored moddata of this chunk. When set on the server before the chunk is sent to the client, the data will also be sent to the client.

    When set on the client the data is discarded once the chunk gets unloaded
  example: []
  syntax:
    content: void SetModdata<T>(string key, T data)
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: data
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub SetModdata(Of T)(key As String, data As T)
  overload: Vintagestory.API.Common.IWorldChunk.SetModdata*
  nameWithType.vb: IWorldChunk.SetModdata(Of T)(String, T)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.SetModdata(Of T)(String, T)
  name.vb: SetModdata(Of T)(String, T)
- uid: Vintagestory.API.Common.IWorldChunk.GetModdata``1(System.String,``0)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetModdata``1(System.String,``0)
  id: GetModdata``1(System.String,``0)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetModdata<T>(string, T)
  nameWithType: IWorldChunk.GetModdata<T>(string, T)
  fullName: Vintagestory.API.Common.IWorldChunk.GetModdata<T>(string, T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve arbitrary, permantly stored mod data
  example: []
  syntax:
    content: T GetModdata<T>(string key, T defaultValue = default)
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: defaultValue
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Function GetModdata(Of T)(key As String, defaultValue As T = Nothing) As T
  overload: Vintagestory.API.Common.IWorldChunk.GetModdata*
  nameWithType.vb: IWorldChunk.GetModdata(Of T)(String, T)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.GetModdata(Of T)(String, T)
  name.vb: GetModdata(Of T)(String, T)
- uid: Vintagestory.API.Common.IWorldChunk.LiveModData
  commentId: P:Vintagestory.API.Common.IWorldChunk.LiveModData
  id: LiveModData
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: LiveModData
  nameWithType: IWorldChunk.LiveModData
  fullName: Vintagestory.API.Common.IWorldChunk.LiveModData
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Can be used to store non-serialized mod data that is only serialized into the standard moddata dictionary on unload. This prevents the need for constant serializing/deserializing. Useful when storing large amounts of data. Is not populated on chunk load, you need to populate it with stored data yourself using GetModData()
  example: []
  syntax:
    content: Dictionary<string, object> LiveModData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Property LiveModData As Dictionary(Of String, Object)
  overload: Vintagestory.API.Common.IWorldChunk.LiveModData*
- uid: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos)
  id: GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetLocalBlockAtBlockPos(IWorldAccessor, BlockPos)
  nameWithType: IWorldChunk.GetLocalBlockAtBlockPos(IWorldAccessor, BlockPos)
  fullName: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve a block from this chunk ignoring ice/water layer, performs Unpack() and a modulo operation on the position arg to get a local position in the 0..chunksize range (it's your job to pick out the right chunk before calling this method)
  example: []
  syntax:
    content: Block GetLocalBlockAtBlockPos(IWorldAccessor world, BlockPos position)
    parameters:
    - id: world
      type: Vintagestory.API.Common.IWorldAccessor
      description: ''
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetLocalBlockAtBlockPos(world As IWorldAccessor, position As BlockPos) As Block
  overload: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos*
- uid: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetLocalBlockAtBlockPos(IWorldAccessor, int, int, int, int)
  nameWithType: IWorldChunk.GetLocalBlockAtBlockPos(IWorldAccessor, int, int, int, int)
  fullName: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor, int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: Block GetLocalBlockAtBlockPos(IWorldAccessor world, int posX, int posY, int posZ, int layer)
    parameters:
    - id: world
      type: Vintagestory.API.Common.IWorldAccessor
    - id: posX
      type: System.Int32
    - id: posY
      type: System.Int32
    - id: posZ
      type: System.Int32
    - id: layer
      type: System.Int32
    return:
      type: Vintagestory.API.Common.Block
    content.vb: Function GetLocalBlockAtBlockPos(world As IWorldAccessor, posX As Integer, posY As Integer, posZ As Integer, layer As Integer) As Block
  overload: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos*
  nameWithType.vb: IWorldChunk.GetLocalBlockAtBlockPos(IWorldAccessor, Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos(Vintagestory.API.Common.IWorldAccessor, Integer, Integer, Integer, Integer)
  name.vb: GetLocalBlockAtBlockPos(IWorldAccessor, Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: GetLocalBlockAtBlockPos_LockFree(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetLocalBlockAtBlockPos_LockFree(IWorldAccessor, BlockPos, int)
  nameWithType: IWorldChunk.GetLocalBlockAtBlockPos_LockFree(IWorldAccessor, BlockPos, int)
  fullName: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree(Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: As GetLocalBlockAtBlockPos except lock-free, use it inside paired LockForReading(true/false) calls
  example: []
  syntax:
    content: Block GetLocalBlockAtBlockPos_LockFree(IWorldAccessor world, BlockPos position, int layer = 0)
    parameters:
    - id: world
      type: Vintagestory.API.Common.IWorldAccessor
      description: ''
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: layer
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetLocalBlockAtBlockPos_LockFree(world As IWorldAccessor, position As BlockPos, layer As Integer = 0) As Block
  overload: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree*
  nameWithType.vb: IWorldChunk.GetLocalBlockAtBlockPos_LockFree(IWorldAccessor, BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree(Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: GetLocalBlockAtBlockPos_LockFree(IWorldAccessor, BlockPos, Integer)
- uid: Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  id: GetLocalBlockEntityAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetLocalBlockEntityAtBlockPos(BlockPos)
  nameWithType: IWorldChunk.GetLocalBlockEntityAtBlockPos(BlockPos)
  fullName: Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve a block entity from this chunk
  example: []
  syntax:
    content: BlockEntity GetLocalBlockEntityAtBlockPos(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.BlockEntity
      description: ''
    content.vb: Function GetLocalBlockEntityAtBlockPos(pos As BlockPos) As BlockEntity
  overload: Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos*
- uid: Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  commentId: M:Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  id: SetDecor(Vintagestory.API.Common.Block,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: SetDecor(Block, int, BlockFacing)
  nameWithType: IWorldChunk.SetDecor(Block, int, BlockFacing)
  fullName: Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block, int, Vintagestory.API.MathTools.BlockFacing)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Sets a decor block to the side of an existing block. Use air block (id 0) to remove a decor.<br />
  example: []
  syntax:
    content: bool SetDecor(Block block, int index3d, BlockFacing onFace)
    parameters:
    - id: block
      type: Vintagestory.API.Common.Block
      description: ''
    - id: index3d
      type: System.Int32
      description: ''
    - id: onFace
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    return:
      type: System.Boolean
      description: False if there already exists a block in this position and facing
    content.vb: Function SetDecor(block As Block, index3d As Integer, onFace As BlockFacing) As Boolean
  overload: Vintagestory.API.Common.IWorldChunk.SetDecor*
  nameWithType.vb: IWorldChunk.SetDecor(Block, Integer, BlockFacing)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block, Integer, Vintagestory.API.MathTools.BlockFacing)
  name.vb: SetDecor(Block, Integer, BlockFacing)
- uid: Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block,System.Int32,System.Int32)
  id: SetDecor(Vintagestory.API.Common.Block,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: SetDecor(Block, int, int)
  nameWithType: IWorldChunk.SetDecor(Block, int, int)
  fullName: Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Sets a decor block to a specific sub-position on the side of an existing block. Use air block (id 0) to remove a decor.<br />
  example: []
  syntax:
    content: bool SetDecor(Block block, int index3d, int faceAndSubposition)
    parameters:
    - id: block
      type: Vintagestory.API.Common.Block
      description: ''
    - id: index3d
      type: System.Int32
      description: ''
    - id: faceAndSubposition
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: False if there already exists a block in this position and facing
    content.vb: Function SetDecor(block As Block, index3d As Integer, faceAndSubposition As Integer) As Boolean
  overload: Vintagestory.API.Common.IWorldChunk.SetDecor*
  nameWithType.vb: IWorldChunk.SetDecor(Block, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.SetDecor(Vintagestory.API.Common.Block, Integer, Integer)
  name.vb: SetDecor(Block, Integer, Integer)
- uid: Vintagestory.API.Common.IWorldChunk.BreakDecor(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  commentId: M:Vintagestory.API.Common.IWorldChunk.BreakDecor(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  id: BreakDecor(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: BreakDecor(IWorldAccessor, BlockPos, BlockFacing, int?)
  nameWithType: IWorldChunk.BreakDecor(IWorldAccessor, BlockPos, BlockFacing, int?)
  fullName: Vintagestory.API.Common.IWorldChunk.BreakDecor(Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockFacing, int?)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: If allowed by a player action, removes all decors at given position and calls OnBrokenAsDecor() on all selected decors and drops the items that are returned from Block.GetDrops()
  example: []
  syntax:
    content: bool BreakDecor(IWorldAccessor world, BlockPos pos, BlockFacing side = null, int? decorIndex = null)
    parameters:
    - id: world
      type: Vintagestory.API.Common.IWorldAccessor
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: side
      type: Vintagestory.API.MathTools.BlockFacing
      description: If null, all the decor blocks on all sides are removed
    - id: decorIndex
      type: System.Nullable{System.Int32}
      description: If not null breaks only this part of the decor for give face. Requires side to be set.
    return:
      type: System.Boolean
    content.vb: Function BreakDecor(world As IWorldAccessor, pos As BlockPos, side As BlockFacing = Nothing, decorIndex As Integer? = Nothing) As Boolean
  overload: Vintagestory.API.Common.IWorldChunk.BreakDecor*
  nameWithType.vb: IWorldChunk.BreakDecor(IWorldAccessor, BlockPos, BlockFacing, Integer?)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.BreakDecor(Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockFacing, Integer?)
  name.vb: BreakDecor(IWorldAccessor, BlockPos, BlockFacing, Integer?)
- uid: Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32,System.Boolean)
  id: BreakAllDecorFast(Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32,System.Boolean)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: BreakAllDecorFast(IWorldAccessor, BlockPos, int, bool)
  nameWithType: IWorldChunk.BreakAllDecorFast(IWorldAccessor, BlockPos, int, bool)
  fullName: Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast(Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, int, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes a decor block from given position, saves a few cpu cycles by not calculating index3d
  example: []
  syntax:
    content: void BreakAllDecorFast(IWorldAccessor world, BlockPos pos, int index3d, bool callOnBrokenAsDecor = true)
    parameters:
    - id: world
      type: Vintagestory.API.Common.IWorldAccessor
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: index3d
      type: System.Int32
      description: ''
    - id: callOnBrokenAsDecor
      type: System.Boolean
      description: When set to true it will call block.OnBrokenAsDecor(...) which is used to drop the decors of that block
    content.vb: Sub BreakAllDecorFast(world As IWorldAccessor, pos As BlockPos, index3d As Integer, callOnBrokenAsDecor As Boolean = True)
  overload: Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast*
  nameWithType.vb: IWorldChunk.BreakAllDecorFast(IWorldAccessor, BlockPos, Integer, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast(Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, Integer, Boolean)
  name.vb: BreakAllDecorFast(IWorldAccessor, BlockPos, Integer, Boolean)
- uid: Vintagestory.API.Common.IWorldChunk.GetDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  id: GetDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetDecors(IBlockAccessor, BlockPos)
  nameWithType: IWorldChunk.GetDecors(IBlockAccessor, BlockPos)
  fullName: Vintagestory.API.Common.IWorldChunk.GetDecors(Vintagestory.API.Common.IBlockAccessor, Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: ''
  example: []
  syntax:
    content: Block[] GetDecors(IBlockAccessor blockAccessor, BlockPos pos)
    parameters:
    - id: blockAccessor
      type: Vintagestory.API.Common.IBlockAccessor
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.Block[]
      description: ''
    content.vb: Function GetDecors(blockAccessor As IBlockAccessor, pos As BlockPos) As Block()
  overload: Vintagestory.API.Common.IWorldChunk.GetDecors*
- uid: Vintagestory.API.Common.IWorldChunk.GetSubDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetSubDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  id: GetSubDecors(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetSubDecors(IBlockAccessor, BlockPos)
  nameWithType: IWorldChunk.GetSubDecors(IBlockAccessor, BlockPos)
  fullName: Vintagestory.API.Common.IWorldChunk.GetSubDecors(Vintagestory.API.Common.IBlockAccessor, Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: ''
  example: []
  syntax:
    content: Dictionary<int, Block> GetSubDecors(IBlockAccessor blockAccessor, BlockPos position)
    parameters:
    - id: blockAccessor
      type: Vintagestory.API.Common.IBlockAccessor
      description: ''
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block}
      description: ''
    content.vb: Function GetSubDecors(blockAccessor As IBlockAccessor, position As BlockPos) As Dictionary(Of Integer, Block)
  overload: Vintagestory.API.Common.IWorldChunk.GetSubDecors*
- uid: Vintagestory.API.Common.IWorldChunk.GetDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: GetDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetDecor(IBlockAccessor, BlockPos, int)
  nameWithType: IWorldChunk.GetDecor(IBlockAccessor, BlockPos, int)
  fullName: Vintagestory.API.Common.IWorldChunk.GetDecor(Vintagestory.API.Common.IBlockAccessor, Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: Block GetDecor(IBlockAccessor blockAccessor, BlockPos pos, int decorIndex)
    parameters:
    - id: blockAccessor
      type: Vintagestory.API.Common.IBlockAccessor
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
    - id: decorIndex
      type: System.Int32
    return:
      type: Vintagestory.API.Common.Block
    content.vb: Function GetDecor(blockAccessor As IBlockAccessor, pos As BlockPos, decorIndex As Integer) As Block
  overload: Vintagestory.API.Common.IWorldChunk.GetDecor*
  nameWithType.vb: IWorldChunk.GetDecor(IBlockAccessor, BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldChunk.GetDecor(Vintagestory.API.Common.IBlockAccessor, Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: GetDecor(IBlockAccessor, BlockPos, Integer)
- uid: Vintagestory.API.Common.IWorldChunk.SetDecors(System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block})
  commentId: M:Vintagestory.API.Common.IWorldChunk.SetDecors(System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block})
  id: SetDecors(System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block})
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: SetDecors(Dictionary<int, Block>)
  nameWithType: IWorldChunk.SetDecors(Dictionary<int, Block>)
  fullName: Vintagestory.API.Common.IWorldChunk.SetDecors(System.Collections.Generic.Dictionary<int, Vintagestory.API.Common.Block>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Set entire Decors for a chunk - used in Server-&gt;Client updates
  example: []
  syntax:
    content: void SetDecors(Dictionary<int, Block> newDecors)
    parameters:
    - id: newDecors
      type: System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block}
      description: ''
    content.vb: Sub SetDecors(newDecors As Dictionary(Of Integer, Block))
  overload: Vintagestory.API.Common.IWorldChunk.SetDecors*
  nameWithType.vb: IWorldChunk.SetDecors(Dictionary(Of Integer, Block))
  fullName.vb: Vintagestory.API.Common.IWorldChunk.SetDecors(System.Collections.Generic.Dictionary(Of Integer, Vintagestory.API.Common.Block))
  name.vb: SetDecors(Dictionary(Of Integer, Block))
- uid: Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[])
  commentId: M:Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[])
  id: AdjustSelectionBoxForDecor(Vintagestory.API.Common.IBlockAccessor,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[])
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: AdjustSelectionBoxForDecor(IBlockAccessor, BlockPos, Cuboidf[])
  nameWithType: IWorldChunk.AdjustSelectionBoxForDecor(IBlockAccessor, BlockPos, Cuboidf[])
  fullName: Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor(Vintagestory.API.Common.IBlockAccessor, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Cuboidf[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Adds extra selection boxes in case a decor block is attached at given position
  example: []
  syntax:
    content: Cuboidf[] AdjustSelectionBoxForDecor(IBlockAccessor blockAccessor, BlockPos pos, Cuboidf[] orig)
    parameters:
    - id: blockAccessor
      type: Vintagestory.API.Common.IBlockAccessor
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: orig
      type: Vintagestory.API.MathTools.Cuboidf[]
      description: ''
    return:
      type: Vintagestory.API.MathTools.Cuboidf[]
      description: ''
    content.vb: Function AdjustSelectionBoxForDecor(blockAccessor As IBlockAccessor, pos As BlockPos, orig As Cuboidf()) As Cuboidf()
  overload: Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor*
  nameWithType.vb: IWorldChunk.AdjustSelectionBoxForDecor(IBlockAccessor, BlockPos, Cuboidf())
  fullName.vb: Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor(Vintagestory.API.Common.IBlockAccessor, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Cuboidf())
  name.vb: AdjustSelectionBoxForDecor(IBlockAccessor, BlockPos, Cuboidf())
- uid: Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering
  commentId: M:Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering
  id: FinishLightDoubleBuffering
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: FinishLightDoubleBuffering()
  nameWithType: IWorldChunk.FinishLightDoubleBuffering()
  fullName: Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Only to be implemented client side
  example: []
  syntax:
    content: void FinishLightDoubleBuffering()
    content.vb: Sub FinishLightDoubleBuffering()
  overload: Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering*
- uid: Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Collections.Generic.IList{Vintagestory.API.Common.Block})
  commentId: M:Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Collections.Generic.IList{Vintagestory.API.Common.Block})
  id: GetLightAbsorptionAt(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Collections.Generic.IList{Vintagestory.API.Common.Block})
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: GetLightAbsorptionAt(int, BlockPos, IList<Block>)
  nameWithType: IWorldChunk.GetLightAbsorptionAt(int, BlockPos, IList<Block>)
  fullName: Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt(int, Vintagestory.API.MathTools.BlockPos, System.Collections.Generic.IList<Vintagestory.API.Common.Block>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the higher light absorption between solids and fluids block layers
  example: []
  syntax:
    content: int GetLightAbsorptionAt(int index3d, BlockPos blockPos, IList<Block> blockTypes)
    parameters:
    - id: index3d
      type: System.Int32
      description: ''
    - id: blockPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: blockTypes
      type: System.Collections.Generic.IList{Vintagestory.API.Common.Block}
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetLightAbsorptionAt(index3d As Integer, blockPos As BlockPos, blockTypes As IList(Of Block)) As Integer
  overload: Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt*
  nameWithType.vb: IWorldChunk.GetLightAbsorptionAt(Integer, BlockPos, IList(Of Block))
  fullName.vb: Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt(Integer, Vintagestory.API.MathTools.BlockPos, System.Collections.Generic.IList(Of Vintagestory.API.Common.Block))
  name.vb: GetLightAbsorptionAt(Integer, BlockPos, IList(Of Block))
- uid: Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock
  commentId: M:Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock
  id: AcquireBlockReadLock
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: AcquireBlockReadLock()
  nameWithType: IWorldChunk.AcquireBlockReadLock()
  fullName: Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    For bulk chunk GetBlock operations, allows the chunkDataLayers to be pre-locked for reading, instead of entering and releasing one lock per read

    <br />Best used mainly on the server side unless you know what you are doing.  The client-side Chunk Tesselator can need read-access to a chunk at any time so making heavy use of this would cause rendering delays on the client

    <br />Make sure always to call ReleaseBulkReadLock() when finished.  Use a try/finally block if necessary, and complete all read operations within 8 seconds
  example: []
  syntax:
    content: void AcquireBlockReadLock()
    content.vb: Sub AcquireBlockReadLock()
  overload: Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock*
- uid: Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock
  commentId: M:Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock
  id: ReleaseBlockReadLock
  parent: Vintagestory.API.Common.IWorldChunk
  langs:
  - csharp
  - vb
  name: ReleaseBlockReadLock()
  nameWithType: IWorldChunk.ReleaseBlockReadLock()
  fullName: Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    For bulk chunk GetBlock operations, allows the chunkDataLayers to be pre-locked for reading, instead of entering and releasing one lock per read

    <br />Make sure always to call ReleaseBulkReadLock() when finished.  Use a try/finally block if necessary, and complete all read operations within 8 seconds
  example: []
  syntax:
    content: void ReleaseBlockReadLock()
    content.vb: Sub ReleaseBlockReadLock()
  overload: Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock*
references:
- uid: Vintagestory.API.Common
  commentId: N:Vintagestory.API.Common
  href: Vintagestory.html
  name: Vintagestory.API.Common
  nameWithType: Vintagestory.API.Common
  fullName: Vintagestory.API.Common
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: Vintagestory.API.Common.IWorldChunk.Empty*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Empty
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Empty
  name: Empty
  nameWithType: IWorldChunk.Empty
  fullName: Vintagestory.API.Common.IWorldChunk.Empty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Common.IWorldChunk.MapChunk*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.MapChunk
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_MapChunk
  name: MapChunk
  nameWithType: IWorldChunk.MapChunk
  fullName: Vintagestory.API.Common.IWorldChunk.MapChunk
- uid: Vintagestory.API.Common.IMapChunk
  commentId: T:Vintagestory.API.Common.IMapChunk
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IMapChunk.html
  name: IMapChunk
  nameWithType: IMapChunk
  fullName: Vintagestory.API.Common.IMapChunk
- uid: Vintagestory.API.Common.IWorldChunk.Data*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Data
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Data
  name: Data
  nameWithType: IWorldChunk.Data
  fullName: Vintagestory.API.Common.IWorldChunk.Data
- uid: Vintagestory.API.Common.IChunkBlocks
  commentId: T:Vintagestory.API.Common.IChunkBlocks
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IChunkBlocks.html
  name: IChunkBlocks
  nameWithType: IChunkBlocks
  fullName: Vintagestory.API.Common.IChunkBlocks
- uid: Vintagestory.API.Common.IWorldChunk.Data
  commentId: P:Vintagestory.API.Common.IWorldChunk.Data
  parent: Vintagestory.API.Common.IWorldChunk
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Data
  name: Data
  nameWithType: IWorldChunk.Data
  fullName: Vintagestory.API.Common.IWorldChunk.Data
- uid: Vintagestory.API.Common.IWorldChunk.Blocks*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Blocks
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Blocks
  name: Blocks
  nameWithType: IWorldChunk.Blocks
  fullName: Vintagestory.API.Common.IWorldChunk.Blocks
- uid: Vintagestory.API.Common.IWorldChunk
  commentId: T:Vintagestory.API.Common.IWorldChunk
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IWorldChunk.html
  name: IWorldChunk
  nameWithType: IWorldChunk
  fullName: Vintagestory.API.Common.IWorldChunk
- uid: Vintagestory.API.Common.IWorldChunk.Lighting*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Lighting
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Lighting
  name: Lighting
  nameWithType: IWorldChunk.Lighting
  fullName: Vintagestory.API.Common.IWorldChunk.Lighting
- uid: Vintagestory.API.Common.IChunkLight
  commentId: T:Vintagestory.API.Common.IChunkLight
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IChunkLight.html
  name: IChunkLight
  nameWithType: IChunkLight
  fullName: Vintagestory.API.Common.IChunkLight
- uid: Vintagestory.API.Common.IWorldChunk.MaybeBlocks*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.MaybeBlocks
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_MaybeBlocks
  name: MaybeBlocks
  nameWithType: IWorldChunk.MaybeBlocks
  fullName: Vintagestory.API.Common.IWorldChunk.MaybeBlocks
- uid: Vintagestory.API.Common.IWorldChunk.Entities*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Entities
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Entities
  name: Entities
  nameWithType: IWorldChunk.Entities
  fullName: Vintagestory.API.Common.IWorldChunk.Entities
- uid: Vintagestory.API.Common.Entities.Entity[]
  isExternal: true
  href: Vintagestory.API.Common.Entities.Entity.html
  name: Entity[]
  nameWithType: Entity[]
  fullName: Vintagestory.API.Common.Entities.Entity[]
  nameWithType.vb: Entity()
  fullName.vb: Vintagestory.API.Common.Entities.Entity()
  name.vb: Entity()
  spec.csharp:
  - uid: Vintagestory.API.Common.Entities.Entity
    name: Entity
    href: Vintagestory.API.Common.Entities.Entity.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.Entities.Entity
    name: Entity
    href: Vintagestory.API.Common.Entities.Entity.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.EntitiesCount*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.EntitiesCount
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_EntitiesCount
  name: EntitiesCount
  nameWithType: IWorldChunk.EntitiesCount
  fullName: Vintagestory.API.Common.IWorldChunk.EntitiesCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Vintagestory.API.Common.IWorldChunk.BlockEntities*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.BlockEntities
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_BlockEntities
  name: BlockEntities
  nameWithType: IWorldChunk.BlockEntities
  fullName: Vintagestory.API.Common.IWorldChunk.BlockEntities
- uid: System.Collections.Generic.Dictionary{Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.BlockEntity}
  commentId: T:System.Collections.Generic.Dictionary{Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.BlockEntity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<BlockPos, BlockEntity>
  nameWithType: Dictionary<BlockPos, BlockEntity>
  fullName: System.Collections.Generic.Dictionary<Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.BlockEntity>
  nameWithType.vb: Dictionary(Of BlockPos, BlockEntity)
  fullName.vb: System.Collections.Generic.Dictionary(Of Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.BlockEntity)
  name.vb: Dictionary(Of BlockPos, BlockEntity)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.BlockEntity
    name: BlockEntity
    href: Vintagestory.API.Common.BlockEntity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.BlockEntity
    name: BlockEntity
    href: Vintagestory.API.Common.BlockEntity.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Common.IWorldChunk.Unpack*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Unpack
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Unpack
  name: Unpack
  nameWithType: IWorldChunk.Unpack
  fullName: Vintagestory.API.Common.IWorldChunk.Unpack
- uid: Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Unpack_ReadOnly
  name: Unpack_ReadOnly
  nameWithType: IWorldChunk.Unpack_ReadOnly
  fullName: Vintagestory.API.Common.IWorldChunk.Unpack_ReadOnly
- uid: Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_UnpackAndReadBlock_System_Int32_System_Int32_
  name: UnpackAndReadBlock
  nameWithType: IWorldChunk.UnpackAndReadBlock
  fullName: Vintagestory.API.Common.IWorldChunk.UnpackAndReadBlock
- uid: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Unpack_AndReadLight_System_Int32_
  name: Unpack_AndReadLight
  nameWithType: IWorldChunk.Unpack_AndReadLight
  fullName: Vintagestory.API.Common.IWorldChunk.Unpack_AndReadLight
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Vintagestory.API.Common.IWorldChunk.MarkModified*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.MarkModified
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_MarkModified
  name: MarkModified
  nameWithType: IWorldChunk.MarkModified
  fullName: Vintagestory.API.Common.IWorldChunk.MarkModified
- uid: Vintagestory.API.Common.IWorldChunk.MarkFresh*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.MarkFresh
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_MarkFresh
  name: MarkFresh
  nameWithType: IWorldChunk.MarkFresh
  fullName: Vintagestory.API.Common.IWorldChunk.MarkFresh
- uid: Vintagestory.API.Common.IWorldChunk.LightPositions*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.LightPositions
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_LightPositions
  name: LightPositions
  nameWithType: IWorldChunk.LightPositions
  fullName: Vintagestory.API.Common.IWorldChunk.LightPositions
- uid: System.Collections.Generic.HashSet{System.Int32}
  commentId: T:System.Collections.Generic.HashSet{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<int>
  nameWithType: HashSet<int>
  fullName: System.Collections.Generic.HashSet<int>
  nameWithType.vb: HashSet(Of Integer)
  fullName.vb: System.Collections.Generic.HashSet(Of Integer)
  name.vb: HashSet(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.Disposed*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.Disposed
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_Disposed
  name: Disposed
  nameWithType: IWorldChunk.Disposed
  fullName: Vintagestory.API.Common.IWorldChunk.Disposed
- uid: Vintagestory.API.Common.IWorldChunk.AddEntity*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.AddEntity
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_AddEntity_Vintagestory_API_Common_Entities_Entity_
  name: AddEntity
  nameWithType: IWorldChunk.AddEntity
  fullName: Vintagestory.API.Common.IWorldChunk.AddEntity
- uid: Vintagestory.API.Common.Entities.Entity
  commentId: T:Vintagestory.API.Common.Entities.Entity
  parent: Vintagestory.API.Common.Entities
  href: Vintagestory.API.Common.Entities.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: Vintagestory.API.Common.Entities.Entity
- uid: Vintagestory.API.Common.Entities
  commentId: N:Vintagestory.API.Common.Entities
  href: Vintagestory.html
  name: Vintagestory.API.Common.Entities
  nameWithType: Vintagestory.API.Common.Entities
  fullName: Vintagestory.API.Common.Entities
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  - name: .
  - uid: Vintagestory.API.Common.Entities
    name: Entities
    href: Vintagestory.API.Common.Entities.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  - name: .
  - uid: Vintagestory.API.Common.Entities
    name: Entities
    href: Vintagestory.API.Common.Entities.html
- uid: Vintagestory.API.Common.IWorldChunk.RemoveEntity*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.RemoveEntity
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_RemoveEntity_System_Int64_
  name: RemoveEntity
  nameWithType: IWorldChunk.RemoveEntity
  fullName: Vintagestory.API.Common.IWorldChunk.RemoveEntity
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Vintagestory.API.Common.IWorldChunk.SetModdata*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.SetModdata
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_SetModdata_System_String_System_Byte___
  name: SetModdata
  nameWithType: IWorldChunk.SetModdata
  fullName: Vintagestory.API.Common.IWorldChunk.SetModdata
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.RemoveModdata*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.RemoveModdata
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_RemoveModdata_System_String_
  name: RemoveModdata
  nameWithType: IWorldChunk.RemoveModdata
  fullName: Vintagestory.API.Common.IWorldChunk.RemoveModdata
- uid: Vintagestory.API.Common.IWorldChunk.GetModdata*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetModdata
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetModdata_System_String_
  name: GetModdata
  nameWithType: IWorldChunk.GetModdata
  fullName: Vintagestory.API.Common.IWorldChunk.GetModdata
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Vintagestory.API.Common.IWorldChunk.LiveModData*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.LiveModData
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_LiveModData
  name: LiveModData
  nameWithType: IWorldChunk.LiveModData
  fullName: Vintagestory.API.Common.IWorldChunk.LiveModData
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, object>
  nameWithType: Dictionary<string, object>
  fullName: System.Collections.Generic.Dictionary<string, object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetLocalBlockAtBlockPos_Vintagestory_API_Common_IWorldAccessor_Vintagestory_API_MathTools_BlockPos_
  name: GetLocalBlockAtBlockPos
  nameWithType: IWorldChunk.GetLocalBlockAtBlockPos
  fullName: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos
- uid: Vintagestory.API.Common.IWorldAccessor
  commentId: T:Vintagestory.API.Common.IWorldAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IWorldAccessor.html
  name: IWorldAccessor
  nameWithType: IWorldAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor
- uid: Vintagestory.API.MathTools.BlockPos
  commentId: T:Vintagestory.API.MathTools.BlockPos
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockPos.html
  name: BlockPos
  nameWithType: BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos
- uid: Vintagestory.API.Common.Block
  commentId: T:Vintagestory.API.Common.Block
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.Block.html
  name: Block
  nameWithType: Block
  fullName: Vintagestory.API.Common.Block
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetLocalBlockAtBlockPos_LockFree_Vintagestory_API_Common_IWorldAccessor_Vintagestory_API_MathTools_BlockPos_System_Int32_
  name: GetLocalBlockAtBlockPos_LockFree
  nameWithType: IWorldChunk.GetLocalBlockAtBlockPos_LockFree
  fullName: Vintagestory.API.Common.IWorldChunk.GetLocalBlockAtBlockPos_LockFree
- uid: Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetLocalBlockEntityAtBlockPos_Vintagestory_API_MathTools_BlockPos_
  name: GetLocalBlockEntityAtBlockPos
  nameWithType: IWorldChunk.GetLocalBlockEntityAtBlockPos
  fullName: Vintagestory.API.Common.IWorldChunk.GetLocalBlockEntityAtBlockPos
- uid: Vintagestory.API.Common.BlockEntity
  commentId: T:Vintagestory.API.Common.BlockEntity
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.BlockEntity.html
  name: BlockEntity
  nameWithType: BlockEntity
  fullName: Vintagestory.API.Common.BlockEntity
- uid: Vintagestory.API.Common.IWorldChunk.SetDecor*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.SetDecor
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_SetDecor_Vintagestory_API_Common_Block_System_Int32_Vintagestory_API_MathTools_BlockFacing_
  name: SetDecor
  nameWithType: IWorldChunk.SetDecor
  fullName: Vintagestory.API.Common.IWorldChunk.SetDecor
- uid: Vintagestory.API.MathTools.BlockFacing
  commentId: T:Vintagestory.API.MathTools.BlockFacing
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockFacing.html
  name: BlockFacing
  nameWithType: BlockFacing
  fullName: Vintagestory.API.MathTools.BlockFacing
- uid: Vintagestory.API.Common.IWorldChunk.BreakDecor*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.BreakDecor
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_BreakDecor_Vintagestory_API_Common_IWorldAccessor_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockFacing_System_Nullable_System_Int32__
  name: BreakDecor
  nameWithType: IWorldChunk.BreakDecor
  fullName: Vintagestory.API.Common.IWorldChunk.BreakDecor
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_BreakAllDecorFast_Vintagestory_API_Common_IWorldAccessor_Vintagestory_API_MathTools_BlockPos_System_Int32_System_Boolean_
  name: BreakAllDecorFast
  nameWithType: IWorldChunk.BreakAllDecorFast
  fullName: Vintagestory.API.Common.IWorldChunk.BreakAllDecorFast
- uid: Vintagestory.API.Common.IWorldChunk.GetDecors*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetDecors
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetDecors_Vintagestory_API_Common_IBlockAccessor_Vintagestory_API_MathTools_BlockPos_
  name: GetDecors
  nameWithType: IWorldChunk.GetDecors
  fullName: Vintagestory.API.Common.IWorldChunk.GetDecors
- uid: Vintagestory.API.Common.IBlockAccessor
  commentId: T:Vintagestory.API.Common.IBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessor.html
  name: IBlockAccessor
  nameWithType: IBlockAccessor
  fullName: Vintagestory.API.Common.IBlockAccessor
- uid: Vintagestory.API.Common.Block[]
  isExternal: true
  href: Vintagestory.API.Common.Block.html
  name: Block[]
  nameWithType: Block[]
  fullName: Vintagestory.API.Common.Block[]
  nameWithType.vb: Block()
  fullName.vb: Vintagestory.API.Common.Block()
  name.vb: Block()
  spec.csharp:
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.GetSubDecors*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetSubDecors
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetSubDecors_Vintagestory_API_Common_IBlockAccessor_Vintagestory_API_MathTools_BlockPos_
  name: GetSubDecors
  nameWithType: IWorldChunk.GetSubDecors
  fullName: Vintagestory.API.Common.IWorldChunk.GetSubDecors
- uid: System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, Block>
  nameWithType: Dictionary<int, Block>
  fullName: System.Collections.Generic.Dictionary<int, Vintagestory.API.Common.Block>
  nameWithType.vb: Dictionary(Of Integer, Block)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, Vintagestory.API.Common.Block)
  name.vb: Dictionary(Of Integer, Block)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.GetDecor*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetDecor
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetDecor_Vintagestory_API_Common_IBlockAccessor_Vintagestory_API_MathTools_BlockPos_System_Int32_
  name: GetDecor
  nameWithType: IWorldChunk.GetDecor
  fullName: Vintagestory.API.Common.IWorldChunk.GetDecor
- uid: Vintagestory.API.Common.IWorldChunk.SetDecors*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.SetDecors
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_SetDecors_System_Collections_Generic_Dictionary_System_Int32_Vintagestory_API_Common_Block__
  name: SetDecors
  nameWithType: IWorldChunk.SetDecors
  fullName: Vintagestory.API.Common.IWorldChunk.SetDecors
- uid: Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_AdjustSelectionBoxForDecor_Vintagestory_API_Common_IBlockAccessor_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_Cuboidf___
  name: AdjustSelectionBoxForDecor
  nameWithType: IWorldChunk.AdjustSelectionBoxForDecor
  fullName: Vintagestory.API.Common.IWorldChunk.AdjustSelectionBoxForDecor
- uid: Vintagestory.API.MathTools.Cuboidf[]
  isExternal: true
  href: Vintagestory.API.MathTools.Cuboidf.html
  name: Cuboidf[]
  nameWithType: Cuboidf[]
  fullName: Vintagestory.API.MathTools.Cuboidf[]
  nameWithType.vb: Cuboidf()
  fullName.vb: Vintagestory.API.MathTools.Cuboidf()
  name.vb: Cuboidf()
  spec.csharp:
  - uid: Vintagestory.API.MathTools.Cuboidf
    name: Cuboidf
    href: Vintagestory.API.MathTools.Cuboidf.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.MathTools.Cuboidf
    name: Cuboidf
    href: Vintagestory.API.MathTools.Cuboidf.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_FinishLightDoubleBuffering
  name: FinishLightDoubleBuffering
  nameWithType: IWorldChunk.FinishLightDoubleBuffering
  fullName: Vintagestory.API.Common.IWorldChunk.FinishLightDoubleBuffering
- uid: Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_GetLightAbsorptionAt_System_Int32_Vintagestory_API_MathTools_BlockPos_System_Collections_Generic_IList_Vintagestory_API_Common_Block__
  name: GetLightAbsorptionAt
  nameWithType: IWorldChunk.GetLightAbsorptionAt
  fullName: Vintagestory.API.Common.IWorldChunk.GetLightAbsorptionAt
- uid: System.Collections.Generic.IList{Vintagestory.API.Common.Block}
  commentId: T:System.Collections.Generic.IList{Vintagestory.API.Common.Block}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Block>
  nameWithType: IList<Block>
  fullName: System.Collections.Generic.IList<Vintagestory.API.Common.Block>
  nameWithType.vb: IList(Of Block)
  fullName.vb: System.Collections.Generic.IList(Of Vintagestory.API.Common.Block)
  name.vb: IList(Of Block)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_AcquireBlockReadLock
  name: AcquireBlockReadLock
  nameWithType: IWorldChunk.AcquireBlockReadLock
  fullName: Vintagestory.API.Common.IWorldChunk.AcquireBlockReadLock
- uid: Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock*
  commentId: Overload:Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock
  href: Vintagestory.API.Common.IWorldChunk.html#Vintagestory_API_Common_IWorldChunk_ReleaseBlockReadLock
  name: ReleaseBlockReadLock
  nameWithType: IWorldChunk.ReleaseBlockReadLock
  fullName: Vintagestory.API.Common.IWorldChunk.ReleaseBlockReadLock
