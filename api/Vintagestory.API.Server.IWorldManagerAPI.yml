### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Server.IWorldManagerAPI
  commentId: T:Vintagestory.API.Server.IWorldManagerAPI
  id: IWorldManagerAPI
  parent: Vintagestory.API.Server
  children:
  - Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks
  - Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions
  - Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks
  - Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks
  - Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk(System.Int32,System.Int32,System.Int32,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue
  - Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.ChunkSize
  - Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount
  - Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle
  - Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName
  - Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition
  - Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn(Vintagestory.API.Server.IServerPlayer,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.GetBlockId(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor(System.Boolean,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.GetChunk(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.GetChunk(System.Int64)
  - Vintagestory.API.Server.IWorldManagerAPI.GetChunk(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(System.Int64)
  - Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(System.Int64)
  - Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId
  - Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.HasChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer)
  - Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn(System.Int32,System.Int32,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  - Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  - Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  - Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  - Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D(System.Int64)
  - Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos(System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D(System.Int64)
  - Vintagestory.API.Server.IWorldManagerAPI.MapSizeX
  - Vintagestory.API.Server.IWorldManagerAPI.MapSizeY
  - Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ
  - Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn(System.Int32,System.Int32,Vintagestory.API.Server.ChunkPeekOptions)
  - Vintagestory.API.Server.IWorldManagerAPI.RegionSize
  - Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk(System.Int32,System.Int32,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.SaveGame
  - Vintagestory.API.Server.IWorldManagerAPI.Seed
  - Vintagestory.API.Server.IWorldManagerAPI.SendChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer,System.Boolean)
  - Vintagestory.API.Server.IWorldManagerAPI.SendChunks
  - Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels(System.Single[])
  - Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel(System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness(System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels(System.Single[])
  - Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  - Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists(System.Int32,System.Int32,System.Int32,System.Action{System.Boolean})
  - Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists(System.Int32,System.Int32,System.Action{System.Boolean})
  - Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists(System.Int32,System.Int32,System.Action{System.Boolean})
  - Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IWorldManagerAPI
  nameWithType: IWorldManagerAPI
  fullName: Vintagestory.API.Server.IWorldManagerAPI
  type: Interface
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Methods to modify the game world
  example: []
  syntax:
    content: public interface IWorldManagerAPI
    content.vb: Public Interface IWorldManagerAPI
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks
  id: AllLoadedMapchunks
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: AllLoadedMapchunks
  nameWithType: IWorldManagerAPI.AllLoadedMapchunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Returns a (cloned) list of all currently loaded map chunks. The key is the 2d index of the map chunk, can be turned into an x/z coord
  example: []
  syntax:
    content: Dictionary<long, IMapChunk> AllLoadedMapchunks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Common.IMapChunk}
    content.vb: ReadOnly Property AllLoadedMapchunks As Dictionary(Of Long, IMapChunk)
  overload: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks*
- uid: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions
  id: AllLoadedMapRegions
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: AllLoadedMapRegions
  nameWithType: IWorldManagerAPI.AllLoadedMapRegions
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Returns a (cloned) list of all currently loaded map regions. The key is the 2d index of the map region, can be turned into an x/z coord
  example: []
  syntax:
    content: Dictionary<long, IMapRegion> AllLoadedMapRegions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Common.IMapRegion}
    content.vb: ReadOnly Property AllLoadedMapRegions As Dictionary(Of Long, IMapRegion)
  overload: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions*
- uid: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks
  id: AllLoadedChunks
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: AllLoadedChunks
  nameWithType: IWorldManagerAPI.AllLoadedChunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: 'Returns a (cloned) list of all currently loaded chunks. The key is the 3d index of the chunk, can be turned into an x/y/z coord. Warning: This locks the loaded chunk dictionary during the clone, preventing other threads from updating it. In other words: Using this method often will have a significant performance impact.'
  example: []
  syntax:
    content: Dictionary<long, IServerChunk> AllLoadedChunks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Server.IServerChunk}
    content.vb: ReadOnly Property AllLoadedChunks As Dictionary(Of Long, IServerChunk)
  overload: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks*
- uid: Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount
  id: CurrentGeneratingChunkCount
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: CurrentGeneratingChunkCount
  nameWithType: IWorldManagerAPI.CurrentGeneratingChunkCount
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Amount of chunk columns currently in the generating queue
  example: []
  syntax:
    content: int CurrentGeneratingChunkCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentGeneratingChunkCount As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount*
- uid: Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue
  id: ChunkDeletionsInQueue
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: ChunkDeletionsInQueue
  nameWithType: IWorldManagerAPI.ChunkDeletionsInQueue
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: int ChunkDeletionsInQueue { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property ChunkDeletionsInQueue As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue*
- uid: Vintagestory.API.Server.IWorldManagerAPI.SaveGame
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.SaveGame
  id: SaveGame
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SaveGame
  nameWithType: IWorldManagerAPI.SaveGame
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SaveGame
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: The worlds savegame object. If you change these values they will be permanently stored
  example: []
  syntax:
    content: ISaveGame SaveGame { get; }
    parameters: []
    return:
      type: Vintagestory.API.Server.ISaveGame
    content.vb: ReadOnly Property SaveGame As ISaveGame
  overload: Vintagestory.API.Server.IWorldManagerAPI.SaveGame*
- uid: Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle
  id: CurrentPlayStyle
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: CurrentPlayStyle
  nameWithType: IWorldManagerAPI.CurrentPlayStyle
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: The currently selected playstyle
  example: []
  syntax:
    content: PlayStyle CurrentPlayStyle { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.PlayStyle
    content.vb: ReadOnly Property CurrentPlayStyle As PlayStyle
  overload: Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle*
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels(System.Single[])
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels(System.Single[])
  id: SetBlockLightLevels(System.Single[])
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SetBlockLightLevels(float[])
  nameWithType: IWorldManagerAPI.SetBlockLightLevels(float[])
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels(float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Allows setting a 32 float array that defines the brightness of each block light level. Has to be set before any players join or any chunks are generated.
  example: []
  syntax:
    content: void SetBlockLightLevels(float[] lightLevels)
    parameters:
    - id: lightLevels
      type: System.Single[]
      description: ''
    content.vb: Sub SetBlockLightLevels(lightLevels As Single())
  overload: Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels*
  nameWithType.vb: IWorldManagerAPI.SetBlockLightLevels(Single())
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels(Single())
  name.vb: SetBlockLightLevels(Single())
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels(System.Single[])
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels(System.Single[])
  id: SetSunLightLevels(System.Single[])
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SetSunLightLevels(float[])
  nameWithType: IWorldManagerAPI.SetSunLightLevels(float[])
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels(float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Allows setting a 32 float array that defines the brightness of each sun light level. Has to be set before any players join or any chunks are generated.
  example: []
  syntax:
    content: void SetSunLightLevels(float[] lightLevels)
    parameters:
    - id: lightLevels
      type: System.Single[]
      description: ''
    content.vb: Sub SetSunLightLevels(lightLevels As Single())
  overload: Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels*
  nameWithType.vb: IWorldManagerAPI.SetSunLightLevels(Single())
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels(Single())
  name.vb: SetSunLightLevels(Single())
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness(System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness(System.Int32)
  id: SetSunBrightness(System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SetSunBrightness(int)
  nameWithType: IWorldManagerAPI.SetSunBrightness(int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Sets the default light range of sunlight. Default is 24. Has to be set before any players join or any chunks are generated.
  example: []
  syntax:
    content: void SetSunBrightness(int lightlevel)
    parameters:
    - id: lightlevel
      type: System.Int32
      description: ''
    content.vb: Sub SetSunBrightness(lightlevel As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness*
  nameWithType.vb: IWorldManagerAPI.SetSunBrightness(Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness(Integer)
  name.vb: SetSunBrightness(Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel(System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel(System.Int32)
  id: SetSeaLevel(System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SetSeaLevel(int)
  nameWithType: IWorldManagerAPI.SetSeaLevel(int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Sets the default sea level for the world to be generated. Currently used by the client to calculate the correct temperature/rainfall values for climate tinting.
  example: []
  syntax:
    content: void SetSeaLevel(int sealevel)
    parameters:
    - id: sealevel
      type: System.Int32
      description: ''
    content.vb: Sub SetSeaLevel(sealevel As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel*
  nameWithType.vb: IWorldManagerAPI.SetSeaLevel(Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel(Integer)
  name.vb: SetSeaLevel(Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(System.Int32,System.Int32)
  id: GetMapRegion(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetMapRegion(int, int)
  nameWithType: IWorldManagerAPI.GetMapRegion(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Gets the Server map region at given coordinate. Returns null if it's not loaded or does not exist yet
  example: []
  syntax:
    content: IMapRegion GetMapRegion(int regionX, int regionZ)
    parameters:
    - id: regionX
      type: System.Int32
      description: ''
    - id: regionZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.IMapRegion
      description: ''
    content.vb: Function GetMapRegion(regionX As Integer, regionZ As Integer) As IMapRegion
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion*
  nameWithType.vb: IWorldManagerAPI.GetMapRegion(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(Integer, Integer)
  name.vb: GetMapRegion(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(System.Int64)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(System.Int64)
  id: GetMapRegion(System.Int64)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetMapRegion(long)
  nameWithType: IWorldManagerAPI.GetMapRegion(long)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Gets the Server map region at given coordinate. Returns null if it's not loaded or does not exist yet
  example: []
  syntax:
    content: IMapRegion GetMapRegion(long index2d)
    parameters:
    - id: index2d
      type: System.Int64
      description: ''
    return:
      type: Vintagestory.API.Common.IMapRegion
      description: ''
    content.vb: Function GetMapRegion(index2d As Long) As IMapRegion
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion*
  nameWithType.vb: IWorldManagerAPI.GetMapRegion(Long)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion(Long)
  name.vb: GetMapRegion(Long)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(System.Int32,System.Int32)
  id: GetMapChunk(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetMapChunk(int, int)
  nameWithType: IWorldManagerAPI.GetMapChunk(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Gets the Server map chunk at given coordinate. Returns null if it's not loaded or does not exist yet
  example: []
  syntax:
    content: IServerMapChunk GetMapChunk(int chunkX, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.IServerMapChunk
      description: ''
    content.vb: Function GetMapChunk(chunkX As Integer, chunkZ As Integer) As IServerMapChunk
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk*
  nameWithType.vb: IWorldManagerAPI.GetMapChunk(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(Integer, Integer)
  name.vb: GetMapChunk(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(System.Int64)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(System.Int64)
  id: GetMapChunk(System.Int64)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetMapChunk(long)
  nameWithType: IWorldManagerAPI.GetMapChunk(long)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Gets the Server map chunk at given coordinate index. Returns null if it's not loaded or does not exist yet
  example: []
  syntax:
    content: IMapChunk GetMapChunk(long index2d)
    parameters:
    - id: index2d
      type: System.Int64
      description: ''
    return:
      type: Vintagestory.API.Common.IMapChunk
      description: ''
    content.vb: Function GetMapChunk(index2d As Long) As IMapChunk
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk*
  nameWithType.vb: IWorldManagerAPI.GetMapChunk(Long)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk(Long)
  name.vb: GetMapChunk(Long)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetChunk(System.Int32,System.Int32,System.Int32)
  id: GetChunk(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetChunk(int, int, int)
  nameWithType: IWorldManagerAPI.GetChunk(int, int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Gets the Server chunk at given coordinate. Returns null if it's not loaded or does not exist yet
  example: []
  syntax:
    content: IServerChunk GetChunk(int chunkX, int chunkY, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkY
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Server.IServerChunk
      description: ''
    content.vb: Function GetChunk(chunkX As Integer, chunkY As Integer, chunkZ As Integer) As IServerChunk
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetChunk*
  nameWithType.vb: IWorldManagerAPI.GetChunk(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(Integer, Integer, Integer)
  name.vb: GetChunk(Integer, Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetChunk(Vintagestory.API.MathTools.BlockPos)
  id: GetChunk(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetChunk(BlockPos)
  nameWithType: IWorldManagerAPI.GetChunk(BlockPos)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Gets the Server chunk at given coordinate. Returns null if it's not loaded or does not exist yet
  example: []
  syntax:
    content: IServerChunk GetChunk(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Server.IServerChunk
      description: ''
    content.vb: Function GetChunk(pos As BlockPos) As IServerChunk
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetChunk*
- uid: Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D(System.Int32,System.Int32,System.Int32)
  id: ChunkIndex3D(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: ChunkIndex3D(int, int, int)
  nameWithType: IWorldManagerAPI.ChunkIndex3D(int, int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: long ChunkIndex3D(int chunkX, int chunkY, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
    - id: chunkY
      type: System.Int32
    - id: chunkZ
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function ChunkIndex3D(chunkX As Integer, chunkY As Integer, chunkZ As Integer) As Long
  overload: Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D*
  nameWithType.vb: IWorldManagerAPI.ChunkIndex3D(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D(Integer, Integer, Integer)
  name.vb: ChunkIndex3D(Integer, Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D(System.Int32,System.Int32)
  id: MapRegionIndex2D(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapRegionIndex2D(int, int)
  nameWithType: IWorldManagerAPI.MapRegionIndex2D(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: long MapRegionIndex2D(int regionX, int regionZ)
    parameters:
    - id: regionX
      type: System.Int32
    - id: regionZ
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function MapRegionIndex2D(regionX As Integer, regionZ As Integer) As Long
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D*
  nameWithType.vb: IWorldManagerAPI.MapRegionIndex2D(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D(Integer, Integer)
  name.vb: MapRegionIndex2D(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos(System.Int32,System.Int32)
  id: MapRegionIndex2DByBlockPos(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapRegionIndex2DByBlockPos(int, int)
  nameWithType: IWorldManagerAPI.MapRegionIndex2DByBlockPos(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: long MapRegionIndex2DByBlockPos(int posX, int posZ)
    parameters:
    - id: posX
      type: System.Int32
    - id: posZ
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function MapRegionIndex2DByBlockPos(posX As Integer, posZ As Integer) As Long
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos*
  nameWithType.vb: IWorldManagerAPI.MapRegionIndex2DByBlockPos(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos(Integer, Integer)
  name.vb: MapRegionIndex2DByBlockPos(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D(System.Int64)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D(System.Int64)
  id: MapRegionPosFromIndex2D(System.Int64)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapRegionPosFromIndex2D(long)
  nameWithType: IWorldManagerAPI.MapRegionPosFromIndex2D(long)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: Vec3i MapRegionPosFromIndex2D(long index2d)
    parameters:
    - id: index2d
      type: System.Int64
    return:
      type: Vintagestory.API.MathTools.Vec3i
    content.vb: Function MapRegionPosFromIndex2D(index2d As Long) As Vec3i
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D*
  nameWithType.vb: IWorldManagerAPI.MapRegionPosFromIndex2D(Long)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D(Long)
  name.vb: MapRegionPosFromIndex2D(Long)
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D(System.Int64)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D(System.Int64)
  id: MapChunkPosFromChunkIndex2D(System.Int64)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapChunkPosFromChunkIndex2D(long)
  nameWithType: IWorldManagerAPI.MapChunkPosFromChunkIndex2D(long)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: Vec2i MapChunkPosFromChunkIndex2D(long index2d)
    parameters:
    - id: index2d
      type: System.Int64
    return:
      type: Vintagestory.API.MathTools.Vec2i
    content.vb: Function MapChunkPosFromChunkIndex2D(index2d As Long) As Vec2i
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D*
  nameWithType.vb: IWorldManagerAPI.MapChunkPosFromChunkIndex2D(Long)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D(Long)
  name.vb: MapChunkPosFromChunkIndex2D(Long)
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D(System.Int32,System.Int32)
  id: MapChunkIndex2D(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapChunkIndex2D(int, int)
  nameWithType: IWorldManagerAPI.MapChunkIndex2D(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: long MapChunkIndex2D(int chunkX, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
    - id: chunkZ
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function MapChunkIndex2D(chunkX As Integer, chunkZ As Integer) As Long
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D*
  nameWithType.vb: IWorldManagerAPI.MapChunkIndex2D(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D(Integer, Integer)
  name.vb: MapChunkIndex2D(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(System.Int64)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetChunk(System.Int64)
  id: GetChunk(System.Int64)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetChunk(long)
  nameWithType: IWorldManagerAPI.GetChunk(long)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Gets the Server chunk at given coordinate. Returns null if it's not loaded or does not exist yet
  example: []
  syntax:
    content: IServerChunk GetChunk(long index3d)
    parameters:
    - id: index3d
      type: System.Int64
      description: ''
    return:
      type: Vintagestory.API.Server.IServerChunk
      description: ''
    content.vb: Function GetChunk(index3d As Long) As IServerChunk
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetChunk*
  nameWithType.vb: IWorldManagerAPI.GetChunk(Long)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetChunk(Long)
  name.vb: GetChunk(Long)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId
  id: GetNextUniqueId
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetNextUniqueId()
  nameWithType: IWorldManagerAPI.GetNextUniqueId()
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Returns a number that is guaranteed to be unique for the current world every time it is called. Curently use for entity herding behavior.
  example: []
  syntax:
    content: long GetNextUniqueId()
    return:
      type: System.Int64
      description: ''
    content.vb: Function GetNextUniqueId() As Long
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId*
- uid: Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks
  id: AutoGenerateChunks
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: AutoGenerateChunks
  nameWithType: IWorldManagerAPI.AutoGenerateChunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Completely disables automatic generation of chunks that normally builds up a radius of chunks around the player.
  example: []
  syntax:
    content: bool AutoGenerateChunks { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property AutoGenerateChunks As Boolean
  overload: Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks*
- uid: Vintagestory.API.Server.IWorldManagerAPI.SendChunks
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.SendChunks
  id: SendChunks
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SendChunks
  nameWithType: IWorldManagerAPI.SendChunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SendChunks
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Disables sending of normal chunks to all players except for force loaded ones using ForceLoadChunkColumn
  example: []
  syntax:
    content: bool SendChunks { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property SendChunks As Boolean
  overload: Vintagestory.API.Server.IWorldManagerAPI.SendChunks*
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  id: LoadChunkColumnFast(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: LoadChunkColumnFast(int, int, ChunkLoadOptions)
  nameWithType: IWorldManagerAPI.LoadChunkColumnFast(int, int, ChunkLoadOptions)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(int, int, Vintagestory.API.Server.ChunkLoadOptions)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchronly high priority load a chunk column at given coordinate.
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadChunkColumnPriority()")]

      void LoadChunkColumnFast(int chunkX, int chunkZ, ChunkLoadOptions options = null)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: options
      type: Vintagestory.API.Server.ChunkLoadOptions
      description: Additional loading options
    content.vb: >-
      <Obsolete("Use LoadChunkColumnPriority()")>

      Sub LoadChunkColumnFast(chunkX As Integer, chunkZ As Integer, options As ChunkLoadOptions = Nothing)
  overload: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadChunkColumnPriority()
  nameWithType.vb: IWorldManagerAPI.LoadChunkColumnFast(Integer, Integer, ChunkLoadOptions)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(Integer, Integer, Vintagestory.API.Server.ChunkLoadOptions)
  name.vb: LoadChunkColumnFast(Integer, Integer, ChunkLoadOptions)
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  id: LoadChunkColumnPriority(System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: LoadChunkColumnPriority(int, int, ChunkLoadOptions)
  nameWithType: IWorldManagerAPI.LoadChunkColumnPriority(int, int, ChunkLoadOptions)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(int, int, Vintagestory.API.Server.ChunkLoadOptions)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchronly high priority load a chunk column at given coordinate.
  example: []
  syntax:
    content: void LoadChunkColumnPriority(int chunkX, int chunkZ, ChunkLoadOptions options = null)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: options
      type: Vintagestory.API.Server.ChunkLoadOptions
      description: Additional loading options
    content.vb: Sub LoadChunkColumnPriority(chunkX As Integer, chunkZ As Integer, options As ChunkLoadOptions = Nothing)
  overload: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority*
  nameWithType.vb: IWorldManagerAPI.LoadChunkColumnPriority(Integer, Integer, ChunkLoadOptions)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(Integer, Integer, Vintagestory.API.Server.ChunkLoadOptions)
  name.vb: LoadChunkColumnPriority(Integer, Integer, ChunkLoadOptions)
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  id: LoadChunkColumnFast(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: LoadChunkColumnFast(int, int, int, int, ChunkLoadOptions)
  nameWithType: IWorldManagerAPI.LoadChunkColumnFast(int, int, int, int, ChunkLoadOptions)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(int, int, int, int, Vintagestory.API.Server.ChunkLoadOptions)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchronly high priority load an area of chunk columns at given coordinates. Make sure that X1&lt;=X2 and Z1&lt;=Z2
  example: []
  syntax:
    content: >-
      [Obsolete("Use LoadChunkColumnPriority()")]

      void LoadChunkColumnFast(int chunkX1, int chunkZ1, int chunkX2, int chunkZ2, ChunkLoadOptions options = null)
    parameters:
    - id: chunkX1
      type: System.Int32
      description: ''
    - id: chunkZ1
      type: System.Int32
      description: ''
    - id: chunkX2
      type: System.Int32
      description: ''
    - id: chunkZ2
      type: System.Int32
      description: ''
    - id: options
      type: Vintagestory.API.Server.ChunkLoadOptions
      description: Additional loading options
    content.vb: >-
      <Obsolete("Use LoadChunkColumnPriority()")>

      Sub LoadChunkColumnFast(chunkX1 As Integer, chunkZ1 As Integer, chunkX2 As Integer, chunkZ2 As Integer, options As ChunkLoadOptions = Nothing)
  overload: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use LoadChunkColumnPriority()
  nameWithType.vb: IWorldManagerAPI.LoadChunkColumnFast(Integer, Integer, Integer, Integer, ChunkLoadOptions)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast(Integer, Integer, Integer, Integer, Vintagestory.API.Server.ChunkLoadOptions)
  name.vb: LoadChunkColumnFast(Integer, Integer, Integer, Integer, ChunkLoadOptions)
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  id: LoadChunkColumnPriority(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.ChunkLoadOptions)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: LoadChunkColumnPriority(int, int, int, int, ChunkLoadOptions)
  nameWithType: IWorldManagerAPI.LoadChunkColumnPriority(int, int, int, int, ChunkLoadOptions)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(int, int, int, int, Vintagestory.API.Server.ChunkLoadOptions)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchronly high priority load an area of chunk columns at given coordinates. Make sure that X1&lt;=X2 and Z1&lt;=Z2
  example: []
  syntax:
    content: void LoadChunkColumnPriority(int chunkX1, int chunkZ1, int chunkX2, int chunkZ2, ChunkLoadOptions options = null)
    parameters:
    - id: chunkX1
      type: System.Int32
      description: ''
    - id: chunkZ1
      type: System.Int32
      description: ''
    - id: chunkX2
      type: System.Int32
      description: ''
    - id: chunkZ2
      type: System.Int32
      description: ''
    - id: options
      type: Vintagestory.API.Server.ChunkLoadOptions
      description: Additional loading options
    content.vb: Sub LoadChunkColumnPriority(chunkX1 As Integer, chunkZ1 As Integer, chunkX2 As Integer, chunkZ2 As Integer, options As ChunkLoadOptions = Nothing)
  overload: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority*
  nameWithType.vb: IWorldManagerAPI.LoadChunkColumnPriority(Integer, Integer, Integer, Integer, ChunkLoadOptions)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority(Integer, Integer, Integer, Integer, Vintagestory.API.Server.ChunkLoadOptions)
  name.vb: LoadChunkColumnPriority(Integer, Integer, Integer, Integer, ChunkLoadOptions)
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn(System.Int32,System.Int32,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn(System.Int32,System.Int32,System.Boolean)
  id: LoadChunkColumn(System.Int32,System.Int32,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: LoadChunkColumn(int, int, bool)
  nameWithType: IWorldManagerAPI.LoadChunkColumn(int, int, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn(int, int, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchronly normal priority load a chunk column at given coordinate. No effect when already loaded.
  example: []
  syntax:
    content: void LoadChunkColumn(int chunkX, int chunkZ, bool keepLoaded = false)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: keepLoaded
      type: System.Boolean
      description: If true, the chunk will never get unloaded unless UnloadChunkColumn() is called
    content.vb: Sub LoadChunkColumn(chunkX As Integer, chunkZ As Integer, keepLoaded As Boolean = False)
  overload: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn*
  nameWithType.vb: IWorldManagerAPI.LoadChunkColumn(Integer, Integer, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn(Integer, Integer, Boolean)
  name.vb: LoadChunkColumn(Integer, Integer, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn(System.Int32,System.Int32,Vintagestory.API.Server.ChunkPeekOptions)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn(System.Int32,System.Int32,Vintagestory.API.Server.ChunkPeekOptions)
  id: PeekChunkColumn(System.Int32,System.Int32,Vintagestory.API.Server.ChunkPeekOptions)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: PeekChunkColumn(int, int, ChunkPeekOptions)
  nameWithType: IWorldManagerAPI.PeekChunkColumn(int, int, ChunkPeekOptions)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn(int, int, Vintagestory.API.Server.ChunkPeekOptions)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Generates chunk at given coordinate, completely bypassing any existing world data and caching methods, in other words generates, a chunk from scratch without keeping it in the list of loaded chunks
  example: []
  syntax:
    content: void PeekChunkColumn(int chunkX, int chunkZ, ChunkPeekOptions options)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: options
      type: Vintagestory.API.Server.ChunkPeekOptions
      description: ''
    content.vb: Sub PeekChunkColumn(chunkX As Integer, chunkZ As Integer, options As ChunkPeekOptions)
  overload: Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn*
  nameWithType.vb: IWorldManagerAPI.PeekChunkColumn(Integer, Integer, ChunkPeekOptions)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn(Integer, Integer, Vintagestory.API.Server.ChunkPeekOptions)
  name.vb: PeekChunkColumn(Integer, Integer, ChunkPeekOptions)
- uid: Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists(System.Int32,System.Int32,System.Int32,System.Action{System.Boolean})
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists(System.Int32,System.Int32,System.Int32,System.Action{System.Boolean})
  id: TestChunkExists(System.Int32,System.Int32,System.Int32,System.Action{System.Boolean})
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: TestChunkExists(int, int, int, Action<bool>)
  nameWithType: IWorldManagerAPI.TestChunkExists(int, int, int, Action<bool>)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists(int, int, int, System.Action<bool>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchrounly checks if this chunk is currently loaded or in the savegame database. Calls the callback method with true or false once done looking up. Does not load the actual chunk data.
  example: []
  syntax:
    content: void TestChunkExists(int chunkX, int chunkY, int chunkZ, Action<bool> onTested)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkY
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: onTested
      type: System.Action{System.Boolean}
      description: ''
    content.vb: Sub TestChunkExists(chunkX As Integer, chunkY As Integer, chunkZ As Integer, onTested As Action(Of Boolean))
  overload: Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists*
  nameWithType.vb: IWorldManagerAPI.TestChunkExists(Integer, Integer, Integer, Action(Of Boolean))
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists(Integer, Integer, Integer, System.Action(Of Boolean))
  name.vb: TestChunkExists(Integer, Integer, Integer, Action(Of Boolean))
- uid: Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists(System.Int32,System.Int32,System.Action{System.Boolean})
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists(System.Int32,System.Int32,System.Action{System.Boolean})
  id: TestMapChunkExists(System.Int32,System.Int32,System.Action{System.Boolean})
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: TestMapChunkExists(int, int, Action<bool>)
  nameWithType: IWorldManagerAPI.TestMapChunkExists(int, int, Action<bool>)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists(int, int, System.Action<bool>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchrounly checks if this map chunk is currently loaded or in the savegame database. Calls the callback method with true or false once done looking up. Does not load the actual map chunk data.
  example: []
  syntax:
    content: void TestMapChunkExists(int chunkX, int chunkZ, Action<bool> onTested)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: onTested
      type: System.Action{System.Boolean}
      description: ''
    content.vb: Sub TestMapChunkExists(chunkX As Integer, chunkZ As Integer, onTested As Action(Of Boolean))
  overload: Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists*
  nameWithType.vb: IWorldManagerAPI.TestMapChunkExists(Integer, Integer, Action(Of Boolean))
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists(Integer, Integer, System.Action(Of Boolean))
  name.vb: TestMapChunkExists(Integer, Integer, Action(Of Boolean))
- uid: Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists(System.Int32,System.Int32,System.Action{System.Boolean})
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists(System.Int32,System.Int32,System.Action{System.Boolean})
  id: TestMapRegionExists(System.Int32,System.Int32,System.Action{System.Boolean})
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: TestMapRegionExists(int, int, Action<bool>)
  nameWithType: IWorldManagerAPI.TestMapRegionExists(int, int, Action<bool>)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists(int, int, System.Action<bool>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Asynchrounly checks if this mapregion is currently loaded or in the savegame database. Calls the callback method with true or false once done looking up. Does not load the actual map region data.
  example: []
  syntax:
    content: void TestMapRegionExists(int regionX, int regionZ, Action<bool> onTested)
    parameters:
    - id: regionX
      type: System.Int32
      description: ''
    - id: regionZ
      type: System.Int32
      description: ''
    - id: onTested
      type: System.Action{System.Boolean}
      description: ''
    content.vb: Sub TestMapRegionExists(regionX As Integer, regionZ As Integer, onTested As Action(Of Boolean))
  overload: Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists*
  nameWithType.vb: IWorldManagerAPI.TestMapRegionExists(Integer, Integer, Action(Of Boolean))
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists(Integer, Integer, System.Action(Of Boolean))
  name.vb: TestMapRegionExists(Integer, Integer, Action(Of Boolean))
- uid: Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: BroadcastChunk(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: BroadcastChunk(int, int, int, bool)
  nameWithType: IWorldManagerAPI.BroadcastChunk(int, int, int, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk(int, int, int, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Send or Resend a loaded chunk to all connected players. Has no effect when the chunk is not loaded
  example: []
  syntax:
    content: void BroadcastChunk(int chunkX, int chunkY, int chunkZ, bool onlyIfInRange = true)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkY
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: onlyIfInRange
      type: System.Boolean
      description: If true, the chunk will not be sent to connected players that are out of range from that chunk
    content.vb: Sub BroadcastChunk(chunkX As Integer, chunkY As Integer, chunkZ As Integer, onlyIfInRange As Boolean = True)
  overload: Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk*
  nameWithType.vb: IWorldManagerAPI.BroadcastChunk(Integer, Integer, Integer, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk(Integer, Integer, Integer, Boolean)
  name.vb: BroadcastChunk(Integer, Integer, Integer, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.HasChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.HasChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer)
  id: HasChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: HasChunk(int, int, int, IServerPlayer)
  nameWithType: IWorldManagerAPI.HasChunk(int, int, int, IServerPlayer)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.HasChunk(int, int, int, Vintagestory.API.Server.IServerPlayer)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Returns true if the server sent chunk at given coords to player and has it not unloaded yet
  example: []
  syntax:
    content: bool HasChunk(int chunkX, int chunkY, int chunkZ, IServerPlayer player)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkY
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: player
      type: Vintagestory.API.Server.IServerPlayer
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function HasChunk(chunkX As Integer, chunkY As Integer, chunkZ As Integer, player As IServerPlayer) As Boolean
  overload: Vintagestory.API.Server.IWorldManagerAPI.HasChunk*
  nameWithType.vb: IWorldManagerAPI.HasChunk(Integer, Integer, Integer, IServerPlayer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.HasChunk(Integer, Integer, Integer, Vintagestory.API.Server.IServerPlayer)
  name.vb: HasChunk(Integer, Integer, Integer, IServerPlayer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.SendChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SendChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer,System.Boolean)
  id: SendChunk(System.Int32,System.Int32,System.Int32,Vintagestory.API.Server.IServerPlayer,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SendChunk(int, int, int, IServerPlayer, bool)
  nameWithType: IWorldManagerAPI.SendChunk(int, int, int, IServerPlayer, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SendChunk(int, int, int, Vintagestory.API.Server.IServerPlayer, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Send or Resend a loaded chunk to a connected player. Has no effect when the chunk is not loaded
  example: []
  syntax:
    content: void SendChunk(int chunkX, int chunkY, int chunkZ, IServerPlayer player, bool onlyIfInRange = true)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkY
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: player
      type: Vintagestory.API.Server.IServerPlayer
      description: ''
    - id: onlyIfInRange
      type: System.Boolean
      description: If true, the chunk will not be sent to connected players that are out of range from that chunk
    content.vb: Sub SendChunk(chunkX As Integer, chunkY As Integer, chunkZ As Integer, player As IServerPlayer, onlyIfInRange As Boolean = True)
  overload: Vintagestory.API.Server.IWorldManagerAPI.SendChunk*
  nameWithType.vb: IWorldManagerAPI.SendChunk(Integer, Integer, Integer, IServerPlayer, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SendChunk(Integer, Integer, Integer, Vintagestory.API.Server.IServerPlayer, Boolean)
  name.vb: SendChunk(Integer, Integer, Integer, IServerPlayer, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk(System.Int32,System.Int32,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk(System.Int32,System.Int32,System.Boolean)
  id: ResendMapChunk(System.Int32,System.Int32,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: ResendMapChunk(int, int, bool)
  nameWithType: IWorldManagerAPI.ResendMapChunk(int, int, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk(int, int, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Send or resent a loaded map chunk to all connected players. Has no effect when the map chunk is not loaded
  example: []
  syntax:
    content: void ResendMapChunk(int chunkX, int chunkZ, bool onlyIfInRange)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    - id: onlyIfInRange
      type: System.Boolean
      description: ''
    content.vb: Sub ResendMapChunk(chunkX As Integer, chunkZ As Integer, onlyIfInRange As Boolean)
  overload: Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk*
  nameWithType.vb: IWorldManagerAPI.ResendMapChunk(Integer, Integer, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk(Integer, Integer, Boolean)
  name.vb: ResendMapChunk(Integer, Integer, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn(System.Int32,System.Int32)
  id: UnloadChunkColumn(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: UnloadChunkColumn(int, int)
  nameWithType: IWorldManagerAPI.UnloadChunkColumn(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Unloads a column of chunks at given coordinate independent of any nearby players and sends an appropriate unload packet to the player
  example: []
  syntax:
    content: void UnloadChunkColumn(int chunkX, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    content.vb: Sub UnloadChunkColumn(chunkX As Integer, chunkZ As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn*
  nameWithType.vb: IWorldManagerAPI.UnloadChunkColumn(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn(Integer, Integer)
  name.vb: UnloadChunkColumn(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn(System.Int32,System.Int32)
  id: DeleteChunkColumn(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: DeleteChunkColumn(int, int)
  nameWithType: IWorldManagerAPI.DeleteChunkColumn(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Deletes a column of chunks at given coordinate from the save file. Also deletes the map chunk at the same coordinate (but keeps the map region). Also unloads the chunk in the same process. Also deletes all entities in this chunk
  example: []
  syntax:
    content: void DeleteChunkColumn(int chunkX, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    content.vb: Sub DeleteChunkColumn(chunkX As Integer, chunkZ As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn*
  nameWithType.vb: IWorldManagerAPI.DeleteChunkColumn(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn(Integer, Integer)
  name.vb: DeleteChunkColumn(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion(System.Int32,System.Int32)
  id: DeleteMapRegion(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: DeleteMapRegion(int, int)
  nameWithType: IWorldManagerAPI.DeleteMapRegion(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Deletes a map region at given coordinate from the save file
  example: []
  syntax:
    content: void DeleteMapRegion(int regionX, int regionZ)
    parameters:
    - id: regionX
      type: System.Int32
      description: ''
    - id: regionZ
      type: System.Int32
      description: ''
    content.vb: Sub DeleteMapRegion(regionX As Integer, regionZ As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion*
  nameWithType.vb: IWorldManagerAPI.DeleteMapRegion(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion(Integer, Integer)
  name.vb: DeleteMapRegion(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapSizeX
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.MapSizeX
  id: MapSizeX
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapSizeX
  nameWithType: IWorldManagerAPI.MapSizeX
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapSizeX
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Width of the current world
  example: []
  syntax:
    content: int MapSizeX { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: ReadOnly Property MapSizeX As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapSizeX*
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapSizeY
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.MapSizeY
  id: MapSizeY
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapSizeY
  nameWithType: IWorldManagerAPI.MapSizeY
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapSizeY
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Height of the current world
  example: []
  syntax:
    content: int MapSizeY { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: ReadOnly Property MapSizeY As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapSizeY*
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ
  id: MapSizeZ
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: MapSizeZ
  nameWithType: IWorldManagerAPI.MapSizeZ
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Length of the current world
  example: []
  syntax:
    content: int MapSizeZ { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: ReadOnly Property MapSizeZ As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ*
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY(System.Int32,System.Int32)
  id: GetSurfacePosY(System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetSurfacePosY(int, int)
  nameWithType: IWorldManagerAPI.GetSurfacePosY(int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Finds the first y position that is solid ground to stand on. Returns null if the chunk is not loaded.
  example: []
  syntax:
    content: int? GetSurfacePosY(int posX, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: System.Nullable{System.Int32}
      description: ''
    content.vb: Function GetSurfacePosY(posX As Integer, posZ As Integer) As Integer?
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY*
  nameWithType.vb: IWorldManagerAPI.GetSurfacePosY(Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY(Integer, Integer)
  name.vb: GetSurfacePosY(Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.RegionSize
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.RegionSize
  id: RegionSize
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: RegionSize
  nameWithType: IWorldManagerAPI.RegionSize
  fullName: Vintagestory.API.Server.IWorldManagerAPI.RegionSize
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Width/Length/Height in blocks of a region on the server
  example: []
  syntax:
    content: int RegionSize { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: ReadOnly Property RegionSize As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.RegionSize*
- uid: Vintagestory.API.Server.IWorldManagerAPI.ChunkSize
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.ChunkSize
  id: ChunkSize
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: IWorldManagerAPI.ChunkSize
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ChunkSize
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Width/Length/Height in blocks of a chunk on the server
  example: []
  syntax:
    content: int ChunkSize { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: ReadOnly Property ChunkSize As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.ChunkSize*
- uid: Vintagestory.API.Server.IWorldManagerAPI.Seed
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.Seed
  id: Seed
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: Seed
  nameWithType: IWorldManagerAPI.Seed
  fullName: Vintagestory.API.Server.IWorldManagerAPI.Seed
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Get the seed used to generate the current world
  example: []
  syntax:
    content: int Seed { get; }
    parameters: []
    return:
      type: System.Int32
      description: The map seed
    content.vb: ReadOnly Property Seed As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.Seed*
- uid: Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName
  id: CurrentWorldName
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: CurrentWorldName
  nameWithType: IWorldManagerAPI.CurrentWorldName
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: The current world filename
  example: []
  syntax:
    content: string CurrentWorldName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property CurrentWorldName As String
  overload: Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName*
- uid: Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition
  commentId: P:Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition
  id: DefaultSpawnPosition
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: DefaultSpawnPosition
  nameWithType: IWorldManagerAPI.DefaultSpawnPosition
  fullName: Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Retrieves the default spawnpoint (x/y/z coordinate)
  example: []
  syntax:
    content: int[] DefaultSpawnPosition { get; }
    parameters: []
    return:
      type: System.Int32[]
      description: Default spawnpoint
    content.vb: ReadOnly Property DefaultSpawnPosition As Integer()
  overload: Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition*
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition(System.Int32,System.Int32,System.Int32)
  id: SetDefaultSpawnPosition(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SetDefaultSpawnPosition(int, int, int)
  nameWithType: IWorldManagerAPI.SetDefaultSpawnPosition(int, int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Permanently sets the default spawnpoint
  example: []
  syntax:
    content: void SetDefaultSpawnPosition(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: X coordinate of new spawnpoint
    - id: y
      type: System.Int32
      description: Y coordinate of new spawnpoint
    - id: z
      type: System.Int32
      description: Z coordinate of new spawnpoint
    content.vb: Sub SetDefaultSpawnPosition(x As Integer, y As Integer, z As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition*
  nameWithType.vb: IWorldManagerAPI.SetDefaultSpawnPosition(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition(Integer, Integer, Integer)
  name.vb: SetDefaultSpawnPosition(Integer, Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockId(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetBlockId(Vintagestory.API.Common.AssetLocation)
  id: GetBlockId(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetBlockId(AssetLocation)
  nameWithType: IWorldManagerAPI.GetBlockId(AssetLocation)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockId(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Get the ID of a certain BlockType
  example: []
  syntax:
    content: int GetBlockId(AssetLocation name)
    parameters:
    - id: name
      type: Vintagestory.API.Common.AssetLocation
      description: Name of the BlockType
    return:
      type: System.Int32
      description: ID of the BlockType
    content.vb: Function GetBlockId(name As AssetLocation) As Integer
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetBlockId*
- uid: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  id: SunFloodChunkColumnForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SunFloodChunkColumnForWorldGen(IWorldChunk[], int, int)
  nameWithType: IWorldManagerAPI.SunFloodChunkColumnForWorldGen(IWorldChunk[], int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen(Vintagestory.API.Common.IWorldChunk[], int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Floods the chunk column with sunlight. Only works on full chunk columns.
  example: []
  syntax:
    content: void SunFloodChunkColumnForWorldGen(IWorldChunk[] chunks, int chunkX, int chunkZ)
    parameters:
    - id: chunks
      type: Vintagestory.API.Common.IWorldChunk[]
      description: ''
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    content.vb: Sub SunFloodChunkColumnForWorldGen(chunks As IWorldChunk(), chunkX As Integer, chunkZ As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen*
  nameWithType.vb: IWorldManagerAPI.SunFloodChunkColumnForWorldGen(IWorldChunk(), Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen(Vintagestory.API.Common.IWorldChunk(), Integer, Integer)
  name.vb: SunFloodChunkColumnForWorldGen(IWorldChunk(), Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  id: SunFloodChunkColumnNeighboursForWorldGen(Vintagestory.API.Common.IWorldChunk[],System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: SunFloodChunkColumnNeighboursForWorldGen(IWorldChunk[], int, int)
  nameWithType: IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen(IWorldChunk[], int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen(Vintagestory.API.Common.IWorldChunk[], int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Spreads the chunk columns light into neighbour chunks and vice versa. Only works on full chunk columns.
  example: []
  syntax:
    content: void SunFloodChunkColumnNeighboursForWorldGen(IWorldChunk[] chunks, int chunkX, int chunkZ)
    parameters:
    - id: chunks
      type: Vintagestory.API.Common.IWorldChunk[]
      description: ''
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    content.vb: Sub SunFloodChunkColumnNeighboursForWorldGen(chunks As IWorldChunk(), chunkX As Integer, chunkZ As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen*
  nameWithType.vb: IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen(IWorldChunk(), Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen(Vintagestory.API.Common.IWorldChunk(), Integer, Integer)
  name.vb: SunFloodChunkColumnNeighboursForWorldGen(IWorldChunk(), Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  id: FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: FullRelight(BlockPos, BlockPos)
  nameWithType: IWorldManagerAPI.FullRelight(BlockPos, BlockPos)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Does a complete relighting of the cuboid deliminated by given min/max pos. Completely resends all affected chunk columns to all connected nearby clients.
  example: []
  syntax:
    content: void FullRelight(BlockPos minPos, BlockPos maxPos)
    parameters:
    - id: minPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: maxPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub FullRelight(minPos As BlockPos, maxPos As BlockPos)
  overload: Vintagestory.API.Server.IWorldManagerAPI.FullRelight*
- uid: Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Boolean)
  id: FullRelight(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: FullRelight(BlockPos, BlockPos, bool)
  nameWithType: IWorldManagerAPI.FullRelight(BlockPos, BlockPos, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Does a complete relighting of the cuboid deliminated by given min/max pos. Can completely resend all affected chunk columns to all connected nearby clients.
  example: []
  syntax:
    content: void FullRelight(BlockPos minPos, BlockPos maxPos, bool sendToClients)
    parameters:
    - id: minPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: maxPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: sendToClients
      type: System.Boolean
      description: ''
    content.vb: Sub FullRelight(minPos As BlockPos, maxPos As BlockPos, sendToClients As Boolean)
  overload: Vintagestory.API.Server.IWorldManagerAPI.FullRelight*
  nameWithType.vb: IWorldManagerAPI.FullRelight(BlockPos, BlockPos, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.FullRelight(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Boolean)
  name.vb: FullRelight(BlockPos, BlockPos, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetBlockAccessor(bool, bool, bool, bool)
  nameWithType: IWorldManagerAPI.GetBlockAccessor(bool, bool, bool, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor(bool, bool, bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Retrieve a customized interface to access blocks in the loaded game world.
  example: []
  syntax:
    content: >-
      [Obsolete("Use api.World.GetBlockAccessor instead")]

      IBlockAccessor GetBlockAccessor(bool synchronize, bool relight, bool strict, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after a call to SetBlock and the light values changed by that
    - id: strict
      type: System.Boolean
      description: Log an error message if GetBlock/SetBlock was called to an unloaded chunk
    - id: debug
      type: System.Boolean
      description: If strict, crashes the server if a unloaded chunk was crashed, prints an exception and exports a png image of the current loaded chunks
    return:
      type: Vintagestory.API.Common.IBlockAccessor
      description: ''
    content.vb: >-
      <Obsolete("Use api.World.GetBlockAccessor instead")>

      Function GetBlockAccessor(synchronize As Boolean, relight As Boolean, strict As Boolean, debug As Boolean = False) As IBlockAccessor
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use api.World.GetBlockAccessor instead
  nameWithType.vb: IWorldManagerAPI.GetBlockAccessor(Boolean, Boolean, Boolean, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor(Boolean, Boolean, Boolean, Boolean)
  name.vb: GetBlockAccessor(Boolean, Boolean, Boolean, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  id: GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetBlockAccessorBulkUpdate(bool, bool, bool)
  nameWithType: IWorldManagerAPI.GetBlockAccessorBulkUpdate(bool, bool, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate(bool, bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Retrieve a customized interface to access blocks in the loaded game world. Does not to relight/sync on a SetBlock until Commit() is called. On commit all touched blocks are relit/synced at once. This method should be used when setting many blocks (e.g. tree generation, explosion, etc.).
  example: []
  syntax:
    content: >-
      [Obsolete("Use api.World.GetBlockAccessorBulkUpdate instead")]

      IBulkBlockAccessor GetBlockAccessorBulkUpdate(bool synchronize, bool relight, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after the a call to SetBlock and the light values changed by that
    - id: debug
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.IBulkBlockAccessor
      description: ''
    content.vb: >-
      <Obsolete("Use api.World.GetBlockAccessorBulkUpdate instead")>

      Function GetBlockAccessorBulkUpdate(synchronize As Boolean, relight As Boolean, debug As Boolean = False) As IBulkBlockAccessor
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use api.World.GetBlockAccessorBulkUpdate instead
  nameWithType.vb: IWorldManagerAPI.GetBlockAccessorBulkUpdate(Boolean, Boolean, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate(Boolean, Boolean, Boolean)
  name.vb: GetBlockAccessorBulkUpdate(Boolean, Boolean, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  id: GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetBlockAccessorRevertable(bool, bool, bool)
  nameWithType: IWorldManagerAPI.GetBlockAccessorRevertable(bool, bool, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable(bool, bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Same as GetBlockAccessorBulkUpdate, additionally, each Commit() stores the previous state and you can perform undo/redo operations on these.
  example: []
  syntax:
    content: >-
      [Obsolete("Use api.World.GetBlockAccessorRevertable instead")]

      IBlockAccessorRevertable GetBlockAccessorRevertable(bool synchronize, bool relight, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after a call to SetBlock and the light values changed by that
    - id: debug
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.IBlockAccessorRevertable
      description: ''
    content.vb: >-
      <Obsolete("Use api.World.GetBlockAccessorRevertable instead")>

      Function GetBlockAccessorRevertable(synchronize As Boolean, relight As Boolean, debug As Boolean = False) As IBlockAccessorRevertable
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use api.World.GetBlockAccessorRevertable instead
  nameWithType.vb: IWorldManagerAPI.GetBlockAccessorRevertable(Boolean, Boolean, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable(Boolean, Boolean, Boolean)
  name.vb: GetBlockAccessorRevertable(Boolean, Boolean, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  id: GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetBlockAccessorPrefetch(bool, bool)
  nameWithType: IWorldManagerAPI.GetBlockAccessorPrefetch(bool, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch(bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Same as GetBlockAccessor but you have to call PrefetchBlocks() before using GetBlock(). It pre-loads all blocks in given area resulting in faster GetBlock() access
  example: []
  syntax:
    content: >-
      [Obsolete("Use api.World.GetBlockAccessorPrefetch instead")]

      IBlockAccessorPrefetch GetBlockAccessorPrefetch(bool synchronize, bool relight)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after a call to SetBlock and the light values changed by that
    return:
      type: Vintagestory.API.Common.IBlockAccessorPrefetch
      description: ''
    content.vb: >-
      <Obsolete("Use api.World.GetBlockAccessorPrefetch instead")>

      Function GetBlockAccessorPrefetch(synchronize As Boolean, relight As Boolean) As IBlockAccessorPrefetch
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use api.World.GetBlockAccessorPrefetch instead
  nameWithType.vb: IWorldManagerAPI.GetBlockAccessorPrefetch(Boolean, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch(Boolean, Boolean)
  name.vb: GetBlockAccessorPrefetch(Boolean, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor(System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor(System.Boolean,System.Boolean)
  id: GetCachingBlockAccessor(System.Boolean,System.Boolean)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: GetCachingBlockAccessor(bool, bool)
  nameWithType: IWorldManagerAPI.GetCachingBlockAccessor(bool, bool)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor(bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: >-
    Same as the normal block accessor but remembers the previous chunk that was accessed. This can give you a 10-50% performance boosts when you scan many blocks in tight loops

    DONT FORGET: Call .Begin() before getting/setting in a tight loop. Not calling it can cause the game to crash
  example: []
  syntax:
    content: >-
      [Obsolete("Use api.World.GetCachingBlockAccessor instead")]

      ICachingBlockAccessor GetCachingBlockAccessor(bool synchronize, bool relight)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: ''
    - id: relight
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.ICachingBlockAccessor
      description: ''
    content.vb: >-
      <Obsolete("Use api.World.GetCachingBlockAccessor instead")>

      Function GetCachingBlockAccessor(synchronize As Boolean, relight As Boolean) As ICachingBlockAccessor
  overload: Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use api.World.GetCachingBlockAccessor instead
  nameWithType.vb: IWorldManagerAPI.GetCachingBlockAccessor(Boolean, Boolean)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor(Boolean, Boolean)
  name.vb: GetCachingBlockAccessor(Boolean, Boolean)
- uid: Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  id: CreateChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: CreateChunkColumnForDimension(int, int, int)
  nameWithType: IWorldManagerAPI.CreateChunkColumnForDimension(int, int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Creates columns of empty chunks in the specified dimension
  example: []
  syntax:
    content: void CreateChunkColumnForDimension(int cx, int cz, int dim)
    parameters:
    - id: cx
      type: System.Int32
      description: ''
    - id: cz
      type: System.Int32
      description: ''
    - id: dim
      type: System.Int32
      description: ''
    content.vb: Sub CreateChunkColumnForDimension(cx As Integer, cz As Integer, [dim] As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension*
  nameWithType.vb: IWorldManagerAPI.CreateChunkColumnForDimension(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension(Integer, Integer, Integer)
  name.vb: CreateChunkColumnForDimension(Integer, Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  id: LoadChunkColumnForDimension(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: LoadChunkColumnForDimension(int, int, int)
  nameWithType: IWorldManagerAPI.LoadChunkColumnForDimension(int, int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Loads chunk columns for the specified dimension
  example: []
  syntax:
    content: void LoadChunkColumnForDimension(int cx, int cz, int dim)
    parameters:
    - id: cx
      type: System.Int32
      description: ''
    - id: cz
      type: System.Int32
      description: ''
    - id: dim
      type: System.Int32
      description: ''
    content.vb: Sub LoadChunkColumnForDimension(cx As Integer, cz As Integer, [dim] As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension*
  nameWithType.vb: IWorldManagerAPI.LoadChunkColumnForDimension(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension(Integer, Integer, Integer)
  name.vb: LoadChunkColumnForDimension(Integer, Integer, Integer)
- uid: Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn(Vintagestory.API.Server.IServerPlayer,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn(Vintagestory.API.Server.IServerPlayer,System.Int32,System.Int32,System.Int32)
  id: ForceSendChunkColumn(Vintagestory.API.Server.IServerPlayer,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Server.IWorldManagerAPI
  langs:
  - csharp
  - vb
  name: ForceSendChunkColumn(IServerPlayer, int, int, int)
  nameWithType: IWorldManagerAPI.ForceSendChunkColumn(IServerPlayer, int, int, int)
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn(Vintagestory.API.Server.IServerPlayer, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: API access to force send a chunk column in any dimension
  example: []
  syntax:
    content: void ForceSendChunkColumn(IServerPlayer player, int cx, int cz, int dimension)
    parameters:
    - id: player
      type: Vintagestory.API.Server.IServerPlayer
      description: ''
    - id: cx
      type: System.Int32
      description: ''
    - id: cz
      type: System.Int32
      description: ''
    - id: dimension
      type: System.Int32
      description: ''
    content.vb: Sub ForceSendChunkColumn(player As IServerPlayer, cx As Integer, cz As Integer, dimension As Integer)
  overload: Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn*
  nameWithType.vb: IWorldManagerAPI.ForceSendChunkColumn(IServerPlayer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn(Vintagestory.API.Server.IServerPlayer, Integer, Integer, Integer)
  name.vb: ForceSendChunkColumn(IServerPlayer, Integer, Integer, Integer)
references:
- uid: Vintagestory.API.Server
  commentId: N:Vintagestory.API.Server
  href: Vintagestory.html
  name: Vintagestory.API.Server
  nameWithType: Vintagestory.API.Server
  fullName: Vintagestory.API.Server
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_AllLoadedMapchunks
  name: AllLoadedMapchunks
  nameWithType: IWorldManagerAPI.AllLoadedMapchunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapchunks
- uid: System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Common.IMapChunk}
  commentId: T:System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Common.IMapChunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<long, IMapChunk>
  nameWithType: Dictionary<long, IMapChunk>
  fullName: System.Collections.Generic.Dictionary<long, Vintagestory.API.Common.IMapChunk>
  nameWithType.vb: Dictionary(Of Long, IMapChunk)
  fullName.vb: System.Collections.Generic.Dictionary(Of Long, Vintagestory.API.Common.IMapChunk)
  name.vb: Dictionary(Of Long, IMapChunk)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.IMapChunk
    name: IMapChunk
    href: Vintagestory.API.Common.IMapChunk.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.IMapChunk
    name: IMapChunk
    href: Vintagestory.API.Common.IMapChunk.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_AllLoadedMapRegions
  name: AllLoadedMapRegions
  nameWithType: IWorldManagerAPI.AllLoadedMapRegions
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedMapRegions
- uid: System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Common.IMapRegion}
  commentId: T:System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Common.IMapRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<long, IMapRegion>
  nameWithType: Dictionary<long, IMapRegion>
  fullName: System.Collections.Generic.Dictionary<long, Vintagestory.API.Common.IMapRegion>
  nameWithType.vb: Dictionary(Of Long, IMapRegion)
  fullName.vb: System.Collections.Generic.Dictionary(Of Long, Vintagestory.API.Common.IMapRegion)
  name.vb: Dictionary(Of Long, IMapRegion)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.IMapRegion
    name: IMapRegion
    href: Vintagestory.API.Common.IMapRegion.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.IMapRegion
    name: IMapRegion
    href: Vintagestory.API.Common.IMapRegion.html
  - name: )
- uid: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_AllLoadedChunks
  name: AllLoadedChunks
  nameWithType: IWorldManagerAPI.AllLoadedChunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AllLoadedChunks
- uid: System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Server.IServerChunk}
  commentId: T:System.Collections.Generic.Dictionary{System.Int64,Vintagestory.API.Server.IServerChunk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<long, IServerChunk>
  nameWithType: Dictionary<long, IServerChunk>
  fullName: System.Collections.Generic.Dictionary<long, Vintagestory.API.Server.IServerChunk>
  nameWithType.vb: Dictionary(Of Long, IServerChunk)
  fullName.vb: System.Collections.Generic.Dictionary(Of Long, Vintagestory.API.Server.IServerChunk)
  name.vb: Dictionary(Of Long, IServerChunk)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Server.IServerChunk
    name: IServerChunk
    href: Vintagestory.API.Server.IServerChunk.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Server.IServerChunk
    name: IServerChunk
    href: Vintagestory.API.Server.IServerChunk.html
  - name: )
- uid: Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_CurrentGeneratingChunkCount
  name: CurrentGeneratingChunkCount
  nameWithType: IWorldManagerAPI.CurrentGeneratingChunkCount
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CurrentGeneratingChunkCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_ChunkDeletionsInQueue
  name: ChunkDeletionsInQueue
  nameWithType: IWorldManagerAPI.ChunkDeletionsInQueue
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ChunkDeletionsInQueue
- uid: Vintagestory.API.Server.IWorldManagerAPI.SaveGame*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SaveGame
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SaveGame
  name: SaveGame
  nameWithType: IWorldManagerAPI.SaveGame
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SaveGame
- uid: Vintagestory.API.Server.ISaveGame
  commentId: T:Vintagestory.API.Server.ISaveGame
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.ISaveGame.html
  name: ISaveGame
  nameWithType: ISaveGame
  fullName: Vintagestory.API.Server.ISaveGame
- uid: Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_CurrentPlayStyle
  name: CurrentPlayStyle
  nameWithType: IWorldManagerAPI.CurrentPlayStyle
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CurrentPlayStyle
- uid: Vintagestory.API.Common.PlayStyle
  commentId: T:Vintagestory.API.Common.PlayStyle
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.PlayStyle.html
  name: PlayStyle
  nameWithType: PlayStyle
  fullName: Vintagestory.API.Common.PlayStyle
- uid: Vintagestory.API.Common
  commentId: N:Vintagestory.API.Common
  href: Vintagestory.html
  name: Vintagestory.API.Common
  nameWithType: Vintagestory.API.Common
  fullName: Vintagestory.API.Common
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SetBlockLightLevels_System_Single___
  name: SetBlockLightLevels
  nameWithType: IWorldManagerAPI.SetBlockLightLevels
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetBlockLightLevels
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SetSunLightLevels_System_Single___
  name: SetSunLightLevels
  nameWithType: IWorldManagerAPI.SetSunLightLevels
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetSunLightLevels
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SetSunBrightness_System_Int32_
  name: SetSunBrightness
  nameWithType: IWorldManagerAPI.SetSunBrightness
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetSunBrightness
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SetSeaLevel_System_Int32_
  name: SetSeaLevel
  nameWithType: IWorldManagerAPI.SetSeaLevel
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetSeaLevel
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetMapRegion_System_Int32_System_Int32_
  name: GetMapRegion
  nameWithType: IWorldManagerAPI.GetMapRegion
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetMapRegion
- uid: Vintagestory.API.Common.IMapRegion
  commentId: T:Vintagestory.API.Common.IMapRegion
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IMapRegion.html
  name: IMapRegion
  nameWithType: IMapRegion
  fullName: Vintagestory.API.Common.IMapRegion
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetMapChunk_System_Int32_System_Int32_
  name: GetMapChunk
  nameWithType: IWorldManagerAPI.GetMapChunk
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetMapChunk
- uid: Vintagestory.API.Common.IServerMapChunk
  commentId: T:Vintagestory.API.Common.IServerMapChunk
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IServerMapChunk.html
  name: IServerMapChunk
  nameWithType: IServerMapChunk
  fullName: Vintagestory.API.Common.IServerMapChunk
- uid: Vintagestory.API.Common.IMapChunk
  commentId: T:Vintagestory.API.Common.IMapChunk
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IMapChunk.html
  name: IMapChunk
  nameWithType: IMapChunk
  fullName: Vintagestory.API.Common.IMapChunk
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetChunk*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetChunk
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetChunk_System_Int32_System_Int32_System_Int32_
  name: GetChunk
  nameWithType: IWorldManagerAPI.GetChunk
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetChunk
- uid: Vintagestory.API.Server.IServerChunk
  commentId: T:Vintagestory.API.Server.IServerChunk
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.IServerChunk.html
  name: IServerChunk
  nameWithType: IServerChunk
  fullName: Vintagestory.API.Server.IServerChunk
- uid: Vintagestory.API.MathTools.BlockPos
  commentId: T:Vintagestory.API.MathTools.BlockPos
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockPos.html
  name: BlockPos
  nameWithType: BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_ChunkIndex3D_System_Int32_System_Int32_System_Int32_
  name: ChunkIndex3D
  nameWithType: IWorldManagerAPI.ChunkIndex3D
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ChunkIndex3D
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapRegionIndex2D_System_Int32_System_Int32_
  name: MapRegionIndex2D
  nameWithType: IWorldManagerAPI.MapRegionIndex2D
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2D
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapRegionIndex2DByBlockPos_System_Int32_System_Int32_
  name: MapRegionIndex2DByBlockPos
  nameWithType: IWorldManagerAPI.MapRegionIndex2DByBlockPos
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapRegionIndex2DByBlockPos
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapRegionPosFromIndex2D_System_Int64_
  name: MapRegionPosFromIndex2D
  nameWithType: IWorldManagerAPI.MapRegionPosFromIndex2D
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapRegionPosFromIndex2D
- uid: Vintagestory.API.MathTools.Vec3i
  commentId: T:Vintagestory.API.MathTools.Vec3i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3i.html
  name: Vec3i
  nameWithType: Vec3i
  fullName: Vintagestory.API.MathTools.Vec3i
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapChunkPosFromChunkIndex2D_System_Int64_
  name: MapChunkPosFromChunkIndex2D
  nameWithType: IWorldManagerAPI.MapChunkPosFromChunkIndex2D
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapChunkPosFromChunkIndex2D
- uid: Vintagestory.API.MathTools.Vec2i
  commentId: T:Vintagestory.API.MathTools.Vec2i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec2i.html
  name: Vec2i
  nameWithType: Vec2i
  fullName: Vintagestory.API.MathTools.Vec2i
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapChunkIndex2D_System_Int32_System_Int32_
  name: MapChunkIndex2D
  nameWithType: IWorldManagerAPI.MapChunkIndex2D
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapChunkIndex2D
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetNextUniqueId
  name: GetNextUniqueId
  nameWithType: IWorldManagerAPI.GetNextUniqueId
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetNextUniqueId
- uid: Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_AutoGenerateChunks
  name: AutoGenerateChunks
  nameWithType: IWorldManagerAPI.AutoGenerateChunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.AutoGenerateChunks
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Vintagestory.API.Server.IWorldManagerAPI.SendChunks*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SendChunks
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SendChunks
  name: SendChunks
  nameWithType: IWorldManagerAPI.SendChunks
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SendChunks
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_LoadChunkColumnFast_System_Int32_System_Int32_Vintagestory_API_Server_ChunkLoadOptions_
  name: LoadChunkColumnFast
  nameWithType: IWorldManagerAPI.LoadChunkColumnFast
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnFast
- uid: Vintagestory.API.Server.ChunkLoadOptions
  commentId: T:Vintagestory.API.Server.ChunkLoadOptions
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.ChunkLoadOptions.html
  name: ChunkLoadOptions
  nameWithType: ChunkLoadOptions
  fullName: Vintagestory.API.Server.ChunkLoadOptions
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_LoadChunkColumnPriority_System_Int32_System_Int32_Vintagestory_API_Server_ChunkLoadOptions_
  name: LoadChunkColumnPriority
  nameWithType: IWorldManagerAPI.LoadChunkColumnPriority
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnPriority
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_LoadChunkColumn_System_Int32_System_Int32_System_Boolean_
  name: LoadChunkColumn
  nameWithType: IWorldManagerAPI.LoadChunkColumn
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumn
- uid: Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_PeekChunkColumn_System_Int32_System_Int32_Vintagestory_API_Server_ChunkPeekOptions_
  name: PeekChunkColumn
  nameWithType: IWorldManagerAPI.PeekChunkColumn
  fullName: Vintagestory.API.Server.IWorldManagerAPI.PeekChunkColumn
- uid: Vintagestory.API.Server.ChunkPeekOptions
  commentId: T:Vintagestory.API.Server.ChunkPeekOptions
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.ChunkPeekOptions.html
  name: ChunkPeekOptions
  nameWithType: ChunkPeekOptions
  fullName: Vintagestory.API.Server.ChunkPeekOptions
- uid: Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_TestChunkExists_System_Int32_System_Int32_System_Int32_System_Action_System_Boolean__
  name: TestChunkExists
  nameWithType: IWorldManagerAPI.TestChunkExists
  fullName: Vintagestory.API.Server.IWorldManagerAPI.TestChunkExists
- uid: System.Action{System.Boolean}
  commentId: T:System.Action{System.Boolean}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<bool>
  nameWithType: Action<bool>
  fullName: System.Action<bool>
  nameWithType.vb: Action(Of Boolean)
  fullName.vb: System.Action(Of Boolean)
  name.vb: Action(Of Boolean)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_TestMapChunkExists_System_Int32_System_Int32_System_Action_System_Boolean__
  name: TestMapChunkExists
  nameWithType: IWorldManagerAPI.TestMapChunkExists
  fullName: Vintagestory.API.Server.IWorldManagerAPI.TestMapChunkExists
- uid: Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_TestMapRegionExists_System_Int32_System_Int32_System_Action_System_Boolean__
  name: TestMapRegionExists
  nameWithType: IWorldManagerAPI.TestMapRegionExists
  fullName: Vintagestory.API.Server.IWorldManagerAPI.TestMapRegionExists
- uid: Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_BroadcastChunk_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: BroadcastChunk
  nameWithType: IWorldManagerAPI.BroadcastChunk
  fullName: Vintagestory.API.Server.IWorldManagerAPI.BroadcastChunk
- uid: Vintagestory.API.Server.IWorldManagerAPI.HasChunk*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.HasChunk
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_HasChunk_System_Int32_System_Int32_System_Int32_Vintagestory_API_Server_IServerPlayer_
  name: HasChunk
  nameWithType: IWorldManagerAPI.HasChunk
  fullName: Vintagestory.API.Server.IWorldManagerAPI.HasChunk
- uid: Vintagestory.API.Server.IServerPlayer
  commentId: T:Vintagestory.API.Server.IServerPlayer
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.IServerPlayer.html
  name: IServerPlayer
  nameWithType: IServerPlayer
  fullName: Vintagestory.API.Server.IServerPlayer
- uid: Vintagestory.API.Server.IWorldManagerAPI.SendChunk*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SendChunk
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SendChunk_System_Int32_System_Int32_System_Int32_Vintagestory_API_Server_IServerPlayer_System_Boolean_
  name: SendChunk
  nameWithType: IWorldManagerAPI.SendChunk
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SendChunk
- uid: Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_ResendMapChunk_System_Int32_System_Int32_System_Boolean_
  name: ResendMapChunk
  nameWithType: IWorldManagerAPI.ResendMapChunk
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ResendMapChunk
- uid: Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_UnloadChunkColumn_System_Int32_System_Int32_
  name: UnloadChunkColumn
  nameWithType: IWorldManagerAPI.UnloadChunkColumn
  fullName: Vintagestory.API.Server.IWorldManagerAPI.UnloadChunkColumn
- uid: Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_DeleteChunkColumn_System_Int32_System_Int32_
  name: DeleteChunkColumn
  nameWithType: IWorldManagerAPI.DeleteChunkColumn
  fullName: Vintagestory.API.Server.IWorldManagerAPI.DeleteChunkColumn
- uid: Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_DeleteMapRegion_System_Int32_System_Int32_
  name: DeleteMapRegion
  nameWithType: IWorldManagerAPI.DeleteMapRegion
  fullName: Vintagestory.API.Server.IWorldManagerAPI.DeleteMapRegion
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapSizeX*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapSizeX
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapSizeX
  name: MapSizeX
  nameWithType: IWorldManagerAPI.MapSizeX
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapSizeX
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapSizeY*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapSizeY
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapSizeY
  name: MapSizeY
  nameWithType: IWorldManagerAPI.MapSizeY
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapSizeY
- uid: Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_MapSizeZ
  name: MapSizeZ
  nameWithType: IWorldManagerAPI.MapSizeZ
  fullName: Vintagestory.API.Server.IWorldManagerAPI.MapSizeZ
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetSurfacePosY_System_Int32_System_Int32_
  name: GetSurfacePosY
  nameWithType: IWorldManagerAPI.GetSurfacePosY
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetSurfacePosY
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Server.IWorldManagerAPI.RegionSize*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.RegionSize
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_RegionSize
  name: RegionSize
  nameWithType: IWorldManagerAPI.RegionSize
  fullName: Vintagestory.API.Server.IWorldManagerAPI.RegionSize
- uid: Vintagestory.API.Server.IWorldManagerAPI.ChunkSize*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.ChunkSize
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_ChunkSize
  name: ChunkSize
  nameWithType: IWorldManagerAPI.ChunkSize
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ChunkSize
- uid: Vintagestory.API.Server.IWorldManagerAPI.Seed*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.Seed
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_Seed
  name: Seed
  nameWithType: IWorldManagerAPI.Seed
  fullName: Vintagestory.API.Server.IWorldManagerAPI.Seed
- uid: Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_CurrentWorldName
  name: CurrentWorldName
  nameWithType: IWorldManagerAPI.CurrentWorldName
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CurrentWorldName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_DefaultSpawnPosition
  name: DefaultSpawnPosition
  nameWithType: IWorldManagerAPI.DefaultSpawnPosition
  fullName: Vintagestory.API.Server.IWorldManagerAPI.DefaultSpawnPosition
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SetDefaultSpawnPosition_System_Int32_System_Int32_System_Int32_
  name: SetDefaultSpawnPosition
  nameWithType: IWorldManagerAPI.SetDefaultSpawnPosition
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SetDefaultSpawnPosition
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockId*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetBlockId
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetBlockId_Vintagestory_API_Common_AssetLocation_
  name: GetBlockId
  nameWithType: IWorldManagerAPI.GetBlockId
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockId
- uid: Vintagestory.API.Common.AssetLocation
  commentId: T:Vintagestory.API.Common.AssetLocation
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.AssetLocation.html
  name: AssetLocation
  nameWithType: AssetLocation
  fullName: Vintagestory.API.Common.AssetLocation
- uid: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SunFloodChunkColumnForWorldGen_Vintagestory_API_Common_IWorldChunk___System_Int32_System_Int32_
  name: SunFloodChunkColumnForWorldGen
  nameWithType: IWorldManagerAPI.SunFloodChunkColumnForWorldGen
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnForWorldGen
- uid: Vintagestory.API.Common.IWorldChunk[]
  isExternal: true
  href: Vintagestory.API.Common.IWorldChunk.html
  name: IWorldChunk[]
  nameWithType: IWorldChunk[]
  fullName: Vintagestory.API.Common.IWorldChunk[]
  nameWithType.vb: IWorldChunk()
  fullName.vb: Vintagestory.API.Common.IWorldChunk()
  name.vb: IWorldChunk()
  spec.csharp:
  - uid: Vintagestory.API.Common.IWorldChunk
    name: IWorldChunk
    href: Vintagestory.API.Common.IWorldChunk.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.IWorldChunk
    name: IWorldChunk
    href: Vintagestory.API.Common.IWorldChunk.html
  - name: (
  - name: )
- uid: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_SunFloodChunkColumnNeighboursForWorldGen_Vintagestory_API_Common_IWorldChunk___System_Int32_System_Int32_
  name: SunFloodChunkColumnNeighboursForWorldGen
  nameWithType: IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen
  fullName: Vintagestory.API.Server.IWorldManagerAPI.SunFloodChunkColumnNeighboursForWorldGen
- uid: Vintagestory.API.Server.IWorldManagerAPI.FullRelight*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.FullRelight
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_FullRelight_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_
  name: FullRelight
  nameWithType: IWorldManagerAPI.FullRelight
  fullName: Vintagestory.API.Server.IWorldManagerAPI.FullRelight
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetBlockAccessor_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: GetBlockAccessor
  nameWithType: IWorldManagerAPI.GetBlockAccessor
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessor
- uid: Vintagestory.API.Common.IBlockAccessor
  commentId: T:Vintagestory.API.Common.IBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessor.html
  name: IBlockAccessor
  nameWithType: IBlockAccessor
  fullName: Vintagestory.API.Common.IBlockAccessor
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetBlockAccessorBulkUpdate_System_Boolean_System_Boolean_System_Boolean_
  name: GetBlockAccessorBulkUpdate
  nameWithType: IWorldManagerAPI.GetBlockAccessorBulkUpdate
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorBulkUpdate
- uid: Vintagestory.API.Common.IBulkBlockAccessor
  commentId: T:Vintagestory.API.Common.IBulkBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBulkBlockAccessor.html
  name: IBulkBlockAccessor
  nameWithType: IBulkBlockAccessor
  fullName: Vintagestory.API.Common.IBulkBlockAccessor
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetBlockAccessorRevertable_System_Boolean_System_Boolean_System_Boolean_
  name: GetBlockAccessorRevertable
  nameWithType: IWorldManagerAPI.GetBlockAccessorRevertable
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorRevertable
- uid: Vintagestory.API.Common.IBlockAccessorRevertable
  commentId: T:Vintagestory.API.Common.IBlockAccessorRevertable
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessorRevertable.html
  name: IBlockAccessorRevertable
  nameWithType: IBlockAccessorRevertable
  fullName: Vintagestory.API.Common.IBlockAccessorRevertable
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetBlockAccessorPrefetch_System_Boolean_System_Boolean_
  name: GetBlockAccessorPrefetch
  nameWithType: IWorldManagerAPI.GetBlockAccessorPrefetch
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetBlockAccessorPrefetch
- uid: Vintagestory.API.Common.IBlockAccessorPrefetch
  commentId: T:Vintagestory.API.Common.IBlockAccessorPrefetch
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessorPrefetch.html
  name: IBlockAccessorPrefetch
  nameWithType: IBlockAccessorPrefetch
  fullName: Vintagestory.API.Common.IBlockAccessorPrefetch
- uid: Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_GetCachingBlockAccessor_System_Boolean_System_Boolean_
  name: GetCachingBlockAccessor
  nameWithType: IWorldManagerAPI.GetCachingBlockAccessor
  fullName: Vintagestory.API.Server.IWorldManagerAPI.GetCachingBlockAccessor
- uid: Vintagestory.API.Common.ICachingBlockAccessor
  commentId: T:Vintagestory.API.Common.ICachingBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ICachingBlockAccessor.html
  name: ICachingBlockAccessor
  nameWithType: ICachingBlockAccessor
  fullName: Vintagestory.API.Common.ICachingBlockAccessor
- uid: Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_CreateChunkColumnForDimension_System_Int32_System_Int32_System_Int32_
  name: CreateChunkColumnForDimension
  nameWithType: IWorldManagerAPI.CreateChunkColumnForDimension
  fullName: Vintagestory.API.Server.IWorldManagerAPI.CreateChunkColumnForDimension
- uid: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_LoadChunkColumnForDimension_System_Int32_System_Int32_System_Int32_
  name: LoadChunkColumnForDimension
  nameWithType: IWorldManagerAPI.LoadChunkColumnForDimension
  fullName: Vintagestory.API.Server.IWorldManagerAPI.LoadChunkColumnForDimension
- uid: Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn*
  commentId: Overload:Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn
  href: Vintagestory.API.Server.IWorldManagerAPI.html#Vintagestory_API_Server_IWorldManagerAPI_ForceSendChunkColumn_Vintagestory_API_Server_IServerPlayer_System_Int32_System_Int32_System_Int32_
  name: ForceSendChunkColumn
  nameWithType: IWorldManagerAPI.ForceSendChunkColumn
  fullName: Vintagestory.API.Server.IWorldManagerAPI.ForceSendChunkColumn
