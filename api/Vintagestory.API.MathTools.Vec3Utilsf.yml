### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.MathTools.Vec3Utilsf
  commentId: T:Vintagestory.API.MathTools.Vec3Utilsf
  id: Vec3Utilsf
  parent: Vintagestory.API.MathTools
  children:
  - Vintagestory.API.MathTools.Vec3Utilsf.Add(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.CloneIt(System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Copy(System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Create
  - Vintagestory.API.MathTools.Vec3Utilsf.Cross(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Distance(System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Divide(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Dot(System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.FromValues(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.Vec3Utilsf.Length_(System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Lerp(System.Single[],System.Single[],System.Single[],System.Single)
  - Vintagestory.API.MathTools.Vec3Utilsf.Max(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Min(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Mul(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Multiply(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Negate(System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Normalize(System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Scale(System.Single[],System.Single[],System.Single)
  - Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd(System.Single[],System.Single[],System.Single[],System.Single)
  - Vintagestory.API.MathTools.Vec3Utilsf.Set(System.Single[],System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance(System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength(System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.Substract(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4(System.Single[],System.Single[],System.Single[])
  - Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat(System.Single[],System.Single[],System.Single[])
  langs:
  - csharp
  - vb
  name: Vec3Utilsf
  nameWithType: Vec3Utilsf
  fullName: Vintagestory.API.MathTools.Vec3Utilsf
  type: Class
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Don't use this class unless you need it to interoperate with Mat4d
  example: []
  syntax:
    content: public class Vec3Utilsf
    content.vb: Public Class Vec3Utilsf
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Create
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Create
  id: Create
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: Vec3Utilsf.Create()
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Create()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  example: []
  syntax:
    content: public static float[] Create()
    return:
      type: System.Single[]
    content.vb: Public Shared Function Create() As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Create*
- uid: Vintagestory.API.MathTools.Vec3Utilsf.CloneIt(System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.CloneIt(System.Single[])
  id: CloneIt(System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: CloneIt(float[])
  nameWithType: Vec3Utilsf.CloneIt(float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.CloneIt(float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a new vec3 initialized with values from an existing vector. Returns {vec3} a new 3D vector
  example: []
  syntax:
    content: public static float[] CloneIt(float[] a)
    parameters:
    - id: a
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function CloneIt(a As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.CloneIt*
  nameWithType.vb: Vec3Utilsf.CloneIt(Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.CloneIt(Single())
  name.vb: CloneIt(Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.FromValues(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.FromValues(System.Single,System.Single,System.Single)
  id: FromValues(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: FromValues(float, float, float)
  nameWithType: Vec3Utilsf.FromValues(float, float, float)
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.FromValues(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Creates a new vec3 initialized with the given values. Returns {vec3} a new 3D vector
  example: []
  syntax:
    content: public static float[] FromValues(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    - id: z
      type: System.Single
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function FromValues(x As Single, y As Single, z As Single) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.FromValues*
  nameWithType.vb: Vec3Utilsf.FromValues(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.FromValues(Single, Single, Single)
  name.vb: FromValues(Single, Single, Single)
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Copy(System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Copy(System.Single[],System.Single[])
  id: Copy(System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Copy(float[], float[])
  nameWithType: Vec3Utilsf.Copy(float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Copy(float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Copy the values from one vec3 to another. Returns {vec3} out
  example: []
  syntax:
    content: public static float[] Copy(float[] output, float[] a)
    parameters:
    - id: output
      type: System.Single[]
      description: the receiving vector
    - id: a
      type: System.Single[]
      description: the source vector
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Copy(output As Single(), a As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Copy*
  nameWithType.vb: Vec3Utilsf.Copy(Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Copy(Single(), Single())
  name.vb: Copy(Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Set(System.Single[],System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Set(System.Single[],System.Single,System.Single,System.Single)
  id: Set(System.Single[],System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Set(float[], float, float, float)
  nameWithType: Vec3Utilsf.Set(float[], float, float, float)
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Set(float[], float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Set the components of a vec3 to the given values
  example: []
  syntax:
    content: public static float[] Set(float[] output, float x, float y, float z)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    - id: z
      type: System.Single
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function [Set](output As Single(), x As Single, y As Single, z As Single) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Set*
  nameWithType.vb: Vec3Utilsf.Set(Single(), Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Set(Single(), Single, Single, Single)
  name.vb: Set(Single(), Single, Single, Single)
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Add(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Add(System.Single[],System.Single[],System.Single[])
  id: Add(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Add(float[], float[], float[])
  nameWithType: Vec3Utilsf.Add(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Add(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Adds two vec3's
  example: []
  syntax:
    content: public static float[] Add(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: the receiving vector
    - id: a
      type: System.Single[]
      description: the first operand
    - id: b
      type: System.Single[]
      description: the second operand
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Add(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Add*
  nameWithType.vb: Vec3Utilsf.Add(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Add(Single(), Single(), Single())
  name.vb: Add(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Substract(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Substract(System.Single[],System.Single[],System.Single[])
  id: Substract(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Substract(float[], float[], float[])
  nameWithType: Vec3Utilsf.Substract(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Substract(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Subtracts vector b from vector a
  example: []
  syntax:
    content: public static float[] Substract(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Substract(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Substract*
  nameWithType.vb: Vec3Utilsf.Substract(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Substract(Single(), Single(), Single())
  name.vb: Substract(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Multiply(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Multiply(System.Single[],System.Single[],System.Single[])
  id: Multiply(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Multiply(float[], float[], float[])
  nameWithType: Vec3Utilsf.Multiply(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Multiply(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Multiplies two vec3's
  example: []
  syntax:
    content: public static float[] Multiply(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Multiply(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Multiply*
  nameWithType.vb: Vec3Utilsf.Multiply(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Multiply(Single(), Single(), Single())
  name.vb: Multiply(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Mul(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Mul(System.Single[],System.Single[],System.Single[])
  id: Mul(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Mul(float[], float[], float[])
  nameWithType: Vec3Utilsf.Mul(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Mul(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Alias of Mul()
  example: []
  syntax:
    content: public static float[] Mul(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Mul(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Mul*
  nameWithType.vb: Vec3Utilsf.Mul(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Mul(Single(), Single(), Single())
  name.vb: Mul(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Divide(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Divide(System.Single[],System.Single[],System.Single[])
  id: Divide(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Divide(float[], float[], float[])
  nameWithType: Vec3Utilsf.Divide(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Divide(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Divides two vec3's
  example: []
  syntax:
    content: public static float[] Divide(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Divide(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Divide*
  nameWithType.vb: Vec3Utilsf.Divide(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Divide(Single(), Single(), Single())
  name.vb: Divide(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Min(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Min(System.Single[],System.Single[],System.Single[])
  id: Min(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Min(float[], float[], float[])
  nameWithType: Vec3Utilsf.Min(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Min(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the minimum of two vec3's
  example: []
  syntax:
    content: public static float[] Min(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Min(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Min*
  nameWithType.vb: Vec3Utilsf.Min(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Min(Single(), Single(), Single())
  name.vb: Min(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Max(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Max(System.Single[],System.Single[],System.Single[])
  id: Max(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Max(float[], float[], float[])
  nameWithType: Vec3Utilsf.Max(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Max(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the maximum of two vec3's
  example: []
  syntax:
    content: public static float[] Max(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Max(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Max*
  nameWithType.vb: Vec3Utilsf.Max(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Max(Single(), Single(), Single())
  name.vb: Max(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Scale(System.Single[],System.Single[],System.Single)
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Scale(System.Single[],System.Single[],System.Single)
  id: Scale(System.Single[],System.Single[],System.Single)
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Scale(float[], float[], float)
  nameWithType: Vec3Utilsf.Scale(float[], float[], float)
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Scale(float[], float[], float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Scales a vec3 by a scalar number
  example: []
  syntax:
    content: public static float[] Scale(float[] output, float[] a, float b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Scale(output As Single(), a As Single(), b As Single) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Scale*
  nameWithType.vb: Vec3Utilsf.Scale(Single(), Single(), Single)
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Scale(Single(), Single(), Single)
  name.vb: Scale(Single(), Single(), Single)
- uid: Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd(System.Single[],System.Single[],System.Single[],System.Single)
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd(System.Single[],System.Single[],System.Single[],System.Single)
  id: ScaleAndAdd(System.Single[],System.Single[],System.Single[],System.Single)
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: ScaleAndAdd(float[], float[], float[], float)
  nameWithType: Vec3Utilsf.ScaleAndAdd(float[], float[], float[], float)
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd(float[], float[], float[], float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Adds two vec3's after scaling the second operand by a scalar value
  example: []
  syntax:
    content: public static float[] ScaleAndAdd(float[] output, float[] a, float[] b, float scale)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    - id: scale
      type: System.Single
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function ScaleAndAdd(output As Single(), a As Single(), b As Single(), scale As Single) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd*
  nameWithType.vb: Vec3Utilsf.ScaleAndAdd(Single(), Single(), Single(), Single)
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd(Single(), Single(), Single(), Single)
  name.vb: ScaleAndAdd(Single(), Single(), Single(), Single)
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Distance(System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Distance(System.Single[],System.Single[])
  id: Distance(System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Distance(float[], float[])
  nameWithType: Vec3Utilsf.Distance(float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Distance(float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Calculates the euclidian distance between two vec3's. Returns {Number} distance between a and b
  example: []
  syntax:
    content: public static float Distance(float[] a, float[] b)
    parameters:
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Distance(a As Single(), b As Single()) As Single
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Distance*
  nameWithType.vb: Vec3Utilsf.Distance(Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Distance(Single(), Single())
  name.vb: Distance(Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance(System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance(System.Single[],System.Single[])
  id: SquaredDistance(System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: SquaredDistance(float[], float[])
  nameWithType: Vec3Utilsf.SquaredDistance(float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance(float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Calculates the squared euclidian distance between two vec3's. Returns {Number} squared distance between a and b
  example: []
  syntax:
    content: public static float SquaredDistance(float[] a, float[] b)
    parameters:
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function SquaredDistance(a As Single(), b As Single()) As Single
  overload: Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance*
  nameWithType.vb: Vec3Utilsf.SquaredDistance(Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance(Single(), Single())
  name.vb: SquaredDistance(Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Length_(System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Length_(System.Single[])
  id: Length_(System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Length_(float[])
  nameWithType: Vec3Utilsf.Length_(float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Length_(float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Calculates the length of a vec3
  example: []
  syntax:
    content: public static float Length_(float[] a)
    parameters:
    - id: a
      type: System.Single[]
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Length_(a As Single()) As Single
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Length_*
  nameWithType.vb: Vec3Utilsf.Length_(Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Length_(Single())
  name.vb: Length_(Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength(System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength(System.Single[])
  id: SquaredLength(System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: SquaredLength(float[])
  nameWithType: Vec3Utilsf.SquaredLength(float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength(float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Calculates the squared length of a vec3. Returns {Number} squared length of a
  example: []
  syntax:
    content: public static float SquaredLength(float[] a)
    parameters:
    - id: a
      type: System.Single[]
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function SquaredLength(a As Single()) As Single
  overload: Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength*
  nameWithType.vb: Vec3Utilsf.SquaredLength(Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength(Single())
  name.vb: SquaredLength(Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Negate(System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Negate(System.Single[],System.Single[])
  id: Negate(System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Negate(float[], float[])
  nameWithType: Vec3Utilsf.Negate(float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Negate(float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Negates the components of a vec3
  example: []
  syntax:
    content: public static float[] Negate(float[] output, float[] a)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Negate(output As Single(), a As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Negate*
  nameWithType.vb: Vec3Utilsf.Negate(Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Negate(Single(), Single())
  name.vb: Negate(Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Normalize(System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Normalize(System.Single[],System.Single[])
  id: Normalize(System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Normalize(float[], float[])
  nameWithType: Vec3Utilsf.Normalize(float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Normalize(float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Normalize a vec3
  example: []
  syntax:
    content: public static float[] Normalize(float[] output, float[] a)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Normalize(output As Single(), a As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Normalize*
  nameWithType.vb: Vec3Utilsf.Normalize(Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Normalize(Single(), Single())
  name.vb: Normalize(Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Dot(System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Dot(System.Single[],System.Single[])
  id: Dot(System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Dot(float[], float[])
  nameWithType: Vec3Utilsf.Dot(float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Dot(float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Calculates the dot product of two vec3's. Returns {Number} dot product of a and b
  example: []
  syntax:
    content: public static float Dot(float[] a, float[] b)
    parameters:
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Dot(a As Single(), b As Single()) As Single
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Dot*
  nameWithType.vb: Vec3Utilsf.Dot(Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Dot(Single(), Single())
  name.vb: Dot(Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Cross(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Cross(System.Single[],System.Single[],System.Single[])
  id: Cross(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Cross(float[], float[], float[])
  nameWithType: Vec3Utilsf.Cross(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Cross(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Computes the cross product of two vec3's. Returns {vec3} out
  example: []
  syntax:
    content: public static float[] Cross(float[] output, float[] a, float[] b)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Cross(output As Single(), a As Single(), b As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Cross*
  nameWithType.vb: Vec3Utilsf.Cross(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Cross(Single(), Single(), Single())
  name.vb: Cross(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Lerp(System.Single[],System.Single[],System.Single[],System.Single)
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.Lerp(System.Single[],System.Single[],System.Single[],System.Single)
  id: Lerp(System.Single[],System.Single[],System.Single[],System.Single)
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: Lerp(float[], float[], float[], float)
  nameWithType: Vec3Utilsf.Lerp(float[], float[], float[], float)
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Lerp(float[], float[], float[], float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Performs a linear interpolation between two vec3's
  example: []
  syntax:
    content: public static float[] Lerp(float[] output, float[] a, float[] b, float t)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: b
      type: System.Single[]
      description: ''
    - id: t
      type: System.Single
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function Lerp(output As Single(), a As Single(), b As Single(), t As Single) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.Lerp*
  nameWithType.vb: Vec3Utilsf.Lerp(Single(), Single(), Single(), Single)
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.Lerp(Single(), Single(), Single(), Single)
  name.vb: Lerp(Single(), Single(), Single(), Single)
- uid: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4(System.Single[],System.Single[],System.Single[])
  id: TransformMat4(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: TransformMat4(float[], float[], float[])
  nameWithType: Vec3Utilsf.TransformMat4(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Transforms the vec3 with a mat4. 4th vector component is implicitly '1'. Returns {vec3} out
  example: []
  syntax:
    content: public static float[] TransformMat4(float[] output, float[] a, float[] m)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: m
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function TransformMat4(output As Single(), a As Single(), m As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4*
  nameWithType.vb: Vec3Utilsf.TransformMat4(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4(Single(), Single(), Single())
  name.vb: TransformMat4(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3(System.Single[],System.Single[],System.Single[])
  id: TransformMat3(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: TransformMat3(float[], float[], float[])
  nameWithType: Vec3Utilsf.TransformMat3(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Transforms the vec3 with a mat3. Returns {vec3} out
  example: []
  syntax:
    content: public static float[] TransformMat3(float[] output, float[] a, float[] m)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: m
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function TransformMat3(output As Single(), a As Single(), m As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3*
  nameWithType.vb: Vec3Utilsf.TransformMat3(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3(Single(), Single(), Single())
  name.vb: TransformMat3(Single(), Single(), Single())
- uid: Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat(System.Single[],System.Single[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat(System.Single[],System.Single[],System.Single[])
  id: TransformQuat(System.Single[],System.Single[],System.Single[])
  parent: Vintagestory.API.MathTools.Vec3Utilsf
  langs:
  - csharp
  - vb
  name: TransformQuat(float[], float[], float[])
  nameWithType: Vec3Utilsf.TransformQuat(float[], float[], float[])
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat(float[], float[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Transforms the vec3 with a quat
  example: []
  syntax:
    content: public static float[] TransformQuat(float[] output, float[] a, float[] q)
    parameters:
    - id: output
      type: System.Single[]
      description: ''
    - id: a
      type: System.Single[]
      description: ''
    - id: q
      type: System.Single[]
      description: ''
    return:
      type: System.Single[]
      description: ''
    content.vb: Public Shared Function TransformQuat(output As Single(), a As Single(), q As Single()) As Single()
  overload: Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat*
  nameWithType.vb: Vec3Utilsf.TransformQuat(Single(), Single(), Single())
  fullName.vb: Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat(Single(), Single(), Single())
  name.vb: TransformQuat(Single(), Single(), Single())
references:
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Create*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Create
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Create
  name: Create
  nameWithType: Vec3Utilsf.Create
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Create
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.Vec3Utilsf.CloneIt*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.CloneIt
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_CloneIt_System_Single___
  name: CloneIt
  nameWithType: Vec3Utilsf.CloneIt
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.CloneIt
- uid: Vintagestory.API.MathTools.Vec3Utilsf.FromValues*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.FromValues
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_FromValues_System_Single_System_Single_System_Single_
  name: FromValues
  nameWithType: Vec3Utilsf.FromValues
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.FromValues
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Copy*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Copy
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Copy_System_Single___System_Single___
  name: Copy
  nameWithType: Vec3Utilsf.Copy
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Copy
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Set*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Set
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Set_System_Single___System_Single_System_Single_System_Single_
  name: Set
  nameWithType: Vec3Utilsf.Set
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Set
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Add*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Add
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Add_System_Single___System_Single___System_Single___
  name: Add
  nameWithType: Vec3Utilsf.Add
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Add
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Substract*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Substract
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Substract_System_Single___System_Single___System_Single___
  name: Substract
  nameWithType: Vec3Utilsf.Substract
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Substract
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Multiply*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Multiply
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Multiply_System_Single___System_Single___System_Single___
  name: Multiply
  nameWithType: Vec3Utilsf.Multiply
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Multiply
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Mul*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Mul
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Mul_System_Single___System_Single___System_Single___
  name: Mul
  nameWithType: Vec3Utilsf.Mul
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Mul
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Divide*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Divide
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Divide_System_Single___System_Single___System_Single___
  name: Divide
  nameWithType: Vec3Utilsf.Divide
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Divide
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Min*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Min
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Min_System_Single___System_Single___System_Single___
  name: Min
  nameWithType: Vec3Utilsf.Min
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Min
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Max*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Max
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Max_System_Single___System_Single___System_Single___
  name: Max
  nameWithType: Vec3Utilsf.Max
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Max
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Scale*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Scale
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Scale_System_Single___System_Single___System_Single_
  name: Scale
  nameWithType: Vec3Utilsf.Scale
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Scale
- uid: Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_ScaleAndAdd_System_Single___System_Single___System_Single___System_Single_
  name: ScaleAndAdd
  nameWithType: Vec3Utilsf.ScaleAndAdd
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.ScaleAndAdd
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Distance*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Distance
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Distance_System_Single___System_Single___
  name: Distance
  nameWithType: Vec3Utilsf.Distance
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Distance
- uid: Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_SquaredDistance_System_Single___System_Single___
  name: SquaredDistance
  nameWithType: Vec3Utilsf.SquaredDistance
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.SquaredDistance
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Length_*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Length_
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Length__System_Single___
  name: Length_
  nameWithType: Vec3Utilsf.Length_
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Length_
- uid: Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_SquaredLength_System_Single___
  name: SquaredLength
  nameWithType: Vec3Utilsf.SquaredLength
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.SquaredLength
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Negate*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Negate
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Negate_System_Single___System_Single___
  name: Negate
  nameWithType: Vec3Utilsf.Negate
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Negate
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Normalize*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Normalize
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Normalize_System_Single___System_Single___
  name: Normalize
  nameWithType: Vec3Utilsf.Normalize
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Normalize
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Dot*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Dot
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Dot_System_Single___System_Single___
  name: Dot
  nameWithType: Vec3Utilsf.Dot
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Dot
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Cross*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Cross
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Cross_System_Single___System_Single___System_Single___
  name: Cross
  nameWithType: Vec3Utilsf.Cross
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Cross
- uid: Vintagestory.API.MathTools.Vec3Utilsf.Lerp*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.Lerp
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_Lerp_System_Single___System_Single___System_Single___System_Single_
  name: Lerp
  nameWithType: Vec3Utilsf.Lerp
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.Lerp
- uid: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_TransformMat4_System_Single___System_Single___System_Single___
  name: TransformMat4
  nameWithType: Vec3Utilsf.TransformMat4
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat4
- uid: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_TransformMat3_System_Single___System_Single___System_Single___
  name: TransformMat3
  nameWithType: Vec3Utilsf.TransformMat3
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.TransformMat3
- uid: Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat*
  commentId: Overload:Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat
  href: Vintagestory.API.MathTools.Vec3Utilsf.html#Vintagestory_API_MathTools_Vec3Utilsf_TransformQuat_System_Single___System_Single___System_Single___
  name: TransformQuat
  nameWithType: Vec3Utilsf.TransformQuat
  fullName: Vintagestory.API.MathTools.Vec3Utilsf.TransformQuat
