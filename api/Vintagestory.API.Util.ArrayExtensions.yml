### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Util.ArrayExtensions
  commentId: T:Vintagestory.API.Util.ArrayExtensions
  id: ArrayExtensions
  parent: Vintagestory.API.Util
  children:
  - Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],System.Collections.Generic.IEnumerable{``0})
  - Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],``0)
  - Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],``0[])
  - Vintagestory.API.Util.ArrayExtensions.Contains``1(``0[],``0)
  - Vintagestory.API.Util.ArrayExtensions.Fill``1(``0[],Vintagestory.API.Util.fillCallback{``0})
  - Vintagestory.API.Util.ArrayExtensions.Fill``1(``0[],``0)
  - Vintagestory.API.Util.ArrayExtensions.InRange``1(``0[],System.Func{``0,System.Double},System.Double)
  - Vintagestory.API.Util.ArrayExtensions.IndexOf``1(``0[],System.Func{``0,System.Boolean})
  - Vintagestory.API.Util.ArrayExtensions.IndexOf``1(``0[],``0)
  - Vintagestory.API.Util.ArrayExtensions.InsertAt``1(``0[],``0,System.Int32)
  - Vintagestory.API.Util.ArrayExtensions.Nearest``1(``0[],System.Func{``0,System.Double})
  - Vintagestory.API.Util.ArrayExtensions.RemoveAt``1(``0[],System.Int32)
  - Vintagestory.API.Util.ArrayExtensions.RemoveEntry``1(``0[],System.Int32)
  - Vintagestory.API.Util.ArrayExtensions.Remove``1(``0[],``0)
  - Vintagestory.API.Util.ArrayExtensions.Shuffle``1(``0[],System.Random)
  - Vintagestory.API.Util.ArrayExtensions.Shuffle``1(``0[],Vintagestory.API.MathTools.LCGRandom)
  langs:
  - csharp
  - vb
  name: ArrayExtensions
  nameWithType: ArrayExtensions
  fullName: Vintagestory.API.Util.ArrayExtensions
  type: Class
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static class ArrayExtensions
    content.vb: Public Module ArrayExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Vintagestory.API.Util.ArrayExtensions.Nearest``1(``0[],System.Func{``0,System.Double})
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Nearest``1(``0[],System.Func{``0,System.Double})
  id: Nearest``1(``0[],System.Func{``0,System.Double})
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Nearest<T>(T[], Func<T, double>)
  nameWithType: ArrayExtensions.Nearest<T>(T[], Func<T, double>)
  fullName: Vintagestory.API.Util.ArrayExtensions.Nearest<T>(T[], System.Func<T, double>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static T Nearest<T>(this T[] array, Func<T, double> getDistance)
    parameters:
    - id: array
      type: '{T}[]'
    - id: getDistance
      type: System.Func{{T},System.Double}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Nearest(Of T)(array As T(), getDistance As Func(Of T, Double)) As T
  overload: Vintagestory.API.Util.ArrayExtensions.Nearest*
  nameWithType.vb: ArrayExtensions.Nearest(Of T)(T(), Func(Of T, Double))
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Nearest(Of T)(T(), System.Func(Of T, Double))
  name.vb: Nearest(Of T)(T(), Func(Of T, Double))
- uid: Vintagestory.API.Util.ArrayExtensions.InRange``1(``0[],System.Func{``0,System.Double},System.Double)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.InRange``1(``0[],System.Func{``0,System.Double},System.Double)
  id: InRange``1(``0[],System.Func{``0,System.Double},System.Double)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: InRange<T>(T[], Func<T, double>, double)
  nameWithType: ArrayExtensions.InRange<T>(T[], Func<T, double>, double)
  fullName: Vintagestory.API.Util.ArrayExtensions.InRange<T>(T[], System.Func<T, double>, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static List<T> InRange<T>(this T[] array, Func<T, double> getDistance, double range)
    parameters:
    - id: array
      type: '{T}[]'
    - id: getDistance
      type: System.Func{{T},System.Double}
    - id: range
      type: System.Double
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Shared Function InRange(Of T)(array As T(), getDistance As Func(Of T, Double), range As Double) As List(Of T)
  overload: Vintagestory.API.Util.ArrayExtensions.InRange*
  nameWithType.vb: ArrayExtensions.InRange(Of T)(T(), Func(Of T, Double), Double)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.InRange(Of T)(T(), System.Func(Of T, Double), Double)
  name.vb: InRange(Of T)(T(), Func(Of T, Double), Double)
- uid: Vintagestory.API.Util.ArrayExtensions.IndexOf``1(``0[],System.Func{``0,System.Boolean})
  commentId: M:Vintagestory.API.Util.ArrayExtensions.IndexOf``1(``0[],System.Func{``0,System.Boolean})
  id: IndexOf``1(``0[],System.Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: IndexOf<T>(T[], Func<T, bool>)
  nameWithType: ArrayExtensions.IndexOf<T>(T[], Func<T, bool>)
  fullName: Vintagestory.API.Util.ArrayExtensions.IndexOf<T>(T[], System.Func<T, bool>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static int IndexOf<T>(this T[] array, Func<T, bool> predicate)
    parameters:
    - id: array
      type: '{T}[]'
    - id: predicate
      type: System.Func{{T},System.Boolean}
    typeParameters:
    - id: T
    return:
      type: System.Int32
    content.vb: Public Shared Function IndexOf(Of T)(array As T(), predicate As Func(Of T, Boolean)) As Integer
  overload: Vintagestory.API.Util.ArrayExtensions.IndexOf*
  nameWithType.vb: ArrayExtensions.IndexOf(Of T)(T(), Func(Of T, Boolean))
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.IndexOf(Of T)(T(), System.Func(Of T, Boolean))
  name.vb: IndexOf(Of T)(T(), Func(Of T, Boolean))
- uid: Vintagestory.API.Util.ArrayExtensions.IndexOf``1(``0[],``0)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.IndexOf``1(``0[],``0)
  id: IndexOf``1(``0[],``0)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: IndexOf<T>(T[], T)
  nameWithType: ArrayExtensions.IndexOf<T>(T[], T)
  fullName: Vintagestory.API.Util.ArrayExtensions.IndexOf<T>(T[], T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static int IndexOf<T>(this T[] array, T value)
    parameters:
    - id: array
      type: '{T}[]'
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Int32
    content.vb: Public Shared Function IndexOf(Of T)(array As T(), value As T) As Integer
  overload: Vintagestory.API.Util.ArrayExtensions.IndexOf*
  nameWithType.vb: ArrayExtensions.IndexOf(Of T)(T(), T)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.IndexOf(Of T)(T(), T)
  name.vb: IndexOf(Of T)(T(), T)
- uid: Vintagestory.API.Util.ArrayExtensions.Contains``1(``0[],``0)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Contains``1(``0[],``0)
  id: Contains``1(``0[],``0)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Contains<T>(T[], T)
  nameWithType: ArrayExtensions.Contains<T>(T[], T)
  fullName: Vintagestory.API.Util.ArrayExtensions.Contains<T>(T[], T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static bool Contains<T>(this T[] array, T value)
    parameters:
    - id: array
      type: '{T}[]'
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Shared Function Contains(Of T)(array As T(), value As T) As Boolean
  overload: Vintagestory.API.Util.ArrayExtensions.Contains*
  nameWithType.vb: ArrayExtensions.Contains(Of T)(T(), T)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Contains(Of T)(T(), T)
  name.vb: Contains(Of T)(T(), T)
- uid: Vintagestory.API.Util.ArrayExtensions.Remove``1(``0[],``0)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Remove``1(``0[],``0)
  id: Remove``1(``0[],``0)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Remove<T>(T[], T)
  nameWithType: ArrayExtensions.Remove<T>(T[], T)
  fullName: Vintagestory.API.Util.ArrayExtensions.Remove<T>(T[], T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Creates a new copy of the array with <code class="paramref">value</code> removed
  example: []
  syntax:
    content: public static T[] Remove<T>(this T[] array, T value)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: value
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function Remove(Of T)(array As T(), value As T) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Remove*
  nameWithType.vb: ArrayExtensions.Remove(Of T)(T(), T)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Remove(Of T)(T(), T)
  name.vb: Remove(Of T)(T(), T)
- uid: Vintagestory.API.Util.ArrayExtensions.RemoveEntry``1(``0[],System.Int32)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.RemoveEntry``1(``0[],System.Int32)
  id: RemoveEntry``1(``0[],System.Int32)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: RemoveEntry<T>(T[], int)
  nameWithType: ArrayExtensions.RemoveEntry<T>(T[], int)
  fullName: Vintagestory.API.Util.ArrayExtensions.RemoveEntry<T>(T[], int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: >-
      [Obsolete("Use RemoveAt instead")]

      public static T[] RemoveEntry<T>(this T[] array, int index)
    parameters:
    - id: array
      type: '{T}[]'
    - id: index
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}[]'
    content.vb: >-
      <Obsolete("Use RemoveAt instead")>

      Public Shared Function RemoveEntry(Of T)(array As T(), index As Integer) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.RemoveEntry*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use RemoveAt instead
  nameWithType.vb: ArrayExtensions.RemoveEntry(Of T)(T(), Integer)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.RemoveEntry(Of T)(T(), Integer)
  name.vb: RemoveEntry(Of T)(T(), Integer)
- uid: Vintagestory.API.Util.ArrayExtensions.RemoveAt``1(``0[],System.Int32)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.RemoveAt``1(``0[],System.Int32)
  id: RemoveAt``1(``0[],System.Int32)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: RemoveAt<T>(T[], int)
  nameWithType: ArrayExtensions.RemoveAt<T>(T[], int)
  fullName: Vintagestory.API.Util.ArrayExtensions.RemoveAt<T>(T[], int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Creates a new copy of array with element at index removed
  example: []
  syntax:
    content: public static T[] RemoveAt<T>(this T[] array, int index)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: index
      type: System.Int32
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function RemoveAt(Of T)(array As T(), index As Integer) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.RemoveAt*
  nameWithType.vb: ArrayExtensions.RemoveAt(Of T)(T(), Integer)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.RemoveAt(Of T)(T(), Integer)
  name.vb: RemoveAt(Of T)(T(), Integer)
- uid: Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],``0)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],``0)
  id: Append``1(``0[],``0)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Append<T>(T[], T)
  nameWithType: ArrayExtensions.Append<T>(T[], T)
  fullName: Vintagestory.API.Util.ArrayExtensions.Append<T>(T[], T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Creates a new copy of the array with <code class="paramref">value</code> appened to the end of the array
  example: []
  syntax:
    content: public static T[] Append<T>(this T[] array, T value)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: value
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function Append(Of T)(array As T(), value As T) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Append*
  nameWithType.vb: ArrayExtensions.Append(Of T)(T(), T)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Append(Of T)(T(), T)
  name.vb: Append(Of T)(T(), T)
- uid: Vintagestory.API.Util.ArrayExtensions.InsertAt``1(``0[],``0,System.Int32)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.InsertAt``1(``0[],``0,System.Int32)
  id: InsertAt``1(``0[],``0,System.Int32)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: InsertAt<T>(T[], T, int)
  nameWithType: ArrayExtensions.InsertAt<T>(T[], T, int)
  fullName: Vintagestory.API.Util.ArrayExtensions.InsertAt<T>(T[], T, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Creates a new copy of the array with <code class="paramref">value</code> inserted at the given index
  example: []
  syntax:
    content: public static T[] InsertAt<T>(this T[] array, T value, int index)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: value
      type: '{T}'
      description: ''
    - id: index
      type: System.Int32
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function InsertAt(Of T)(array As T(), value As T, index As Integer) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.InsertAt*
  nameWithType.vb: ArrayExtensions.InsertAt(Of T)(T(), T, Integer)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.InsertAt(Of T)(T(), T, Integer)
  name.vb: InsertAt(Of T)(T(), T, Integer)
- uid: Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],``0[])
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],``0[])
  id: Append``1(``0[],``0[])
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Append<T>(T[], params T[])
  nameWithType: ArrayExtensions.Append<T>(T[], params T[])
  fullName: Vintagestory.API.Util.ArrayExtensions.Append<T>(T[], params T[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Creates a new copy of the array with <code class="paramref">value</code> appended to the end of the array
  example: []
  syntax:
    content: public static T[] Append<T>(this T[] array, params T[] value)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: value
      type: '{T}[]'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function Append(Of T)(array As T(), ParamArray value As T()) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Append*
  nameWithType.vb: ArrayExtensions.Append(Of T)(T(), ParamArray T())
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Append(Of T)(T(), ParamArray T())
  name.vb: Append(Of T)(T(), ParamArray T())
- uid: Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],System.Collections.Generic.IEnumerable{``0})
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Append``1(``0[],System.Collections.Generic.IEnumerable{``0})
  id: Append``1(``0[],System.Collections.Generic.IEnumerable{``0})
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Append<T>(T[], IEnumerable<T>)
  nameWithType: ArrayExtensions.Append<T>(T[], IEnumerable<T>)
  fullName: Vintagestory.API.Util.ArrayExtensions.Append<T>(T[], System.Collections.Generic.IEnumerable<T>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Creates a new copy of the array with <code class="paramref">values</code> appended to the end of the array
  example: []
  syntax:
    content: public static T[] Append<T>(this T[] array, IEnumerable<T> values)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: values
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function Append(Of T)(array As T(), values As IEnumerable(Of T)) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Append*
  nameWithType.vb: ArrayExtensions.Append(Of T)(T(), IEnumerable(Of T))
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Append(Of T)(T(), System.Collections.Generic.IEnumerable(Of T))
  name.vb: Append(Of T)(T(), IEnumerable(Of T))
- uid: Vintagestory.API.Util.ArrayExtensions.Fill``1(``0[],``0)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Fill``1(``0[],``0)
  id: Fill``1(``0[],``0)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Fill<T>(T[], T)
  nameWithType: ArrayExtensions.Fill<T>(T[], T)
  fullName: Vintagestory.API.Util.ArrayExtensions.Fill<T>(T[], T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static T[] Fill<T>(this T[] originalArray, T with)
    parameters:
    - id: originalArray
      type: '{T}[]'
    - id: with
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}[]'
    content.vb: Public Shared Function Fill(Of T)(originalArray As T(), [with] As T) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Fill*
  nameWithType.vb: ArrayExtensions.Fill(Of T)(T(), T)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Fill(Of T)(T(), T)
  name.vb: Fill(Of T)(T(), T)
- uid: Vintagestory.API.Util.ArrayExtensions.Fill``1(``0[],Vintagestory.API.Util.fillCallback{``0})
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Fill``1(``0[],Vintagestory.API.Util.fillCallback{``0})
  id: Fill``1(``0[],Vintagestory.API.Util.fillCallback{``0})
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Fill<T>(T[], fillCallback<T>)
  nameWithType: ArrayExtensions.Fill<T>(T[], fillCallback<T>)
  fullName: Vintagestory.API.Util.ArrayExtensions.Fill<T>(T[], Vintagestory.API.Util.fillCallback<T>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static T[] Fill<T>(this T[] originalArray, fillCallback<T> fillCallback)
    parameters:
    - id: originalArray
      type: '{T}[]'
    - id: fillCallback
      type: Vintagestory.API.Util.fillCallback{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}[]'
    content.vb: Public Shared Function Fill(Of T)(originalArray As T(), fillCallback As fillCallback(Of T)) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Fill*
  nameWithType.vb: ArrayExtensions.Fill(Of T)(T(), fillCallback(Of T))
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Fill(Of T)(T(), Vintagestory.API.Util.fillCallback(Of T))
  name.vb: Fill(Of T)(T(), fillCallback(Of T))
- uid: Vintagestory.API.Util.ArrayExtensions.Shuffle``1(``0[],System.Random)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Shuffle``1(``0[],System.Random)
  id: Shuffle``1(``0[],System.Random)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Shuffle<T>(T[], Random)
  nameWithType: ArrayExtensions.Shuffle<T>(T[], Random)
  fullName: Vintagestory.API.Util.ArrayExtensions.Shuffle<T>(T[], System.Random)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Performs a Fisher-Yates shuffle in linear time or O(n)
  example: []
  syntax:
    content: public static T[] Shuffle<T>(this T[] array, Random rand)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: rand
      type: System.Random
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
    content.vb: Public Shared Function Shuffle(Of T)(array As T(), rand As Random) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Shuffle*
  nameWithType.vb: ArrayExtensions.Shuffle(Of T)(T(), Random)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Shuffle(Of T)(T(), System.Random)
  name.vb: Shuffle(Of T)(T(), Random)
- uid: Vintagestory.API.Util.ArrayExtensions.Shuffle``1(``0[],Vintagestory.API.MathTools.LCGRandom)
  commentId: M:Vintagestory.API.Util.ArrayExtensions.Shuffle``1(``0[],Vintagestory.API.MathTools.LCGRandom)
  id: Shuffle``1(``0[],Vintagestory.API.MathTools.LCGRandom)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.ArrayExtensions
  langs:
  - csharp
  - vb
  name: Shuffle<T>(T[], LCGRandom)
  nameWithType: ArrayExtensions.Shuffle<T>(T[], LCGRandom)
  fullName: Vintagestory.API.Util.ArrayExtensions.Shuffle<T>(T[], Vintagestory.API.MathTools.LCGRandom)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Performs a Fisher-Yates shuffle in linear time or O(n)
  example: []
  syntax:
    content: public static T[] Shuffle<T>(this T[] array, LCGRandom rand)
    parameters:
    - id: array
      type: '{T}[]'
      description: ''
    - id: rand
      type: Vintagestory.API.MathTools.LCGRandom
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
    content.vb: Public Shared Function Shuffle(Of T)(array As T(), rand As LCGRandom) As T()
  overload: Vintagestory.API.Util.ArrayExtensions.Shuffle*
  nameWithType.vb: ArrayExtensions.Shuffle(Of T)(T(), LCGRandom)
  fullName.vb: Vintagestory.API.Util.ArrayExtensions.Shuffle(Of T)(T(), Vintagestory.API.MathTools.LCGRandom)
  name.vb: Shuffle(Of T)(T(), LCGRandom)
references:
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Util.ArrayExtensions.Nearest*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.Nearest
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_Nearest__1___0___System_Func___0_System_Double__
  name: Nearest
  nameWithType: ArrayExtensions.Nearest
  fullName: Vintagestory.API.Util.ArrayExtensions.Nearest
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Func{{T},System.Double}
  commentId: T:System.Func{``0,System.Double}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, double>
  nameWithType: Func<T, double>
  fullName: System.Func<T, double>
  nameWithType.vb: Func(Of T, Double)
  fullName.vb: System.Func(Of T, Double)
  name.vb: Func(Of T, Double)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Vintagestory.API.Util.ArrayExtensions.InRange*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.InRange
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_InRange__1___0___System_Func___0_System_Double__System_Double_
  name: InRange
  nameWithType: ArrayExtensions.InRange
  fullName: Vintagestory.API.Util.ArrayExtensions.InRange
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Util.ArrayExtensions.IndexOf*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.IndexOf
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_IndexOf__1___0___System_Func___0_System_Boolean__
  name: IndexOf
  nameWithType: ArrayExtensions.IndexOf
  fullName: Vintagestory.API.Util.ArrayExtensions.IndexOf
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Vintagestory.API.Util.ArrayExtensions.Contains*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.Contains
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_Contains__1___0_____0_
  name: Contains
  nameWithType: ArrayExtensions.Contains
  fullName: Vintagestory.API.Util.ArrayExtensions.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Vintagestory.API.Util.ArrayExtensions.Remove*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.Remove
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_Remove__1___0_____0_
  name: Remove
  nameWithType: ArrayExtensions.Remove
  fullName: Vintagestory.API.Util.ArrayExtensions.Remove
- uid: Vintagestory.API.Util.ArrayExtensions.RemoveEntry*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.RemoveEntry
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_RemoveEntry__1___0___System_Int32_
  name: RemoveEntry
  nameWithType: ArrayExtensions.RemoveEntry
  fullName: Vintagestory.API.Util.ArrayExtensions.RemoveEntry
- uid: Vintagestory.API.Util.ArrayExtensions.RemoveAt*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.RemoveAt
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_RemoveAt__1___0___System_Int32_
  name: RemoveAt
  nameWithType: ArrayExtensions.RemoveAt
  fullName: Vintagestory.API.Util.ArrayExtensions.RemoveAt
- uid: Vintagestory.API.Util.ArrayExtensions.Append*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.Append
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_Append__1___0_____0_
  name: Append
  nameWithType: ArrayExtensions.Append
  fullName: Vintagestory.API.Util.ArrayExtensions.Append
- uid: Vintagestory.API.Util.ArrayExtensions.InsertAt*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.InsertAt
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_InsertAt__1___0_____0_System_Int32_
  name: InsertAt
  nameWithType: ArrayExtensions.InsertAt
  fullName: Vintagestory.API.Util.ArrayExtensions.InsertAt
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Util.ArrayExtensions.Fill*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.Fill
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_Fill__1___0_____0_
  name: Fill
  nameWithType: ArrayExtensions.Fill
  fullName: Vintagestory.API.Util.ArrayExtensions.Fill
- uid: Vintagestory.API.Util.fillCallback{{T}}
  commentId: T:Vintagestory.API.Util.fillCallback{``0}
  parent: Vintagestory.API.Util
  definition: Vintagestory.API.Util.fillCallback`1
  href: Vintagestory.API.Util.fillCallback-1.html
  name: fillCallback<T>
  nameWithType: fillCallback<T>
  fullName: Vintagestory.API.Util.fillCallback<T>
  nameWithType.vb: fillCallback(Of T)
  fullName.vb: Vintagestory.API.Util.fillCallback(Of T)
  name.vb: fillCallback(Of T)
  spec.csharp:
  - uid: Vintagestory.API.Util.fillCallback`1
    name: fillCallback
    href: Vintagestory.API.Util.fillCallback-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Vintagestory.API.Util.fillCallback`1
    name: fillCallback
    href: Vintagestory.API.Util.fillCallback-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Util.fillCallback`1
  commentId: T:Vintagestory.API.Util.fillCallback`1
  href: Vintagestory.API.Util.fillCallback-1.html
  name: fillCallback<T>
  nameWithType: fillCallback<T>
  fullName: Vintagestory.API.Util.fillCallback<T>
  nameWithType.vb: fillCallback(Of T)
  fullName.vb: Vintagestory.API.Util.fillCallback(Of T)
  name.vb: fillCallback(Of T)
  spec.csharp:
  - uid: Vintagestory.API.Util.fillCallback`1
    name: fillCallback
    href: Vintagestory.API.Util.fillCallback-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Vintagestory.API.Util.fillCallback`1
    name: fillCallback
    href: Vintagestory.API.Util.fillCallback-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Util.ArrayExtensions.Shuffle*
  commentId: Overload:Vintagestory.API.Util.ArrayExtensions.Shuffle
  href: Vintagestory.API.Util.ArrayExtensions.html#Vintagestory_API_Util_ArrayExtensions_Shuffle__1___0___System_Random_
  name: Shuffle
  nameWithType: ArrayExtensions.Shuffle
  fullName: Vintagestory.API.Util.ArrayExtensions.Shuffle
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: Vintagestory.API.MathTools.LCGRandom
  commentId: T:Vintagestory.API.MathTools.LCGRandom
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.LCGRandom.html
  name: LCGRandom
  nameWithType: LCGRandom
  fullName: Vintagestory.API.MathTools.LCGRandom
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
