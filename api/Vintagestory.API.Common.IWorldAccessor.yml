### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Common.IWorldAccessor
  commentId: T:Vintagestory.API.Common.IWorldAccessor
  id: IWorldAccessor
  parent: Vintagestory.API.Common
  children:
  - Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers
  - Vintagestory.API.Common.IWorldAccessor.AllPlayers
  - Vintagestory.API.Common.IWorldAccessor.Api
  - Vintagestory.API.Common.IWorldAccessor.AssetManager
  - Vintagestory.API.Common.IWorldAccessor.BlockAccessor
  - Vintagestory.API.Common.IWorldAccessor.BlockLightLevels
  - Vintagestory.API.Common.IWorldAccessor.Blocks
  - Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor
  - Vintagestory.API.Common.IWorldAccessor.Calendar
  - Vintagestory.API.Common.IWorldAccessor.ChunkProvider
  - Vintagestory.API.Common.IWorldAccessor.Claims
  - Vintagestory.API.Common.IWorldAccessor.ClassRegistry
  - Vintagestory.API.Common.IWorldAccessor.Collectibles
  - Vintagestory.API.Common.IWorldAccessor.CollisionTester
  - Vintagestory.API.Common.IWorldAccessor.Config
  - Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange
  - Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition
  - Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds
  - Vintagestory.API.Common.IWorldAccessor.EntityDebugMode
  - Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes
  - Vintagestory.API.Common.IWorldAccessor.EntityTypes
  - Vintagestory.API.Common.IWorldAccessor.FrameProfiler
  - Vintagestory.API.Common.IWorldAccessor.GetBlock(System.Int32)
  - Vintagestory.API.Common.IWorldAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate(System.Boolean,System.Boolean)
  - Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  - Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading(System.Boolean,System.Boolean)
  - Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  - Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  - Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor(System.Boolean,System.Boolean)
  - Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  - Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  - Vintagestory.API.Common.IWorldAccessor.GetEntityById(System.Int64)
  - Vintagestory.API.Common.IWorldAccessor.GetEntityType(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[],Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  - Vintagestory.API.Common.IWorldAccessor.GetItem(System.Int32)
  - Vintagestory.API.Common.IWorldAccessor.GetItem(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor
  - Vintagestory.API.Common.IWorldAccessor.GetNearestEntity(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  - Vintagestory.API.Common.IWorldAccessor.GetPlayersAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.IPlayer})
  - Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry(System.String)
  - Vintagestory.API.Common.IWorldAccessor.GridRecipes
  - Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},System.Collections.Generic.List{System.Int32},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape)
  - Vintagestory.API.Common.IWorldAccessor.InteresectionTester
  - Vintagestory.API.Common.IWorldAccessor.Items
  - Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices
  - Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices
  - Vintagestory.API.Common.IWorldAccessor.Logger
  - Vintagestory.API.Common.IWorldAccessor.NearestPlayer(System.Double,System.Double,System.Double)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,Vintagestory.API.Client.EnumSoundType,System.Single,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.MathTools.BlockPos,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  - Vintagestory.API.Common.IWorldAccessor.PlayerByUid(System.String)
  - Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege(System.Int32,System.String)
  - Vintagestory.API.Common.IWorldAccessor.Rand
  - Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.IWorldIntersectionSupplier,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  - Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Ray,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  - Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,System.Single,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  - Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  - Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action{System.Single},System.Int32)
  - Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener(System.Action{System.Single},System.Int32,System.Int32)
  - Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier
  - Vintagestory.API.Common.IWorldAccessor.SeaLevel
  - Vintagestory.API.Common.IWorldAccessor.SearchBlocks(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IWorldAccessor.SearchItems(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IWorldAccessor.Seed
  - Vintagestory.API.Common.IWorldAccessor.Side
  - Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  - Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.ItemStack,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  - Vintagestory.API.Common.IWorldAccessor.SpawnEntity(Vintagestory.API.Common.Entities.Entity)
  - Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d)
  - Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d)
  - Vintagestory.API.Common.IWorldAccessor.SpawnParticles(System.Single,System.Int32,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3f,Vintagestory.API.MathTools.Vec3f,System.Single,System.Single,System.Single,Vintagestory.API.Common.EnumParticleModel,Vintagestory.API.Common.IPlayer)
  - Vintagestory.API.Common.IWorldAccessor.SpawnParticles(Vintagestory.API.Common.IParticlePropertiesProvider,Vintagestory.API.Common.IPlayer)
  - Vintagestory.API.Common.IWorldAccessor.SunBrightness
  - Vintagestory.API.Common.IWorldAccessor.SunLightLevels
  - Vintagestory.API.Common.IWorldAccessor.UnregisterCallback(System.Int64)
  - Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener(System.Int64)
  - Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk(Vintagestory.API.Common.Entities.Entity,System.Int64)
  langs:
  - csharp
  - vb
  name: IWorldAccessor
  nameWithType: IWorldAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor
  type: Interface
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Important interface to access the game world.
  example: []
  syntax:
    content: public interface IWorldAccessor
    content.vb: Public Interface IWorldAccessor
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.Common.IWorldAccessor.Config
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Config
  id: Config
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: IWorldAccessor.Config
  fullName: Vintagestory.API.Common.IWorldAccessor.Config
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The current world config
  example: []
  syntax:
    content: ITreeAttribute Config { get; }
    parameters: []
    return:
      type: Vintagestory.API.Datastructures.ITreeAttribute
    content.vb: ReadOnly Property Config As ITreeAttribute
  overload: Vintagestory.API.Common.IWorldAccessor.Config*
- uid: Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition
  commentId: P:Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition
  id: DefaultSpawnPosition
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: DefaultSpawnPosition
  nameWithType: IWorldAccessor.DefaultSpawnPosition
  fullName: Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The default spawn position as sent by the server (usually the map middle). Does not take player specific spawn point into account
  example: []
  syntax:
    content: EntityPos DefaultSpawnPosition { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.Entities.EntityPos
    content.vb: ReadOnly Property DefaultSpawnPosition As EntityPos
  overload: Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition*
- uid: Vintagestory.API.Common.IWorldAccessor.FrameProfiler
  commentId: P:Vintagestory.API.Common.IWorldAccessor.FrameProfiler
  id: FrameProfiler
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: FrameProfiler
  nameWithType: IWorldAccessor.FrameProfiler
  fullName: Vintagestory.API.Common.IWorldAccessor.FrameProfiler
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Gets the frame profiler utility.
  example: []
  syntax:
    content: FrameProfilerUtil FrameProfiler { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.FrameProfilerUtil
    content.vb: ReadOnly Property FrameProfiler As FrameProfilerUtil
  overload: Vintagestory.API.Common.IWorldAccessor.FrameProfiler*
- uid: Vintagestory.API.Common.IWorldAccessor.Api
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Api
  id: Api
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Api
  nameWithType: IWorldAccessor.Api
  fullName: Vintagestory.API.Common.IWorldAccessor.Api
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The api interface
  example: []
  syntax:
    content: ICoreAPI Api { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.ICoreAPI
    content.vb: ReadOnly Property Api As ICoreAPI
  overload: Vintagestory.API.Common.IWorldAccessor.Api*
- uid: Vintagestory.API.Common.IWorldAccessor.ChunkProvider
  commentId: P:Vintagestory.API.Common.IWorldAccessor.ChunkProvider
  id: ChunkProvider
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: ChunkProvider
  nameWithType: IWorldAccessor.ChunkProvider
  fullName: Vintagestory.API.Common.IWorldAccessor.ChunkProvider
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: IChunkProvider ChunkProvider { get; }
    parameters: []
    return:
      type: Vintagestory.API.Server.IChunkProvider
    content.vb: ReadOnly Property ChunkProvider As IChunkProvider
  overload: Vintagestory.API.Common.IWorldAccessor.ChunkProvider*
- uid: Vintagestory.API.Common.IWorldAccessor.Claims
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Claims
  id: Claims
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Claims
  nameWithType: IWorldAccessor.Claims
  fullName: Vintagestory.API.Common.IWorldAccessor.Claims
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The land claiming api interface
  example: []
  syntax:
    content: ILandClaimAPI Claims { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.ILandClaimAPI
    content.vb: ReadOnly Property Claims As ILandClaimAPI
  overload: Vintagestory.API.Common.IWorldAccessor.Claims*
- uid: Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices
  commentId: P:Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices
  id: LoadedChunkIndices
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: LoadedChunkIndices
  nameWithType: IWorldAccessor.LoadedChunkIndices
  fullName: Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns a list all loaded chunk positions in the form of a long index. Code to turn that into x/y/z coords:

    Vec3i coords = new Vec3i(
       (int)(chunkIndex3d % ChunkMapSizeX),
       (int)(chunkIndex3d / ((long)ChunkMapSizeX * ChunkMapSizeZ)),
       (int)((chunkIndex3d / ChunkMapSizeX) % ChunkMapSizeZ)
    );

    Retrieving the list is not a very fast process, not suggested to be called every frame
  example: []
  syntax:
    content: long[] LoadedChunkIndices { get; }
    parameters: []
    return:
      type: System.Int64[]
    content.vb: ReadOnly Property LoadedChunkIndices As Long()
  overload: Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices*
- uid: Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices
  commentId: P:Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices
  id: LoadedMapChunkIndices
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: LoadedMapChunkIndices
  nameWithType: IWorldAccessor.LoadedMapChunkIndices
  fullName: Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns a list all loaded chunk positions in the form of a long index
  example: []
  syntax:
    content: long[] LoadedMapChunkIndices { get; }
    parameters: []
    return:
      type: System.Int64[]
    content.vb: ReadOnly Property LoadedMapChunkIndices As Long()
  overload: Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices*
- uid: Vintagestory.API.Common.IWorldAccessor.BlockLightLevels
  commentId: P:Vintagestory.API.Common.IWorldAccessor.BlockLightLevels
  id: BlockLightLevels
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: BlockLightLevels
  nameWithType: IWorldAccessor.BlockLightLevels
  fullName: Vintagestory.API.Common.IWorldAccessor.BlockLightLevels
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The currently configured block light brightness levels
  example: []
  syntax:
    content: float[] BlockLightLevels { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: ReadOnly Property BlockLightLevels As Single()
  overload: Vintagestory.API.Common.IWorldAccessor.BlockLightLevels*
- uid: Vintagestory.API.Common.IWorldAccessor.SunLightLevels
  commentId: P:Vintagestory.API.Common.IWorldAccessor.SunLightLevels
  id: SunLightLevels
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SunLightLevels
  nameWithType: IWorldAccessor.SunLightLevels
  fullName: Vintagestory.API.Common.IWorldAccessor.SunLightLevels
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The currently configured sun light brightness levels
  example: []
  syntax:
    content: float[] SunLightLevels { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: ReadOnly Property SunLightLevels As Single()
  overload: Vintagestory.API.Common.IWorldAccessor.SunLightLevels*
- uid: Vintagestory.API.Common.IWorldAccessor.SeaLevel
  commentId: P:Vintagestory.API.Common.IWorldAccessor.SeaLevel
  id: SeaLevel
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SeaLevel
  nameWithType: IWorldAccessor.SeaLevel
  fullName: Vintagestory.API.Common.IWorldAccessor.SeaLevel
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The currently configured sea level (y-coordinate)
  example: []
  syntax:
    content: int SeaLevel { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property SeaLevel As Integer
  overload: Vintagestory.API.Common.IWorldAccessor.SeaLevel*
- uid: Vintagestory.API.Common.IWorldAccessor.Seed
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Seed
  id: Seed
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Seed
  nameWithType: IWorldAccessor.Seed
  fullName: Vintagestory.API.Common.IWorldAccessor.Seed
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The world seed. Accessible on the server and the client
  example: []
  syntax:
    content: int Seed { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Seed As Integer
  overload: Vintagestory.API.Common.IWorldAccessor.Seed*
- uid: Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier
  commentId: P:Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier
  id: SavegameIdentifier
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SavegameIdentifier
  nameWithType: IWorldAccessor.SavegameIdentifier
  fullName: Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: A globally unique identifier for this savegame
  example: []
  syntax:
    content: string SavegameIdentifier { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SavegameIdentifier As String
  overload: Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier*
- uid: Vintagestory.API.Common.IWorldAccessor.SunBrightness
  commentId: P:Vintagestory.API.Common.IWorldAccessor.SunBrightness
  id: SunBrightness
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SunBrightness
  nameWithType: IWorldAccessor.SunBrightness
  fullName: Vintagestory.API.Common.IWorldAccessor.SunBrightness
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The currently configured max sun light level
  example: []
  syntax:
    content: int SunBrightness { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property SunBrightness As Integer
  overload: Vintagestory.API.Common.IWorldAccessor.SunBrightness*
- uid: Vintagestory.API.Common.IWorldAccessor.EntityDebugMode
  commentId: P:Vintagestory.API.Common.IWorldAccessor.EntityDebugMode
  id: EntityDebugMode
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: EntityDebugMode
  nameWithType: IWorldAccessor.EntityDebugMode
  fullName: Vintagestory.API.Common.IWorldAccessor.EntityDebugMode
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Whether the current side (client/server) is in entity debug mode
  example: []
  syntax:
    content: bool EntityDebugMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property EntityDebugMode As Boolean
  overload: Vintagestory.API.Common.IWorldAccessor.EntityDebugMode*
- uid: Vintagestory.API.Common.IWorldAccessor.AssetManager
  commentId: P:Vintagestory.API.Common.IWorldAccessor.AssetManager
  id: AssetManager
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: AssetManager
  nameWithType: IWorldAccessor.AssetManager
  fullName: Vintagestory.API.Common.IWorldAccessor.AssetManager
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Loaded game assets
  example: []
  syntax:
    content: IAssetManager AssetManager { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IAssetManager
    content.vb: ReadOnly Property AssetManager As IAssetManager
  overload: Vintagestory.API.Common.IWorldAccessor.AssetManager*
- uid: Vintagestory.API.Common.IWorldAccessor.Logger
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Logger
  id: Logger
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: IWorldAccessor.Logger
  fullName: Vintagestory.API.Common.IWorldAccessor.Logger
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Logging Utility
  example: []
  syntax:
    content: ILogger Logger { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.ILogger
    content.vb: ReadOnly Property Logger As ILogger
  overload: Vintagestory.API.Common.IWorldAccessor.Logger*
- uid: Vintagestory.API.Common.IWorldAccessor.Side
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Side
  id: Side
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Side
  nameWithType: IWorldAccessor.Side
  fullName: Vintagestory.API.Common.IWorldAccessor.Side
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The current side (client/server)
  example: []
  syntax:
    content: EnumAppSide Side { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.EnumAppSide
    content.vb: ReadOnly Property Side As EnumAppSide
  overload: Vintagestory.API.Common.IWorldAccessor.Side*
- uid: Vintagestory.API.Common.IWorldAccessor.BlockAccessor
  commentId: P:Vintagestory.API.Common.IWorldAccessor.BlockAccessor
  id: BlockAccessor
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: BlockAccessor
  nameWithType: IWorldAccessor.BlockAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor.BlockAccessor
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Access blocks and other world data from loaded chunks, fault tolerant
  example: []
  syntax:
    content: IBlockAccessor BlockAccessor { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IBlockAccessor
    content.vb: ReadOnly Property BlockAccessor As IBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.BlockAccessor*
- uid: Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor
  commentId: P:Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor
  id: BulkBlockAccessor
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: BulkBlockAccessor
  nameWithType: IWorldAccessor.BulkBlockAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Fault tolerant bulk block access to the worlds block data. Since this is a single bulk block access instance the cached data is shared for everything accessing this method, hence should only be accessed from the main thread and any changed comitted within the same game tick. You can however use the WorldManager api to get your own instance of a bulk block accessor
  example: []
  syntax:
    content: IBulkBlockAccessor BulkBlockAccessor { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IBulkBlockAccessor
    content.vb: ReadOnly Property BulkBlockAccessor As IBulkBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor*
- uid: Vintagestory.API.Common.IWorldAccessor.ClassRegistry
  commentId: P:Vintagestory.API.Common.IWorldAccessor.ClassRegistry
  id: ClassRegistry
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: ClassRegistry
  nameWithType: IWorldAccessor.ClassRegistry
  fullName: Vintagestory.API.Common.IWorldAccessor.ClassRegistry
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Interface to create instance of certain classes
  example: []
  syntax:
    content: IClassRegistryAPI ClassRegistry { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IClassRegistryAPI
    content.vb: ReadOnly Property ClassRegistry As IClassRegistryAPI
  overload: Vintagestory.API.Common.IWorldAccessor.ClassRegistry*
- uid: Vintagestory.API.Common.IWorldAccessor.Calendar
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Calendar
  id: Calendar
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Calendar
  nameWithType: IWorldAccessor.Calendar
  fullName: Vintagestory.API.Common.IWorldAccessor.Calendar
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Interface to access the game calendar. On the server side only available after run stage 'LoadGamePre' (before that it is null)
  example: []
  syntax:
    content: IGameCalendar Calendar { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IGameCalendar
    content.vb: ReadOnly Property Calendar As IGameCalendar
  overload: Vintagestory.API.Common.IWorldAccessor.Calendar*
- uid: Vintagestory.API.Common.IWorldAccessor.CollisionTester
  commentId: P:Vintagestory.API.Common.IWorldAccessor.CollisionTester
  id: CollisionTester
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: CollisionTester
  nameWithType: IWorldAccessor.CollisionTester
  fullName: Vintagestory.API.Common.IWorldAccessor.CollisionTester
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: For collision testing in the main thread
  example: []
  syntax:
    content: CollisionTester CollisionTester { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.CollisionTester
    content.vb: ReadOnly Property CollisionTester As CollisionTester
  overload: Vintagestory.API.Common.IWorldAccessor.CollisionTester*
- uid: Vintagestory.API.Common.IWorldAccessor.Rand
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Rand
  id: Rand
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Rand
  nameWithType: IWorldAccessor.Rand
  fullName: Vintagestory.API.Common.IWorldAccessor.Rand
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Just a random number generator. Makes use of ThreadLocal for thread safety.
  example: []
  syntax:
    content: Random Rand { get; }
    parameters: []
    return:
      type: System.Random
    content.vb: ReadOnly Property Rand As Random
  overload: Vintagestory.API.Common.IWorldAccessor.Rand*
- uid: Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds
  commentId: P:Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds
  id: ElapsedMilliseconds
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: ElapsedMilliseconds
  nameWithType: IWorldAccessor.ElapsedMilliseconds
  fullName: Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Amount of milliseconds ellapsed since startup
  example: []
  syntax:
    content: long ElapsedMilliseconds { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property ElapsedMilliseconds As Long
  overload: Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds*
- uid: Vintagestory.API.Common.IWorldAccessor.Collectibles
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Collectibles
  id: Collectibles
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Collectibles
  nameWithType: IWorldAccessor.Collectibles
  fullName: Vintagestory.API.Common.IWorldAccessor.Collectibles
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: List of all loaded blocks and items without placeholders
  example: []
  syntax:
    content: List<CollectibleObject> Collectibles { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.CollectibleObject}
    content.vb: ReadOnly Property Collectibles As List(Of CollectibleObject)
  overload: Vintagestory.API.Common.IWorldAccessor.Collectibles*
- uid: Vintagestory.API.Common.IWorldAccessor.Blocks
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Blocks
  id: Blocks
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Blocks
  nameWithType: IWorldAccessor.Blocks
  fullName: Vintagestory.API.Common.IWorldAccessor.Blocks
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: List of all loaded blocks. The array index is the block id. Some may be null or placeholders (then block.code is null). Client-side none are null, what was null return as air blocks.
  example: []
  syntax:
    content: IList<Block> Blocks { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Vintagestory.API.Common.Block}
    content.vb: ReadOnly Property Blocks As IList(Of Block)
  overload: Vintagestory.API.Common.IWorldAccessor.Blocks*
- uid: Vintagestory.API.Common.IWorldAccessor.Items
  commentId: P:Vintagestory.API.Common.IWorldAccessor.Items
  id: Items
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: IWorldAccessor.Items
  fullName: Vintagestory.API.Common.IWorldAccessor.Items
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: List of all loaded items. The array index is the item id. Some may be placeholders (then item.code is null).  Server-side, some may be null; client-side, a check for item == null is not necessary.
  example: []
  syntax:
    content: IList<Item> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Vintagestory.API.Common.Item}
    content.vb: ReadOnly Property Items As IList(Of Item)
  overload: Vintagestory.API.Common.IWorldAccessor.Items*
- uid: Vintagestory.API.Common.IWorldAccessor.EntityTypes
  commentId: P:Vintagestory.API.Common.IWorldAccessor.EntityTypes
  id: EntityTypes
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: EntityTypes
  nameWithType: IWorldAccessor.EntityTypes
  fullName: Vintagestory.API.Common.IWorldAccessor.EntityTypes
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: List of all loaded entity types.
  example: []
  syntax:
    content: List<EntityProperties> EntityTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.Entities.EntityProperties}
    content.vb: ReadOnly Property EntityTypes As List(Of EntityProperties)
  overload: Vintagestory.API.Common.IWorldAccessor.EntityTypes*
- uid: Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes
  commentId: P:Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes
  id: EntityTypeCodes
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: EntityTypeCodes
  nameWithType: IWorldAccessor.EntityTypeCodes
  fullName: Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: List of the codes of all loaded entity types, in the AssetLocation short string format (e.g. "creature" for entities with domain game:, "domain:creature" for entities with other domains)
  example: []
  syntax:
    content: List<string> EntityTypeCodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: ReadOnly Property EntityTypeCodes As List(Of String)
  overload: Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes*
- uid: Vintagestory.API.Common.IWorldAccessor.GridRecipes
  commentId: P:Vintagestory.API.Common.IWorldAccessor.GridRecipes
  id: GridRecipes
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GridRecipes
  nameWithType: IWorldAccessor.GridRecipes
  fullName: Vintagestory.API.Common.IWorldAccessor.GridRecipes
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: List of all loaded crafting recipes
  example: []
  syntax:
    content: List<GridRecipe> GridRecipes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.GridRecipe}
    content.vb: ReadOnly Property GridRecipes As List(Of GridRecipe)
  overload: Vintagestory.API.Common.IWorldAccessor.GridRecipes*
- uid: Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry(System.String)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry(System.String)
  id: GetRecipeRegistry(System.String)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetRecipeRegistry(string)
  nameWithType: IWorldAccessor.GetRecipeRegistry(string)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve a previously registered recipe registry
  example: []
  syntax:
    content: RecipeRegistryBase GetRecipeRegistry(string code)
    parameters:
    - id: code
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.Common.RecipeRegistryBase
      description: ''
    content.vb: Function GetRecipeRegistry(code As String) As RecipeRegistryBase
  overload: Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry*
  nameWithType.vb: IWorldAccessor.GetRecipeRegistry(String)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry(String)
  name.vb: GetRecipeRegistry(String)
- uid: Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange
  commentId: P:Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange
  id: DefaultEntityTrackingRange
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: DefaultEntityTrackingRange
  nameWithType: IWorldAccessor.DefaultEntityTrackingRange
  fullName: Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: The range in blocks within a client will receive regular updates for an entity
  example: []
  syntax:
    content: int DefaultEntityTrackingRange { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property DefaultEntityTrackingRange As Integer
  overload: Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange*
- uid: Vintagestory.API.Common.IWorldAccessor.GetItem(System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetItem(System.Int32)
  id: GetItem(System.Int32)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetItem(int)
  nameWithType: IWorldAccessor.GetItem(int)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetItem(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the item class from given item id
  example: []
  syntax:
    content: Item GetItem(int itemId)
    parameters:
    - id: itemId
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.Item
      description: ''
    content.vb: Function GetItem(itemId As Integer) As Item
  overload: Vintagestory.API.Common.IWorldAccessor.GetItem*
  nameWithType.vb: IWorldAccessor.GetItem(Integer)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetItem(Integer)
  name.vb: GetItem(Integer)
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlock(System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlock(System.Int32)
  id: GetBlock(System.Int32)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(int)
  nameWithType: IWorldAccessor.GetBlock(int)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlock(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the block class from given block id
  example: []
  syntax:
    content: Block GetBlock(int blockId)
    parameters:
    - id: blockId
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetBlock(blockId As Integer) As Block
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlock*
  nameWithType.vb: IWorldAccessor.GetBlock(Integer)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetBlock(Integer)
  name.vb: GetBlock(Integer)
- uid: Vintagestory.API.Common.IWorldAccessor.SearchBlocks(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SearchBlocks(Vintagestory.API.Common.AssetLocation)
  id: SearchBlocks(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SearchBlocks(AssetLocation)
  nameWithType: IWorldAccessor.SearchBlocks(AssetLocation)
  fullName: Vintagestory.API.Common.IWorldAccessor.SearchBlocks(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns all blocktypes matching given wildcard
  example: []
  syntax:
    content: Block[] SearchBlocks(AssetLocation wildcard)
    parameters:
    - id: wildcard
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: Vintagestory.API.Common.Block[]
      description: ''
    content.vb: Function SearchBlocks(wildcard As AssetLocation) As Block()
  overload: Vintagestory.API.Common.IWorldAccessor.SearchBlocks*
- uid: Vintagestory.API.Common.IWorldAccessor.SearchItems(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SearchItems(Vintagestory.API.Common.AssetLocation)
  id: SearchItems(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SearchItems(AssetLocation)
  nameWithType: IWorldAccessor.SearchItems(AssetLocation)
  fullName: Vintagestory.API.Common.IWorldAccessor.SearchItems(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns all item types matching given wildcard
  example: []
  syntax:
    content: Item[] SearchItems(AssetLocation wildcard)
    parameters:
    - id: wildcard
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: Vintagestory.API.Common.Item[]
      description: ''
    content.vb: Function SearchItems(wildcard As AssetLocation) As Item()
  overload: Vintagestory.API.Common.IWorldAccessor.SearchItems*
- uid: Vintagestory.API.Common.IWorldAccessor.GetItem(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetItem(Vintagestory.API.Common.AssetLocation)
  id: GetItem(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetItem(AssetLocation)
  nameWithType: IWorldAccessor.GetItem(AssetLocation)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetItem(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the item class from given item code. Will return null if the item does not exist.
  example: []
  syntax:
    content: Item GetItem(AssetLocation itemCode)
    parameters:
    - id: itemCode
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: Vintagestory.API.Common.Item
      description: ''
    content.vb: Function GetItem(itemCode As AssetLocation) As Item
  overload: Vintagestory.API.Common.IWorldAccessor.GetItem*
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  id: GetBlock(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(AssetLocation)
  nameWithType: IWorldAccessor.GetBlock(AssetLocation)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the block class from given block code. Will return null if the block does not exist. Logs a warning if block does not exist
  example: []
  syntax:
    content: Block GetBlock(AssetLocation blockCode)
    parameters:
    - id: blockCode
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetBlock(blockCode As AssetLocation) As Block
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlock*
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntityType(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetEntityType(Vintagestory.API.Common.AssetLocation)
  id: GetEntityType(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetEntityType(AssetLocation)
  nameWithType: IWorldAccessor.GetEntityType(AssetLocation)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntityType(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the entity class from given entity code. Will return null if the entity does not exist.
  example: []
  syntax:
    content: EntityProperties GetEntityType(AssetLocation entityCode)
    parameters:
    - id: entityCode
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.EntityProperties
      description: ''
    content.vb: Function GetEntityType(entityCode As AssetLocation) As EntityProperties
  overload: Vintagestory.API.Common.IWorldAccessor.GetEntityType*
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d)
  id: SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SpawnItemEntity(ItemStack, Vec3d, Vec3d)
  nameWithType: IWorldAccessor.SpawnItemEntity(ItemStack, Vec3d, Vec3d)
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3d)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Spawns a dropped itemstack at given position. Will immediately disappear if stacksize==0

    Returns the entity spawned (may be null!)
  example: []
  syntax:
    content: Entity SpawnItemEntity(ItemStack itemstack, Vec3d position, Vec3d velocity = null)
    parameters:
    - id: itemstack
      type: Vintagestory.API.Common.ItemStack
      description: ''
    - id: position
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: velocity
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.Entity
    content.vb: Function SpawnItemEntity(itemstack As ItemStack, position As Vec3d, velocity As Vec3d = Nothing) As Entity
  overload: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity*
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d)
  id: SpawnItemEntity(Vintagestory.API.Common.ItemStack,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SpawnItemEntity(ItemStack, BlockPos, Vec3d)
  nameWithType: IWorldAccessor.SpawnItemEntity(ItemStack, BlockPos, Vec3d)
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity(Vintagestory.API.Common.ItemStack, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Vec3d)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Spawns a dropped itemstack at given position. Will immediately disappear if stacksize==0

    Returns the entity spawned (may be null!)
  example: []
  syntax:
    content: Entity SpawnItemEntity(ItemStack itemstack, BlockPos pos, Vec3d velocity = null)
    parameters:
    - id: itemstack
      type: Vintagestory.API.Common.ItemStack
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
    - id: velocity
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.Entity
    content.vb: Function SpawnItemEntity(itemstack As ItemStack, pos As BlockPos, velocity As Vec3d = Nothing) As Entity
  overload: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity*
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnEntity(Vintagestory.API.Common.Entities.Entity)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SpawnEntity(Vintagestory.API.Common.Entities.Entity)
  id: SpawnEntity(Vintagestory.API.Common.Entities.Entity)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SpawnEntity(Entity)
  nameWithType: IWorldAccessor.SpawnEntity(Entity)
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnEntity(Vintagestory.API.Common.Entities.Entity)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Creates a new entity. It's the responsibility of the given Entity to call set it's EntityType.

    This should be done inside it's Initialize method before base.Initialize is called.
  example: []
  syntax:
    content: void SpawnEntity(Entity entity)
    parameters:
    - id: entity
      type: Vintagestory.API.Common.Entities.Entity
      description: ''
    content.vb: Sub SpawnEntity(entity As Entity)
  overload: Vintagestory.API.Common.IWorldAccessor.SpawnEntity*
- uid: Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk(Vintagestory.API.Common.Entities.Entity,System.Int64)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk(Vintagestory.API.Common.Entities.Entity,System.Int64)
  id: UpdateEntityChunk(Vintagestory.API.Common.Entities.Entity,System.Int64)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: UpdateEntityChunk(Entity, long)
  nameWithType: IWorldAccessor.UpdateEntityChunk(Entity, long)
  fullName: Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk(Vintagestory.API.Common.Entities.Entity, long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes an entity from its old chunk and adds it to the chunk with newChunkIndex3d
  example: []
  syntax:
    content: void UpdateEntityChunk(Entity entity, long newChunkIndex3d)
    parameters:
    - id: entity
      type: Vintagestory.API.Common.Entities.Entity
      description: ''
    - id: newChunkIndex3d
      type: System.Int64
      description: ''
    content.vb: Sub UpdateEntityChunk(entity As Entity, newChunkIndex3d As Long)
  overload: Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk*
  nameWithType.vb: IWorldAccessor.UpdateEntityChunk(Entity, Long)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk(Vintagestory.API.Common.Entities.Entity, Long)
  name.vb: UpdateEntityChunk(Entity, Long)
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  id: GetEntitiesAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetEntitiesAround(Vec3d, float, float, ActionConsumable<Entity>)
  nameWithType: IWorldAccessor.GetEntitiesAround(Vec3d, float, float, ActionConsumable<Entity>)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround(Vintagestory.API.MathTools.Vec3d, float, float, Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Entities.Entity>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve all entities within given range and given matcher method. If now matcher method is supplied, all entities are returned.
  example: []
  syntax:
    content: Entity[] GetEntitiesAround(Vec3d position, float horRange, float vertRange, ActionConsumable<Entity> matches = null)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: horRange
      type: System.Single
      description: ''
    - id: vertRange
      type: System.Single
      description: ''
    - id: matches
      type: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity}
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.Entity[]
      description: ''
    content.vb: Function GetEntitiesAround(position As Vec3d, horRange As Single, vertRange As Single, matches As ActionConsumable(Of Entity) = Nothing) As Entity()
  overload: Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround*
  nameWithType.vb: IWorldAccessor.GetEntitiesAround(Vec3d, Single, Single, ActionConsumable(Of Entity))
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround(Vintagestory.API.MathTools.Vec3d, Single, Single, Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Entities.Entity))
  name.vb: GetEntitiesAround(Vec3d, Single, Single, ActionConsumable(Of Entity))
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  id: GetEntitiesInsideCuboid(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetEntitiesInsideCuboid(BlockPos, BlockPos, ActionConsumable<Entity>)
  nameWithType: IWorldAccessor.GetEntitiesInsideCuboid(BlockPos, BlockPos, ActionConsumable<Entity>)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Entities.Entity>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve all entities within a cuboid bound by startPos and endPos. If now matcher method is supplied, all entities are returned.
  example: []
  syntax:
    content: Entity[] GetEntitiesInsideCuboid(BlockPos startPos, BlockPos endPos, ActionConsumable<Entity> matches = null)
    parameters:
    - id: startPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: endPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: matches
      type: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity}
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.Entity[]
      description: ''
    content.vb: Function GetEntitiesInsideCuboid(startPos As BlockPos, endPos As BlockPos, matches As ActionConsumable(Of Entity) = Nothing) As Entity()
  overload: Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid*
  nameWithType.vb: IWorldAccessor.GetEntitiesInsideCuboid(BlockPos, BlockPos, ActionConsumable(Of Entity))
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Entities.Entity))
  name.vb: GetEntitiesInsideCuboid(BlockPos, BlockPos, ActionConsumable(Of Entity))
- uid: Vintagestory.API.Common.IWorldAccessor.GetPlayersAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.IPlayer})
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetPlayersAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.IPlayer})
  id: GetPlayersAround(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.IPlayer})
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetPlayersAround(Vec3d, float, float, ActionConsumable<IPlayer>)
  nameWithType: IWorldAccessor.GetPlayersAround(Vec3d, float, float, ActionConsumable<IPlayer>)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetPlayersAround(Vintagestory.API.MathTools.Vec3d, float, float, Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.IPlayer>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve all players within given range and given matcher method. This method is faster than when using GetEntitiesAround with a matcher for players
  example: []
  syntax:
    content: IPlayer[] GetPlayersAround(Vec3d position, float horRange, float vertRange, ActionConsumable<IPlayer> matches = null)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: horRange
      type: System.Single
      description: ''
    - id: vertRange
      type: System.Single
      description: ''
    - id: matches
      type: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.IPlayer}
      description: ''
    return:
      type: Vintagestory.API.Common.IPlayer[]
      description: ''
    content.vb: Function GetPlayersAround(position As Vec3d, horRange As Single, vertRange As Single, matches As ActionConsumable(Of IPlayer) = Nothing) As IPlayer()
  overload: Vintagestory.API.Common.IWorldAccessor.GetPlayersAround*
  nameWithType.vb: IWorldAccessor.GetPlayersAround(Vec3d, Single, Single, ActionConsumable(Of IPlayer))
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetPlayersAround(Vintagestory.API.MathTools.Vec3d, Single, Single, Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.IPlayer))
  name.vb: GetPlayersAround(Vec3d, Single, Single, ActionConsumable(Of IPlayer))
- uid: Vintagestory.API.Common.IWorldAccessor.GetNearestEntity(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetNearestEntity(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  id: GetNearestEntity(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetNearestEntity(Vec3d, float, float, ActionConsumable<Entity>)
  nameWithType: IWorldAccessor.GetNearestEntity(Vec3d, float, float, ActionConsumable<Entity>)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetNearestEntity(Vintagestory.API.MathTools.Vec3d, float, float, Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Entities.Entity>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the nearest entity within given range and given matcher method
  example: []
  syntax:
    content: Entity GetNearestEntity(Vec3d position, float horRange, float vertRange, ActionConsumable<Entity> matches = null)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: horRange
      type: System.Single
      description: ''
    - id: vertRange
      type: System.Single
      description: ''
    - id: matches
      type: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity}
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.Entity
      description: ''
    content.vb: Function GetNearestEntity(position As Vec3d, horRange As Single, vertRange As Single, matches As ActionConsumable(Of Entity) = Nothing) As Entity
  overload: Vintagestory.API.Common.IWorldAccessor.GetNearestEntity*
  nameWithType.vb: IWorldAccessor.GetNearestEntity(Vec3d, Single, Single, ActionConsumable(Of Entity))
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetNearestEntity(Vintagestory.API.MathTools.Vec3d, Single, Single, Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Entities.Entity))
  name.vb: GetNearestEntity(Vec3d, Single, Single, ActionConsumable(Of Entity))
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntityById(System.Int64)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetEntityById(System.Int64)
  id: GetEntityById(System.Int64)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetEntityById(long)
  nameWithType: IWorldAccessor.GetEntityById(long)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntityById(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve an entity by its unique id, returns null if no such entity exists or hasn't been loaded
  example: []
  syntax:
    content: Entity GetEntityById(long entityId)
    parameters:
    - id: entityId
      type: System.Int64
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.Entity
      description: ''
    content.vb: Function GetEntityById(entityId As Long) As Entity
  overload: Vintagestory.API.Common.IWorldAccessor.GetEntityById*
  nameWithType.vb: IWorldAccessor.GetEntityById(Long)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetEntityById(Long)
  name.vb: GetEntityById(Long)
- uid: Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[],Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[],Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  id: GetIntersectingEntities(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Cuboidf[],Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity})
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetIntersectingEntities(BlockPos, Cuboidf[], ActionConsumable<Entity>)
  nameWithType: IWorldAccessor.GetIntersectingEntities(BlockPos, Cuboidf[], ActionConsumable<Entity>)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Cuboidf[], Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Entities.Entity>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves the first found entity that intersects any of the supplied collisionboxes offseted by basePos. This is a helper method for you to determine if you can place a block at given position. You can also implement it yourself with intersection testing and GetEntitiesAround()
  example: []
  syntax:
    content: Entity[] GetIntersectingEntities(BlockPos basePos, Cuboidf[] collisionBoxes, ActionConsumable<Entity> matches = null)
    parameters:
    - id: basePos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: collisionBoxes
      type: Vintagestory.API.MathTools.Cuboidf[]
      description: ''
    - id: matches
      type: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity}
      description: ''
    return:
      type: Vintagestory.API.Common.Entities.Entity[]
      description: ''
    content.vb: Function GetIntersectingEntities(basePos As BlockPos, collisionBoxes As Cuboidf(), matches As ActionConsumable(Of Entity) = Nothing) As Entity()
  overload: Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities*
  nameWithType.vb: IWorldAccessor.GetIntersectingEntities(BlockPos, Cuboidf(), ActionConsumable(Of Entity))
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Cuboidf(), Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Entities.Entity))
  name.vb: GetIntersectingEntities(BlockPos, Cuboidf(), ActionConsumable(Of Entity))
- uid: Vintagestory.API.Common.IWorldAccessor.NearestPlayer(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.NearestPlayer(System.Double,System.Double,System.Double)
  id: NearestPlayer(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: NearestPlayer(double, double, double)
  nameWithType: IWorldAccessor.NearestPlayer(double, double, double)
  fullName: Vintagestory.API.Common.IWorldAccessor.NearestPlayer(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Find the nearest player to the given position
  example: []
  syntax:
    content: IPlayer NearestPlayer(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
      description: x coordinate
    - id: y
      type: System.Double
      description: y coordinate
    - id: z
      type: System.Double
      description: z coordinate
    return:
      type: Vintagestory.API.Common.IPlayer
      description: ID of the nearest player
    content.vb: Function NearestPlayer(x As Double, y As Double, z As Double) As IPlayer
  overload: Vintagestory.API.Common.IWorldAccessor.NearestPlayer*
  nameWithType.vb: IWorldAccessor.NearestPlayer(Double, Double, Double)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.NearestPlayer(Double, Double, Double)
  name.vb: NearestPlayer(Double, Double, Double)
- uid: Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers
  commentId: P:Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers
  id: AllOnlinePlayers
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: AllOnlinePlayers
  nameWithType: IWorldAccessor.AllOnlinePlayers
  fullName: Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: 'Gets a list of all online players. Warning: Also returns currently connecting player whose player data may not have been fully initialized. Check for player.ConnectionState to avoid these.'
  example: []
  syntax:
    content: IPlayer[] AllOnlinePlayers { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IPlayer[]
      description: Array containing the IDs of online players
    content.vb: ReadOnly Property AllOnlinePlayers As IPlayer()
  overload: Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers*
- uid: Vintagestory.API.Common.IWorldAccessor.AllPlayers
  commentId: P:Vintagestory.API.Common.IWorldAccessor.AllPlayers
  id: AllPlayers
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: AllPlayers
  nameWithType: IWorldAccessor.AllPlayers
  fullName: Vintagestory.API.Common.IWorldAccessor.AllPlayers
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Gets a list of all players that connected to this server at least once while the server was running. When called client side you will receive the same as AllOnlinePlayers
  example: []
  syntax:
    content: IPlayer[] AllPlayers { get; }
    parameters: []
    return:
      type: Vintagestory.API.Common.IPlayer[]
      description: Array containing the IDs of online players
    content.vb: ReadOnly Property AllPlayers As IPlayer()
  overload: Vintagestory.API.Common.IWorldAccessor.AllPlayers*
- uid: Vintagestory.API.Common.IWorldAccessor.PlayerByUid(System.String)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlayerByUid(System.String)
  id: PlayerByUid(System.String)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlayerByUid(string)
  nameWithType: IWorldAccessor.PlayerByUid(string)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlayerByUid(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves the worldplayer data object of given player. When called server side the player does not need to be connected.
  example: []
  syntax:
    content: IPlayer PlayerByUid(string playerUid)
    parameters:
    - id: playerUid
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.Common.IPlayer
      description: ''
    content.vb: Function PlayerByUid(playerUid As String) As IPlayer
  overload: Vintagestory.API.Common.IWorldAccessor.PlayerByUid*
  nameWithType.vb: IWorldAccessor.PlayerByUid(String)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlayerByUid(String)
  name.vb: PlayerByUid(String)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  id: PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundAt(AssetLocation, double, double, double, IPlayer, bool, float, float)
  nameWithType: IWorldAccessor.PlaySoundAt(AssetLocation, double, double, double, IPlayer, bool, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, double, double, double, Vintagestory.API.Common.IPlayer, bool, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Plays given sound at given position.
  example: []
  syntax:
    content: void PlaySoundAt(AssetLocation location, double posx, double posy, double posz, IPlayer dualCallByPlayer = null, bool randomizePitch = true, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: The sound path, without sounds/ prefix or the .ogg ending
    - id: posx
      type: System.Double
      description: ''
    - id: posy
      type: System.Double
      description: ''
    - id: posz
      type: System.Double
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this the causing playerUID to prevent double playing. Essentially dualCall will play the sound on the client, and send it to all other players except source client
    - id: randomizePitch
      type: System.Boolean
      description: ''
    - id: range
      type: System.Single
      description: The range at which the gain will be attenuated to 1% of the supplied volume
    - id: volume
      type: System.Single
      description: ''
    content.vb: Sub PlaySoundAt(location As AssetLocation, posx As Double, posy As Double, posz As Double, dualCallByPlayer As IPlayer = Nothing, randomizePitch As Boolean = True, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  nameWithType.vb: IWorldAccessor.PlaySoundAt(AssetLocation, Double, Double, Double, IPlayer, Boolean, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Double, Double, Double, Vintagestory.API.Common.IPlayer, Boolean, Single, Single)
  name.vb: PlaySoundAt(AssetLocation, Double, Double, Double, IPlayer, Boolean, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.MathTools.BlockPos,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.MathTools.BlockPos,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  id: PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.MathTools.BlockPos,System.Double,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundAt(AssetLocation, BlockPos, double, IPlayer, bool, float, float)
  nameWithType: IWorldAccessor.PlaySoundAt(AssetLocation, BlockPos, double, IPlayer, bool, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.MathTools.BlockPos, double, Vintagestory.API.Common.IPlayer, bool, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Plays given sound at given position - dimension aware. Plays at the center of the BlockPos
  example: []
  syntax:
    content: void PlaySoundAt(AssetLocation location, BlockPos pos, double yOffsetFromCenter, IPlayer dualCallByPlayer = null, bool randomizePitch = true, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: The sound path, without sounds/ prefix or the .ogg ending
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: yOffsetFromCenter
      type: System.Double
      description: How much above or below the central Y position of the block to play
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this the causing playerUID to prevent double playing. Essentially dualCall will play the sound on the client, and send it to all other players except source client
    - id: randomizePitch
      type: System.Boolean
      description: ''
    - id: range
      type: System.Single
      description: The range at which the gain will be attenuated to 1% of the supplied volume
    - id: volume
      type: System.Single
      description: ''
    content.vb: Sub PlaySoundAt(location As AssetLocation, pos As BlockPos, yOffsetFromCenter As Double, dualCallByPlayer As IPlayer = Nothing, randomizePitch As Boolean = True, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  nameWithType.vb: IWorldAccessor.PlaySoundAt(AssetLocation, BlockPos, Double, IPlayer, Boolean, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.MathTools.BlockPos, Double, Vintagestory.API.Common.IPlayer, Boolean, Single, Single)
  name.vb: PlaySoundAt(AssetLocation, BlockPos, Double, IPlayer, Boolean, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  id: PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundAt(AssetLocation, Entity, IPlayer, bool, float, float)
  nameWithType: IWorldAccessor.PlaySoundAt(AssetLocation, Entity, IPlayer, bool, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.Entities.Entity, Vintagestory.API.Common.IPlayer, bool, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Plays given sound at given position.
  example: []
  syntax:
    content: void PlaySoundAt(AssetLocation location, Entity atEntity, IPlayer dualCallByPlayer = null, bool randomizePitch = true, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: The sound path, without sounds/ prefix or the .ogg ending
    - id: atEntity
      type: Vintagestory.API.Common.Entities.Entity
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this the causing playerUID to prevent double playing. Essentially dualCall will play the sound on the client, and send it to all other players except source client
    - id: randomizePitch
      type: System.Boolean
      description: ''
    - id: range
      type: System.Single
      description: The range at which the gain will be attenuated to 1% of the supplied volume
    - id: volume
      type: System.Single
      description: ''
    content.vb: Sub PlaySoundAt(location As AssetLocation, atEntity As Entity, dualCallByPlayer As IPlayer = Nothing, randomizePitch As Boolean = True, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  nameWithType.vb: IWorldAccessor.PlaySoundAt(AssetLocation, Entity, IPlayer, Boolean, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.Entities.Entity, Vintagestory.API.Common.IPlayer, Boolean, Single, Single)
  name.vb: PlaySoundAt(AssetLocation, Entity, IPlayer, Boolean, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  id: PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.Entities.Entity,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundAt(AssetLocation, Entity, IPlayer, float, float, float)
  nameWithType: IWorldAccessor.PlaySoundAt(AssetLocation, Entity, IPlayer, float, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.Entities.Entity, Vintagestory.API.Common.IPlayer, float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Plays given sound at given position.
  example: []
  syntax:
    content: void PlaySoundAt(AssetLocation location, Entity atEntity, IPlayer dualCallByPlayer, float pitch, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    - id: atEntity
      type: Vintagestory.API.Common.Entities.Entity
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: ''
    - id: pitch
      type: System.Single
      description: ''
    - id: range
      type: System.Single
      description: ''
    - id: volume
      type: System.Single
      description: ''
    content.vb: Sub PlaySoundAt(location As AssetLocation, atEntity As Entity, dualCallByPlayer As IPlayer, pitch As Single, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  nameWithType.vb: IWorldAccessor.PlaySoundAt(AssetLocation, Entity, IPlayer, Single, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.Entities.Entity, Vintagestory.API.Common.IPlayer, Single, Single, Single)
  name.vb: PlaySoundAt(AssetLocation, Entity, IPlayer, Single, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  id: PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundAt(AssetLocation, double, double, double, IPlayer, float, float, float)
  nameWithType: IWorldAccessor.PlaySoundAt(AssetLocation, double, double, double, IPlayer, float, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, double, double, double, Vintagestory.API.Common.IPlayer, float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Plays given sound at given position.
  example: []
  syntax:
    content: void PlaySoundAt(AssetLocation location, double posx, double posy, double posz, IPlayer dualCallByPlayer, float pitch, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    - id: posx
      type: System.Double
      description: ''
    - id: posy
      type: System.Double
      description: ''
    - id: posz
      type: System.Double
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: ''
    - id: pitch
      type: System.Single
      description: ''
    - id: range
      type: System.Single
      description: ''
    - id: volume
      type: System.Single
      description: ''
    content.vb: Sub PlaySoundAt(location As AssetLocation, posx As Double, posy As Double, posz As Double, dualCallByPlayer As IPlayer, pitch As Single, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  nameWithType.vb: IWorldAccessor.PlaySoundAt(AssetLocation, Double, Double, Double, IPlayer, Single, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Double, Double, Double, Vintagestory.API.Common.IPlayer, Single, Single, Single)
  name.vb: PlaySoundAt(AssetLocation, Double, Double, Double, IPlayer, Single, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,Vintagestory.API.Client.EnumSoundType,System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,Vintagestory.API.Client.EnumSoundType,System.Single,System.Single,System.Single)
  id: PlaySoundAt(Vintagestory.API.Common.AssetLocation,System.Double,System.Double,System.Double,Vintagestory.API.Common.IPlayer,Vintagestory.API.Client.EnumSoundType,System.Single,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundAt(AssetLocation, double, double, double, IPlayer, EnumSoundType, float, float, float)
  nameWithType: IWorldAccessor.PlaySoundAt(AssetLocation, double, double, double, IPlayer, EnumSoundType, float, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, double, double, double, Vintagestory.API.Common.IPlayer, Vintagestory.API.Client.EnumSoundType, float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: void PlaySoundAt(AssetLocation location, double posx, double posy, double posz, IPlayer dualCallByPlayer, EnumSoundType soundType, float pitch, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
    - id: posx
      type: System.Double
    - id: posy
      type: System.Double
    - id: posz
      type: System.Double
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
    - id: soundType
      type: Vintagestory.API.Client.EnumSoundType
    - id: pitch
      type: System.Single
    - id: range
      type: System.Single
    - id: volume
      type: System.Single
    content.vb: Sub PlaySoundAt(location As AssetLocation, posx As Double, posy As Double, posz As Double, dualCallByPlayer As IPlayer, soundType As EnumSoundType, pitch As Single, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  nameWithType.vb: IWorldAccessor.PlaySoundAt(AssetLocation, Double, Double, Double, IPlayer, EnumSoundType, Single, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Double, Double, Double, Vintagestory.API.Common.IPlayer, Vintagestory.API.Client.EnumSoundType, Single, Single, Single)
  name.vb: PlaySoundAt(AssetLocation, Double, Double, Double, IPlayer, EnumSoundType, Single, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  id: PlaySoundAt(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundAt(AssetLocation, IPlayer, IPlayer, bool, float, float)
  nameWithType: IWorldAccessor.PlaySoundAt(AssetLocation, IPlayer, IPlayer, bool, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IPlayer, Vintagestory.API.Common.IPlayer, bool, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Plays given sound at given player position.
  example: []
  syntax:
    content: void PlaySoundAt(AssetLocation location, IPlayer atPlayer, IPlayer dualCallByPlayer = null, bool randomizePitch = true, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: The sound path, without sounds/ prefix or the .ogg ending
    - id: atPlayer
      type: Vintagestory.API.Common.IPlayer
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this the causing playerUID to prevent double playing. Essentially dualCall will play the sound on the client, and send it to all other players except source client
    - id: randomizePitch
      type: System.Boolean
      description: ''
    - id: range
      type: System.Single
      description: The range at which the gain will be attenuated to 1% of the supplied volume
    - id: volume
      type: System.Single
      description: ''
    content.vb: Sub PlaySoundAt(location As AssetLocation, atPlayer As IPlayer, dualCallByPlayer As IPlayer = Nothing, randomizePitch As Boolean = True, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  nameWithType.vb: IWorldAccessor.PlaySoundAt(AssetLocation, IPlayer, IPlayer, Boolean, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IPlayer, Vintagestory.API.Common.IPlayer, Boolean, Single, Single)
  name.vb: PlaySoundAt(AssetLocation, IPlayer, IPlayer, Boolean, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  id: PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Boolean,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundFor(AssetLocation, IPlayer, bool, float, float)
  nameWithType: IWorldAccessor.PlaySoundFor(AssetLocation, IPlayer, bool, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IPlayer, bool, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Plays given sound only for given player. Useful when called server side, for the client side there is no difference over using PlaySoundAt or PlaySoundFor
  example: []
  syntax:
    content: void PlaySoundFor(AssetLocation location, IPlayer forPlayer, bool randomizePitch = true, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
      description: The sound path, without sounds/ prefix or the .ogg ending
    - id: forPlayer
      type: Vintagestory.API.Common.IPlayer
      description: ''
    - id: randomizePitch
      type: System.Boolean
      description: ''
    - id: range
      type: System.Single
      description: The range at which the gain will be attenuated to 1% of the supplied volume
    - id: volume
      type: System.Single
      description: ''
    content.vb: Sub PlaySoundFor(location As AssetLocation, forPlayer As IPlayer, randomizePitch As Boolean = True, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor*
  nameWithType.vb: IWorldAccessor.PlaySoundFor(AssetLocation, IPlayer, Boolean, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IPlayer, Boolean, Single, Single)
  name.vb: PlaySoundFor(AssetLocation, IPlayer, Boolean, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  id: PlaySoundFor(Vintagestory.API.Common.AssetLocation,Vintagestory.API.Common.IPlayer,System.Single,System.Single,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlaySoundFor(AssetLocation, IPlayer, float, float, float)
  nameWithType: IWorldAccessor.PlaySoundFor(AssetLocation, IPlayer, float, float, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IPlayer, float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: void PlaySoundFor(AssetLocation location, IPlayer forPlayer, float pitch, float range = 32, float volume = 1)
    parameters:
    - id: location
      type: Vintagestory.API.Common.AssetLocation
    - id: forPlayer
      type: Vintagestory.API.Common.IPlayer
    - id: pitch
      type: System.Single
    - id: range
      type: System.Single
    - id: volume
      type: System.Single
    content.vb: Sub PlaySoundFor(location As AssetLocation, forPlayer As IPlayer, pitch As Single, range As Single = 32, volume As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor*
  nameWithType.vb: IWorldAccessor.PlaySoundFor(AssetLocation, IPlayer, Single, Single, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor(Vintagestory.API.Common.AssetLocation, Vintagestory.API.Common.IPlayer, Single, Single, Single)
  name.vb: PlaySoundFor(AssetLocation, IPlayer, Single, Single, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnParticles(System.Single,System.Int32,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3f,Vintagestory.API.MathTools.Vec3f,System.Single,System.Single,System.Single,Vintagestory.API.Common.EnumParticleModel,Vintagestory.API.Common.IPlayer)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SpawnParticles(System.Single,System.Int32,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3f,Vintagestory.API.MathTools.Vec3f,System.Single,System.Single,System.Single,Vintagestory.API.Common.EnumParticleModel,Vintagestory.API.Common.IPlayer)
  id: SpawnParticles(System.Single,System.Int32,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3f,Vintagestory.API.MathTools.Vec3f,System.Single,System.Single,System.Single,Vintagestory.API.Common.EnumParticleModel,Vintagestory.API.Common.IPlayer)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SpawnParticles(float, int, Vec3d, Vec3d, Vec3f, Vec3f, float, float, float, EnumParticleModel, IPlayer)
  nameWithType: IWorldAccessor.SpawnParticles(float, int, Vec3d, Vec3d, Vec3f, Vec3f, float, float, float, EnumParticleModel, IPlayer)
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnParticles(float, int, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3f, Vintagestory.API.MathTools.Vec3f, float, float, float, Vintagestory.API.Common.EnumParticleModel, Vintagestory.API.Common.IPlayer)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Spawn a bunch of particles
  example: []
  syntax:
    content: void SpawnParticles(float quantity, int color, Vec3d minPos, Vec3d maxPos, Vec3f minVelocity, Vec3f maxVelocity, float lifeLength, float gravityEffect, float scale = 1, EnumParticleModel model = EnumParticleModel.Quad, IPlayer dualCallByPlayer = null)
    parameters:
    - id: quantity
      type: System.Single
      description: ''
    - id: color
      type: System.Int32
      description: ''
    - id: minPos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: maxPos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: minVelocity
      type: Vintagestory.API.MathTools.Vec3f
      description: ''
    - id: maxVelocity
      type: Vintagestory.API.MathTools.Vec3f
      description: ''
    - id: lifeLength
      type: System.Single
      description: ''
    - id: gravityEffect
      type: System.Single
      description: ''
    - id: scale
      type: System.Single
      description: ''
    - id: model
      type: Vintagestory.API.Common.EnumParticleModel
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this to the causing playerUID to prevent double spawning. Essentially dualCall will spawn the particles on the client, and send it to all other players except source client
    content.vb: Sub SpawnParticles(quantity As Single, color As Integer, minPos As Vec3d, maxPos As Vec3d, minVelocity As Vec3f, maxVelocity As Vec3f, lifeLength As Single, gravityEffect As Single, scale As Single = 1, model As EnumParticleModel = EnumParticleModel.Quad, dualCallByPlayer As IPlayer = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.SpawnParticles*
  nameWithType.vb: IWorldAccessor.SpawnParticles(Single, Integer, Vec3d, Vec3d, Vec3f, Vec3f, Single, Single, Single, EnumParticleModel, IPlayer)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.SpawnParticles(Single, Integer, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3f, Vintagestory.API.MathTools.Vec3f, Single, Single, Single, Vintagestory.API.Common.EnumParticleModel, Vintagestory.API.Common.IPlayer)
  name.vb: SpawnParticles(Single, Integer, Vec3d, Vec3d, Vec3f, Vec3f, Single, Single, Single, EnumParticleModel, IPlayer)
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnParticles(Vintagestory.API.Common.IParticlePropertiesProvider,Vintagestory.API.Common.IPlayer)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SpawnParticles(Vintagestory.API.Common.IParticlePropertiesProvider,Vintagestory.API.Common.IPlayer)
  id: SpawnParticles(Vintagestory.API.Common.IParticlePropertiesProvider,Vintagestory.API.Common.IPlayer)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SpawnParticles(IParticlePropertiesProvider, IPlayer)
  nameWithType: IWorldAccessor.SpawnParticles(IParticlePropertiesProvider, IPlayer)
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnParticles(Vintagestory.API.Common.IParticlePropertiesProvider, Vintagestory.API.Common.IPlayer)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Spawn a bunch of particles
  example: []
  syntax:
    content: void SpawnParticles(IParticlePropertiesProvider particlePropertiesProvider, IPlayer dualCallByPlayer = null)
    parameters:
    - id: particlePropertiesProvider
      type: Vintagestory.API.Common.IParticlePropertiesProvider
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this to the causing playerUID to prevent double spawning. Essentially dualCall will spawn the particles on the client, and send it to all other players except source client
    content.vb: Sub SpawnParticles(particlePropertiesProvider As IParticlePropertiesProvider, dualCallByPlayer As IPlayer = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.SpawnParticles*
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  id: SpawnCubeParticles(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.Vec3d,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SpawnCubeParticles(BlockPos, Vec3d, float, int, float, IPlayer, Vec3f)
  nameWithType: IWorldAccessor.SpawnCubeParticles(BlockPos, Vec3d, float, int, float, IPlayer, Vec3f)
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Vec3d, float, int, float, Vintagestory.API.Common.IPlayer, Vintagestory.API.MathTools.Vec3f)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Spawn a bunch of particles colored by the block at given position
  example: []
  syntax:
    content: void SpawnCubeParticles(BlockPos blockPos, Vec3d pos, float radius, int quantity, float scale = 1, IPlayer dualCallByPlayer = null, Vec3f velocity = null)
    parameters:
    - id: blockPos
      type: Vintagestory.API.MathTools.BlockPos
      description: The position of the block to take the color from
    - id: pos
      type: Vintagestory.API.MathTools.Vec3d
      description: The position where the particles should spawn
    - id: radius
      type: System.Single
      description: ''
    - id: quantity
      type: System.Int32
      description: ''
    - id: scale
      type: System.Single
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this to the causing playerUID to prevent double spawning. Essentially dualCall will spawn the particles on the client, and send it to all other players except source client
    - id: velocity
      type: Vintagestory.API.MathTools.Vec3f
      description: ''
    content.vb: Sub SpawnCubeParticles(blockPos As BlockPos, pos As Vec3d, radius As Single, quantity As Integer, scale As Single = 1, dualCallByPlayer As IPlayer = Nothing, velocity As Vec3f = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles*
  nameWithType.vb: IWorldAccessor.SpawnCubeParticles(BlockPos, Vec3d, Single, Integer, Single, IPlayer, Vec3f)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.Vec3d, Single, Integer, Single, Vintagestory.API.Common.IPlayer, Vintagestory.API.MathTools.Vec3f)
  name.vb: SpawnCubeParticles(BlockPos, Vec3d, Single, Integer, Single, IPlayer, Vec3f)
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.ItemStack,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.ItemStack,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  id: SpawnCubeParticles(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.ItemStack,System.Single,System.Int32,System.Single,Vintagestory.API.Common.IPlayer,Vintagestory.API.MathTools.Vec3f)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: SpawnCubeParticles(Vec3d, ItemStack, float, int, float, IPlayer, Vec3f)
  nameWithType: IWorldAccessor.SpawnCubeParticles(Vec3d, ItemStack, float, int, float, IPlayer, Vec3f)
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.Vec3d, Vintagestory.API.Common.ItemStack, float, int, float, Vintagestory.API.Common.IPlayer, Vintagestory.API.MathTools.Vec3f)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Spawn a bunch of particles colored by given itemstack
  example: []
  syntax:
    content: void SpawnCubeParticles(Vec3d pos, ItemStack item, float radius, int quantity, float scale = 1, IPlayer dualCallByPlayer = null, Vec3f velocity = null)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.Vec3d
      description: The position where the particles should spawn
    - id: item
      type: Vintagestory.API.Common.ItemStack
      description: ''
    - id: radius
      type: System.Single
      description: ''
    - id: quantity
      type: System.Int32
      description: ''
    - id: scale
      type: System.Single
      description: ''
    - id: dualCallByPlayer
      type: Vintagestory.API.Common.IPlayer
      description: If this call is made on client and on server, set this to the causing playerUID to prevent double spawning. Essentially dualCall will spawn the particles on the client, and send it to all other players except source client
    - id: velocity
      type: Vintagestory.API.MathTools.Vec3f
      description: ''
    content.vb: Sub SpawnCubeParticles(pos As Vec3d, item As ItemStack, radius As Single, quantity As Integer, scale As Single = 1, dualCallByPlayer As IPlayer = Nothing, velocity As Vec3f = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles*
  nameWithType.vb: IWorldAccessor.SpawnCubeParticles(Vec3d, ItemStack, Single, Integer, Single, IPlayer, Vec3f)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles(Vintagestory.API.MathTools.Vec3d, Vintagestory.API.Common.ItemStack, Single, Integer, Single, Vintagestory.API.Common.IPlayer, Vintagestory.API.MathTools.Vec3f)
  name.vb: SpawnCubeParticles(Vec3d, ItemStack, Single, Integer, Single, IPlayer, Vec3f)
- uid: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  id: RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RayTraceForSelection(Vec3d, Vec3d, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  nameWithType: IWorldAccessor.RayTraceForSelection(Vec3d, Vec3d, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  fullName: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3d, ref Vintagestory.API.Common.BlockSelection, ref Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Shoots out a virtual ray at between given positions and stops when the ray hits a block or entity selection box. The block/entity it struck first is then returned by reference.
  example: []
  syntax:
    content: void RayTraceForSelection(Vec3d fromPos, Vec3d toPos, ref BlockSelection blockSelection, ref EntitySelection entitySelection, BlockFilter bfilter = null, EntityFilter efilter = null)
    parameters:
    - id: fromPos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: toPos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: blockSelection
      type: Vintagestory.API.Common.BlockSelection
      description: ''
    - id: entitySelection
      type: Vintagestory.API.Common.EntitySelection
      description: ''
    - id: bfilter
      type: Vintagestory.API.MathTools.BlockFilter
      description: Can be used to ignore certain blocks. Return false to ignore
    - id: efilter
      type: Vintagestory.API.MathTools.EntityFilter
      description: Can be used to ignore certain entities. Return false to ignore
    content.vb: Sub RayTraceForSelection(fromPos As Vec3d, toPos As Vec3d, blockSelection As BlockSelection, entitySelection As EntitySelection, bfilter As BlockFilter = Nothing, efilter As EntityFilter = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection*
  nameWithType.vb: IWorldAccessor.RayTraceForSelection(Vec3d, Vec3d, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.Common.BlockSelection, Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  name.vb: RayTraceForSelection(Vec3d, Vec3d, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
- uid: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.IWorldIntersectionSupplier,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.IWorldIntersectionSupplier,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  id: RayTraceForSelection(Vintagestory.API.MathTools.IWorldIntersectionSupplier,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.MathTools.Vec3d,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RayTraceForSelection(IWorldIntersectionSupplier, Vec3d, Vec3d, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  nameWithType: IWorldAccessor.RayTraceForSelection(IWorldIntersectionSupplier, Vec3d, Vec3d, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  fullName: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.IWorldIntersectionSupplier, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3d, ref Vintagestory.API.Common.BlockSelection, ref Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Shoots out a virtual ray at between given positions and stops when the ray hits a block or entity intersection box supplied by given supplier. The block/entity it struck first is then returned by reference.
  example: []
  syntax:
    content: void RayTraceForSelection(IWorldIntersectionSupplier supplier, Vec3d fromPos, Vec3d toPos, ref BlockSelection blockSelection, ref EntitySelection entitySelection, BlockFilter bfilter = null, EntityFilter efilter = null)
    parameters:
    - id: supplier
      type: Vintagestory.API.MathTools.IWorldIntersectionSupplier
      description: ''
    - id: fromPos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: toPos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: blockSelection
      type: Vintagestory.API.Common.BlockSelection
      description: ''
    - id: entitySelection
      type: Vintagestory.API.Common.EntitySelection
      description: ''
    - id: bfilter
      type: Vintagestory.API.MathTools.BlockFilter
      description: Can be used to ignore certain blocks. Return false to ignore
    - id: efilter
      type: Vintagestory.API.MathTools.EntityFilter
      description: Can be used to ignore certain entities. Return false to ignore
    content.vb: Sub RayTraceForSelection(supplier As IWorldIntersectionSupplier, fromPos As Vec3d, toPos As Vec3d, blockSelection As BlockSelection, entitySelection As EntitySelection, bfilter As BlockFilter = Nothing, efilter As EntityFilter = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection*
  nameWithType.vb: IWorldAccessor.RayTraceForSelection(IWorldIntersectionSupplier, Vec3d, Vec3d, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.IWorldIntersectionSupplier, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.MathTools.Vec3d, Vintagestory.API.Common.BlockSelection, Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  name.vb: RayTraceForSelection(IWorldIntersectionSupplier, Vec3d, Vec3d, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
- uid: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,System.Single,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,System.Single,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  id: RayTraceForSelection(Vintagestory.API.MathTools.Vec3d,System.Single,System.Single,System.Single,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RayTraceForSelection(Vec3d, float, float, float, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  nameWithType: IWorldAccessor.RayTraceForSelection(Vec3d, float, float, float, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  fullName: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d, float, float, float, ref Vintagestory.API.Common.BlockSelection, ref Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Shoots out a virtual ray at given position and angle and stops when the ray hits a block or entity selection box. The block/entity it struck first is then returned by reference.
  example: []
  syntax:
    content: void RayTraceForSelection(Vec3d fromPos, float pitch, float yaw, float range, ref BlockSelection blockSelection, ref EntitySelection entitySelection, BlockFilter bfilter = null, EntityFilter efilter = null)
    parameters:
    - id: fromPos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    - id: pitch
      type: System.Single
      description: ''
    - id: yaw
      type: System.Single
      description: ''
    - id: range
      type: System.Single
      description: ''
    - id: blockSelection
      type: Vintagestory.API.Common.BlockSelection
      description: ''
    - id: entitySelection
      type: Vintagestory.API.Common.EntitySelection
      description: ''
    - id: bfilter
      type: Vintagestory.API.MathTools.BlockFilter
      description: Can be used to ignore certain blocks. Return false to ignore
    - id: efilter
      type: Vintagestory.API.MathTools.EntityFilter
      description: Can be used to ignore certain entities. Return false to ignore
    content.vb: Sub RayTraceForSelection(fromPos As Vec3d, pitch As Single, yaw As Single, range As Single, blockSelection As BlockSelection, entitySelection As EntitySelection, bfilter As BlockFilter = Nothing, efilter As EntityFilter = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection*
  nameWithType.vb: IWorldAccessor.RayTraceForSelection(Vec3d, Single, Single, Single, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Vec3d, Single, Single, Single, Vintagestory.API.Common.BlockSelection, Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  name.vb: RayTraceForSelection(Vec3d, Single, Single, Single, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
- uid: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Ray,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Ray,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  id: RayTraceForSelection(Vintagestory.API.MathTools.Ray,Vintagestory.API.Common.BlockSelection@,Vintagestory.API.Common.EntitySelection@,Vintagestory.API.MathTools.BlockFilter,Vintagestory.API.MathTools.EntityFilter)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RayTraceForSelection(Ray, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  nameWithType: IWorldAccessor.RayTraceForSelection(Ray, ref BlockSelection, ref EntitySelection, BlockFilter, EntityFilter)
  fullName: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Ray, ref Vintagestory.API.Common.BlockSelection, ref Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Shoots out a given ray and stops when the ray hits a block or entity selection box. The block/entity it struck first is then returned by reference.
  example: []
  syntax:
    content: void RayTraceForSelection(Ray ray, ref BlockSelection blockSelection, ref EntitySelection entitySelection, BlockFilter filter = null, EntityFilter efilter = null)
    parameters:
    - id: ray
      type: Vintagestory.API.MathTools.Ray
      description: ''
    - id: blockSelection
      type: Vintagestory.API.Common.BlockSelection
      description: ''
    - id: entitySelection
      type: Vintagestory.API.Common.EntitySelection
      description: ''
    - id: filter
      type: Vintagestory.API.MathTools.BlockFilter
      description: ''
    - id: efilter
      type: Vintagestory.API.MathTools.EntityFilter
      description: Can be used to ignore certain entities. Return false to ignore
    content.vb: Sub RayTraceForSelection(ray As Ray, blockSelection As BlockSelection, entitySelection As EntitySelection, filter As BlockFilter = Nothing, efilter As EntityFilter = Nothing)
  overload: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection*
  nameWithType.vb: IWorldAccessor.RayTraceForSelection(Ray, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection(Vintagestory.API.MathTools.Ray, Vintagestory.API.Common.BlockSelection, Vintagestory.API.Common.EntitySelection, Vintagestory.API.MathTools.BlockFilter, Vintagestory.API.MathTools.EntityFilter)
  name.vb: RayTraceForSelection(Ray, BlockSelection, EntitySelection, BlockFilter, EntityFilter)
- uid: Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener(System.Action{System.Single},System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener(System.Action{System.Single},System.Int32,System.Int32)
  id: RegisterGameTickListener(System.Action{System.Single},System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RegisterGameTickListener(Action<float>, int, int)
  nameWithType: IWorldAccessor.RegisterGameTickListener(Action<float>, int, int)
  fullName: Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener(System.Action<float>, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Calls given method after every given interval until unregistered. The engine may call your method slightly later since these event are handled only during fixed interval game ticks.
  example: []
  syntax:
    content: long RegisterGameTickListener(Action<float> onGameTick, int millisecondInterval, int initialDelayOffsetMs = 0)
    parameters:
    - id: onGameTick
      type: System.Action{System.Single}
      description: ''
    - id: millisecondInterval
      type: System.Int32
      description: ''
    - id: initialDelayOffsetMs
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: listenerId
    content.vb: Function RegisterGameTickListener(onGameTick As Action(Of Single), millisecondInterval As Integer, initialDelayOffsetMs As Integer = 0) As Long
  overload: Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener*
  nameWithType.vb: IWorldAccessor.RegisterGameTickListener(Action(Of Single), Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener(System.Action(Of Single), Integer, Integer)
  name.vb: RegisterGameTickListener(Action(Of Single), Integer, Integer)
- uid: Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener(System.Int64)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener(System.Int64)
  id: UnregisterGameTickListener(System.Int64)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: UnregisterGameTickListener(long)
  nameWithType: IWorldAccessor.UnregisterGameTickListener(long)
  fullName: Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes a game tick listener
  example: []
  syntax:
    content: void UnregisterGameTickListener(long listenerId)
    parameters:
    - id: listenerId
      type: System.Int64
      description: ''
    content.vb: Sub UnregisterGameTickListener(listenerId As Long)
  overload: Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener*
  nameWithType.vb: IWorldAccessor.UnregisterGameTickListener(Long)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener(Long)
  name.vb: UnregisterGameTickListener(Long)
- uid: Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action{System.Single},System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action{System.Single},System.Int32)
  id: RegisterCallback(System.Action{System.Single},System.Int32)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RegisterCallback(Action<float>, int)
  nameWithType: IWorldAccessor.RegisterCallback(Action<float>, int)
  fullName: Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action<float>, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Calls given method after supplied amount of milliseconds. The engine may call your method slightly later since these event are handled only during fixed interval game ticks.
  example: []
  syntax:
    content: long RegisterCallback(Action<float> OnTimePassed, int millisecondDelay)
    parameters:
    - id: OnTimePassed
      type: System.Action{System.Single}
      description: ''
    - id: millisecondDelay
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: listenerId
    content.vb: Function RegisterCallback(OnTimePassed As Action(Of Single), millisecondDelay As Integer) As Long
  overload: Vintagestory.API.Common.IWorldAccessor.RegisterCallback*
  nameWithType.vb: IWorldAccessor.RegisterCallback(Action(Of Single), Integer)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action(Of Single), Integer)
  name.vb: RegisterCallback(Action(Of Single), Integer)
- uid: Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: RegisterCallbackUnique(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RegisterCallbackUnique(Action<IWorldAccessor, BlockPos, float>, BlockPos, int)
  nameWithType: IWorldAccessor.RegisterCallbackUnique(Action<IWorldAccessor, BlockPos, float>, BlockPos, int)
  fullName: Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique(System.Action<Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, float>, Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Calls given method after supplied amount of milliseconds. The engine may call your method slightly later since these event are handled only during fixed interval game ticks.

    Ignores any subsequent registers for the same blockpos while a callback is still in the queue. Used e.g. for liquid physics to prevent unnecessary multiple updates
  example: []
  syntax:
    content: long RegisterCallbackUnique(Action<IWorldAccessor, BlockPos, float> OnGameTick, BlockPos pos, int millisecondInterval)
    parameters:
    - id: OnGameTick
      type: System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single}
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: millisecondInterval
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: listenerId
    content.vb: Function RegisterCallbackUnique(OnGameTick As Action(Of IWorldAccessor, BlockPos, Single), pos As BlockPos, millisecondInterval As Integer) As Long
  overload: Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique*
  nameWithType.vb: IWorldAccessor.RegisterCallbackUnique(Action(Of IWorldAccessor, BlockPos, Single), BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique(System.Action(Of Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, Single), Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: RegisterCallbackUnique(Action(Of IWorldAccessor, BlockPos, Single), BlockPos, Integer)
- uid: Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: RegisterCallback(System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single},Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: RegisterCallback(Action<IWorldAccessor, BlockPos, float>, BlockPos, int)
  nameWithType: IWorldAccessor.RegisterCallback(Action<IWorldAccessor, BlockPos, float>, BlockPos, int)
  fullName: Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action<Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, float>, Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Calls given method after supplied amount of milliseconds, lets you supply a block position to be passed to the method. The engine may call your method slightly later since these event are handled only during fixed interval game ticks.
  example: []
  syntax:
    content: long RegisterCallback(Action<IWorldAccessor, BlockPos, float> OnTimePassed, BlockPos pos, int millisecondDelay)
    parameters:
    - id: OnTimePassed
      type: System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single}
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: millisecondDelay
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: listenerId
    content.vb: Function RegisterCallback(OnTimePassed As Action(Of IWorldAccessor, BlockPos, Single), pos As BlockPos, millisecondDelay As Integer) As Long
  overload: Vintagestory.API.Common.IWorldAccessor.RegisterCallback*
  nameWithType.vb: IWorldAccessor.RegisterCallback(Action(Of IWorldAccessor, BlockPos, Single), BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.RegisterCallback(System.Action(Of Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, Single), Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: RegisterCallback(Action(Of IWorldAccessor, BlockPos, Single), BlockPos, Integer)
- uid: Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege(System.Int32,System.String)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege(System.Int32,System.String)
  id: PlayerHasPrivilege(System.Int32,System.String)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: PlayerHasPrivilege(int, string)
  nameWithType: IWorldAccessor.PlayerHasPrivilege(int, string)
  fullName: Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege(int, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns true if given client has a privilege. Always returns true on the client.
  example: []
  syntax:
    content: bool PlayerHasPrivilege(int clientid, string privilege)
    parameters:
    - id: clientid
      type: System.Int32
      description: ''
    - id: privilege
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function PlayerHasPrivilege(clientid As Integer, privilege As String) As Boolean
  overload: Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege*
  nameWithType.vb: IWorldAccessor.PlayerHasPrivilege(Integer, String)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege(Integer, String)
  name.vb: PlayerHasPrivilege(Integer, String)
- uid: Vintagestory.API.Common.IWorldAccessor.UnregisterCallback(System.Int64)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.UnregisterCallback(System.Int64)
  id: UnregisterCallback(System.Int64)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: UnregisterCallback(long)
  nameWithType: IWorldAccessor.UnregisterCallback(long)
  fullName: Vintagestory.API.Common.IWorldAccessor.UnregisterCallback(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes a delayed callback
  example: []
  syntax:
    content: void UnregisterCallback(long listenerId)
    parameters:
    - id: listenerId
      type: System.Int64
      description: ''
    content.vb: Sub UnregisterCallback(listenerId As Long)
  overload: Vintagestory.API.Common.IWorldAccessor.UnregisterCallback*
  nameWithType.vb: IWorldAccessor.UnregisterCallback(Long)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.UnregisterCallback(Long)
  name.vb: UnregisterCallback(Long)
- uid: Vintagestory.API.Common.IWorldAccessor.InteresectionTester
  commentId: P:Vintagestory.API.Common.IWorldAccessor.InteresectionTester
  id: InteresectionTester
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: InteresectionTester
  nameWithType: IWorldAccessor.InteresectionTester
  fullName: Vintagestory.API.Common.IWorldAccessor.InteresectionTester
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Utility for testing intersections. Only access from main thread.
  example: []
  syntax:
    content: AABBIntersectionTest InteresectionTester { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.AABBIntersectionTest
    content.vb: ReadOnly Property InteresectionTester As AABBIntersectionTest
  overload: Vintagestory.API.Common.IWorldAccessor.InteresectionTester*
- uid: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},System.Collections.Generic.List{System.Int32},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape,System.Single)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},System.Collections.Generic.List{System.Int32},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape,System.Single)
  id: HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},System.Collections.Generic.List{System.Int32},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape,System.Single)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: HighlightBlocks(IPlayer, int, List<BlockPos>, List<int>, EnumHighlightBlocksMode, EnumHighlightShape, float)
  nameWithType: IWorldAccessor.HighlightBlocks(IPlayer, int, List<BlockPos>, List<int>, EnumHighlightBlocksMode, EnumHighlightShape, float)
  fullName: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer, int, System.Collections.Generic.List<Vintagestory.API.MathTools.BlockPos>, System.Collections.Generic.List<int>, Vintagestory.API.Client.EnumHighlightBlocksMode, Vintagestory.API.Common.EnumHighlightShape, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Sends given player a list of block positions that should be highlighted
  example: []
  syntax:
    content: void HighlightBlocks(IPlayer player, int highlightSlotId, List<BlockPos> blocks, List<int> colors, EnumHighlightBlocksMode mode = EnumHighlightBlocksMode.Absolute, EnumHighlightShape shape = EnumHighlightShape.Arbitrary, float scale = 1)
    parameters:
    - id: player
      type: Vintagestory.API.Common.IPlayer
      description: ''
    - id: highlightSlotId
      type: System.Int32
      description: for multiple highlights use a different number
    - id: blocks
      type: System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos}
      description: ''
    - id: colors
      type: System.Collections.Generic.List{System.Int32}
      description: ''
    - id: mode
      type: Vintagestory.API.Client.EnumHighlightBlocksMode
      description: ''
    - id: shape
      type: Vintagestory.API.Common.EnumHighlightShape
      description: ''
    - id: scale
      type: System.Single
      description: ''
    content.vb: Sub HighlightBlocks(player As IPlayer, highlightSlotId As Integer, blocks As List(Of BlockPos), colors As List(Of Integer), mode As EnumHighlightBlocksMode = EnumHighlightBlocksMode.Absolute, shape As EnumHighlightShape = EnumHighlightShape.Arbitrary, scale As Single = 1)
  overload: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks*
  nameWithType.vb: IWorldAccessor.HighlightBlocks(IPlayer, Integer, List(Of BlockPos), List(Of Integer), EnumHighlightBlocksMode, EnumHighlightShape, Single)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer, Integer, System.Collections.Generic.List(Of Vintagestory.API.MathTools.BlockPos), System.Collections.Generic.List(Of Integer), Vintagestory.API.Client.EnumHighlightBlocksMode, Vintagestory.API.Common.EnumHighlightShape, Single)
  name.vb: HighlightBlocks(IPlayer, Integer, List(Of BlockPos), List(Of Integer), EnumHighlightBlocksMode, EnumHighlightShape, Single)
- uid: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape)
  id: HighlightBlocks(Vintagestory.API.Common.IPlayer,System.Int32,System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos},Vintagestory.API.Client.EnumHighlightBlocksMode,Vintagestory.API.Common.EnumHighlightShape)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: HighlightBlocks(IPlayer, int, List<BlockPos>, EnumHighlightBlocksMode, EnumHighlightShape)
  nameWithType: IWorldAccessor.HighlightBlocks(IPlayer, int, List<BlockPos>, EnumHighlightBlocksMode, EnumHighlightShape)
  fullName: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer, int, System.Collections.Generic.List<Vintagestory.API.MathTools.BlockPos>, Vintagestory.API.Client.EnumHighlightBlocksMode, Vintagestory.API.Common.EnumHighlightShape)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Sends given player a list of block positions that should be highlighted (using a default color)
  example: []
  syntax:
    content: void HighlightBlocks(IPlayer player, int highlightSlotId, List<BlockPos> blocks, EnumHighlightBlocksMode mode = EnumHighlightBlocksMode.Absolute, EnumHighlightShape shape = EnumHighlightShape.Arbitrary)
    parameters:
    - id: player
      type: Vintagestory.API.Common.IPlayer
      description: ''
    - id: highlightSlotId
      type: System.Int32
      description: for multiple highlights use a different number
    - id: blocks
      type: System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos}
      description: ''
    - id: mode
      type: Vintagestory.API.Client.EnumHighlightBlocksMode
      description: ''
    - id: shape
      type: Vintagestory.API.Common.EnumHighlightShape
      description: When arbitrary, the blocks list represents the blocks to be highlighted. When Cube the blocks list should contain 2 positions for start and end
    content.vb: Sub HighlightBlocks(player As IPlayer, highlightSlotId As Integer, blocks As List(Of BlockPos), mode As EnumHighlightBlocksMode = EnumHighlightBlocksMode.Absolute, shape As EnumHighlightShape = EnumHighlightShape.Arbitrary)
  overload: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks*
  nameWithType.vb: IWorldAccessor.HighlightBlocks(IPlayer, Integer, List(Of BlockPos), EnumHighlightBlocksMode, EnumHighlightShape)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks(Vintagestory.API.Common.IPlayer, Integer, System.Collections.Generic.List(Of Vintagestory.API.MathTools.BlockPos), Vintagestory.API.Client.EnumHighlightBlocksMode, Vintagestory.API.Common.EnumHighlightShape)
  name.vb: HighlightBlocks(IPlayer, Integer, List(Of BlockPos), EnumHighlightBlocksMode, EnumHighlightShape)
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: GetBlockAccessor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlockAccessor(bool, bool, bool, bool)
  nameWithType: IWorldAccessor.GetBlockAccessor(bool, bool, bool, bool)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor(bool, bool, bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve a customized interface to access blocks in the loaded game world.
  example: []
  syntax:
    content: IBlockAccessor GetBlockAccessor(bool synchronize, bool relight, bool strict, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after a call to SetBlock and the light values changed by that
    - id: strict
      type: System.Boolean
      description: Log an error message if GetBlock/SetBlock was called to an unloaded chunk
    - id: debug
      type: System.Boolean
      description: If strict, crashes the server if a unloaded chunk was crashed, prints an exception and exports a png image of the current loaded chunks
    return:
      type: Vintagestory.API.Common.IBlockAccessor
      description: ''
    content.vb: Function GetBlockAccessor(synchronize As Boolean, relight As Boolean, strict As Boolean, debug As Boolean = False) As IBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor*
  nameWithType.vb: IWorldAccessor.GetBlockAccessor(Boolean, Boolean, Boolean, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor(Boolean, Boolean, Boolean, Boolean)
  name.vb: GetBlockAccessor(Boolean, Boolean, Boolean, Boolean)
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  id: GetBlockAccessorBulkUpdate(System.Boolean,System.Boolean,System.Boolean)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlockAccessorBulkUpdate(bool, bool, bool)
  nameWithType: IWorldAccessor.GetBlockAccessorBulkUpdate(bool, bool, bool)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate(bool, bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve a customized interface to access blocks in the loaded game world. Does not to relight/sync on a SetBlock until Commit() is called. On commit all touched blocks are relit/synced at once. This method should be used when setting many blocks (e.g. tree generation, explosion, etc.).
  example: []
  syntax:
    content: IBulkBlockAccessor GetBlockAccessorBulkUpdate(bool synchronize, bool relight, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after the a call to SetBlock and the light values changed by that
    - id: debug
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.IBulkBlockAccessor
      description: ''
    content.vb: Function GetBlockAccessorBulkUpdate(synchronize As Boolean, relight As Boolean, debug As Boolean = False) As IBulkBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate*
  nameWithType.vb: IWorldAccessor.GetBlockAccessorBulkUpdate(Boolean, Boolean, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate(Boolean, Boolean, Boolean)
  name.vb: GetBlockAccessorBulkUpdate(Boolean, Boolean, Boolean)
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate(System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate(System.Boolean,System.Boolean)
  id: GetBlockAccessorBulkMinimalUpdate(System.Boolean,System.Boolean)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlockAccessorBulkMinimalUpdate(bool, bool)
  nameWithType: IWorldAccessor.GetBlockAccessorBulkMinimalUpdate(bool, bool)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate(bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve a customized interface to access blocks in the loaded game world. Does not relight. On commit all touched blocks are updated at once. This method is currently used for the snow accumulation system
  example: []
  syntax:
    content: IBulkBlockAccessor GetBlockAccessorBulkMinimalUpdate(bool synchronize, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: ''
    - id: debug
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.IBulkBlockAccessor
      description: ''
    content.vb: Function GetBlockAccessorBulkMinimalUpdate(synchronize As Boolean, debug As Boolean = False) As IBulkBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate*
  nameWithType.vb: IWorldAccessor.GetBlockAccessorBulkMinimalUpdate(Boolean, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate(Boolean, Boolean)
  name.vb: GetBlockAccessorBulkMinimalUpdate(Boolean, Boolean)
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading(System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading(System.Boolean,System.Boolean)
  id: GetBlockAccessorMapChunkLoading(System.Boolean,System.Boolean)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlockAccessorMapChunkLoading(bool, bool)
  nameWithType: IWorldAccessor.GetBlockAccessorMapChunkLoading(bool, bool)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading(bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve a special Bulk blockaccessor which can have the chunks it accesses directly provided to it from a loading mapchunk. On commit all touched blocks are updated at once. This method is currently used for the snow accumulation system
  example: []
  syntax:
    content: IBulkBlockAccessor GetBlockAccessorMapChunkLoading(bool synchronize, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
    - id: debug
      type: System.Boolean
    return:
      type: Vintagestory.API.Common.IBulkBlockAccessor
    content.vb: Function GetBlockAccessorMapChunkLoading(synchronize As Boolean, debug As Boolean = False) As IBulkBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading*
  nameWithType.vb: IWorldAccessor.GetBlockAccessorMapChunkLoading(Boolean, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading(Boolean, Boolean)
  name.vb: GetBlockAccessorMapChunkLoading(Boolean, Boolean)
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  id: GetBlockAccessorRevertable(System.Boolean,System.Boolean,System.Boolean)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlockAccessorRevertable(bool, bool, bool)
  nameWithType: IWorldAccessor.GetBlockAccessorRevertable(bool, bool, bool)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable(bool, bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Same as GetBlockAccessorBulkUpdate, additionally, each Commit() stores the previous state and you can perform undo/redo operations on these.
  example: []
  syntax:
    content: IBlockAccessorRevertable GetBlockAccessorRevertable(bool synchronize, bool relight, bool debug = false)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after a call to SetBlock and the light values changed by that
    - id: debug
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.IBlockAccessorRevertable
      description: ''
    content.vb: Function GetBlockAccessorRevertable(synchronize As Boolean, relight As Boolean, debug As Boolean = False) As IBlockAccessorRevertable
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable*
  nameWithType.vb: IWorldAccessor.GetBlockAccessorRevertable(Boolean, Boolean, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable(Boolean, Boolean, Boolean)
  name.vb: GetBlockAccessorRevertable(Boolean, Boolean, Boolean)
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  id: GetBlockAccessorPrefetch(System.Boolean,System.Boolean)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetBlockAccessorPrefetch(bool, bool)
  nameWithType: IWorldAccessor.GetBlockAccessorPrefetch(bool, bool)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch(bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Same as GetBlockAccessor but you have to call PrefetchBlocks() before using GetBlock(). It pre-loads all blocks in given area resulting in faster GetBlock() access
  example: []
  syntax:
    content: IBlockAccessorPrefetch GetBlockAccessorPrefetch(bool synchronize, bool relight)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: Whether or not a call to Setblock should send the update also to all connected clients
    - id: relight
      type: System.Boolean
      description: Whether or not to relight the chunk after a call to SetBlock and the light values changed by that
    return:
      type: Vintagestory.API.Common.IBlockAccessorPrefetch
      description: ''
    content.vb: Function GetBlockAccessorPrefetch(synchronize As Boolean, relight As Boolean) As IBlockAccessorPrefetch
  overload: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch*
  nameWithType.vb: IWorldAccessor.GetBlockAccessorPrefetch(Boolean, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch(Boolean, Boolean)
  name.vb: GetBlockAccessorPrefetch(Boolean, Boolean)
- uid: Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor(System.Boolean,System.Boolean)
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor(System.Boolean,System.Boolean)
  id: GetCachingBlockAccessor(System.Boolean,System.Boolean)
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetCachingBlockAccessor(bool, bool)
  nameWithType: IWorldAccessor.GetCachingBlockAccessor(bool, bool)
  fullName: Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor(bool, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Same as the normal block accessor but remembers the previous chunk that was accessed. This can give you a 10-50% performance boosts when you scan many blocks in tight loops

    DONT FORGET: Call .Begin() before getting/setting in a tight loop. Not calling it can cause the game to crash
  example: []
  syntax:
    content: ICachingBlockAccessor GetCachingBlockAccessor(bool synchronize, bool relight)
    parameters:
    - id: synchronize
      type: System.Boolean
      description: ''
    - id: relight
      type: System.Boolean
      description: ''
    return:
      type: Vintagestory.API.Common.ICachingBlockAccessor
      description: ''
    content.vb: Function GetCachingBlockAccessor(synchronize As Boolean, relight As Boolean) As ICachingBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor*
  nameWithType.vb: IWorldAccessor.GetCachingBlockAccessor(Boolean, Boolean)
  fullName.vb: Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor(Boolean, Boolean)
  name.vb: GetCachingBlockAccessor(Boolean, Boolean)
- uid: Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor
  commentId: M:Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor
  id: GetLockFreeBlockAccessor
  parent: Vintagestory.API.Common.IWorldAccessor
  langs:
  - csharp
  - vb
  name: GetLockFreeBlockAccessor()
  nameWithType: IWorldAccessor.GetLockFreeBlockAccessor()
  fullName: Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: This block accessor is *read only* and does not use lock() or chunk.Unpack() in order to make it very fast. This comes at the cost of sometimes reading invalid data (block id = 0) when the chunk is packed or being packed.
  example: []
  syntax:
    content: IBlockAccessor GetLockFreeBlockAccessor()
    return:
      type: Vintagestory.API.Common.IBlockAccessor
      description: ''
    content.vb: Function GetLockFreeBlockAccessor() As IBlockAccessor
  overload: Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor*
references:
- uid: Vintagestory.API.Common
  commentId: N:Vintagestory.API.Common
  href: Vintagestory.html
  name: Vintagestory.API.Common
  nameWithType: Vintagestory.API.Common
  fullName: Vintagestory.API.Common
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: Vintagestory.API.Common.IWorldAccessor.Config*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Config
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Config
  name: Config
  nameWithType: IWorldAccessor.Config
  fullName: Vintagestory.API.Common.IWorldAccessor.Config
- uid: Vintagestory.API.Datastructures.ITreeAttribute
  commentId: T:Vintagestory.API.Datastructures.ITreeAttribute
  parent: Vintagestory.API.Datastructures
  href: Vintagestory.API.Datastructures.ITreeAttribute.html
  name: ITreeAttribute
  nameWithType: ITreeAttribute
  fullName: Vintagestory.API.Datastructures.ITreeAttribute
- uid: Vintagestory.API.Datastructures
  commentId: N:Vintagestory.API.Datastructures
  href: Vintagestory.html
  name: Vintagestory.API.Datastructures
  nameWithType: Vintagestory.API.Datastructures
  fullName: Vintagestory.API.Datastructures
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Datastructures
    name: Datastructures
    href: Vintagestory.API.Datastructures.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Datastructures
    name: Datastructures
    href: Vintagestory.API.Datastructures.html
- uid: Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_DefaultSpawnPosition
  name: DefaultSpawnPosition
  nameWithType: IWorldAccessor.DefaultSpawnPosition
  fullName: Vintagestory.API.Common.IWorldAccessor.DefaultSpawnPosition
- uid: Vintagestory.API.Common.Entities.EntityPos
  commentId: T:Vintagestory.API.Common.Entities.EntityPos
  parent: Vintagestory.API.Common.Entities
  href: Vintagestory.API.Common.Entities.EntityPos.html
  name: EntityPos
  nameWithType: EntityPos
  fullName: Vintagestory.API.Common.Entities.EntityPos
- uid: Vintagestory.API.Common.Entities
  commentId: N:Vintagestory.API.Common.Entities
  href: Vintagestory.html
  name: Vintagestory.API.Common.Entities
  nameWithType: Vintagestory.API.Common.Entities
  fullName: Vintagestory.API.Common.Entities
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  - name: .
  - uid: Vintagestory.API.Common.Entities
    name: Entities
    href: Vintagestory.API.Common.Entities.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  - name: .
  - uid: Vintagestory.API.Common.Entities
    name: Entities
    href: Vintagestory.API.Common.Entities.html
- uid: Vintagestory.API.Common.IWorldAccessor.FrameProfiler*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.FrameProfiler
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_FrameProfiler
  name: FrameProfiler
  nameWithType: IWorldAccessor.FrameProfiler
  fullName: Vintagestory.API.Common.IWorldAccessor.FrameProfiler
- uid: Vintagestory.API.Common.FrameProfilerUtil
  commentId: T:Vintagestory.API.Common.FrameProfilerUtil
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.FrameProfilerUtil.html
  name: FrameProfilerUtil
  nameWithType: FrameProfilerUtil
  fullName: Vintagestory.API.Common.FrameProfilerUtil
- uid: Vintagestory.API.Common.IWorldAccessor.Api*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Api
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Api
  name: Api
  nameWithType: IWorldAccessor.Api
  fullName: Vintagestory.API.Common.IWorldAccessor.Api
- uid: Vintagestory.API.Common.ICoreAPI
  commentId: T:Vintagestory.API.Common.ICoreAPI
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ICoreAPI.html
  name: ICoreAPI
  nameWithType: ICoreAPI
  fullName: Vintagestory.API.Common.ICoreAPI
- uid: Vintagestory.API.Common.IWorldAccessor.ChunkProvider*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.ChunkProvider
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_ChunkProvider
  name: ChunkProvider
  nameWithType: IWorldAccessor.ChunkProvider
  fullName: Vintagestory.API.Common.IWorldAccessor.ChunkProvider
- uid: Vintagestory.API.Server.IChunkProvider
  commentId: T:Vintagestory.API.Server.IChunkProvider
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.IChunkProvider.html
  name: IChunkProvider
  nameWithType: IChunkProvider
  fullName: Vintagestory.API.Server.IChunkProvider
- uid: Vintagestory.API.Server
  commentId: N:Vintagestory.API.Server
  href: Vintagestory.html
  name: Vintagestory.API.Server
  nameWithType: Vintagestory.API.Server
  fullName: Vintagestory.API.Server
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
- uid: Vintagestory.API.Common.IWorldAccessor.Claims*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Claims
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Claims
  name: Claims
  nameWithType: IWorldAccessor.Claims
  fullName: Vintagestory.API.Common.IWorldAccessor.Claims
- uid: Vintagestory.API.Common.ILandClaimAPI
  commentId: T:Vintagestory.API.Common.ILandClaimAPI
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ILandClaimAPI.html
  name: ILandClaimAPI
  nameWithType: ILandClaimAPI
  fullName: Vintagestory.API.Common.ILandClaimAPI
- uid: Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_LoadedChunkIndices
  name: LoadedChunkIndices
  nameWithType: IWorldAccessor.LoadedChunkIndices
  fullName: Vintagestory.API.Common.IWorldAccessor.LoadedChunkIndices
- uid: System.Int64[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long[]
  nameWithType: long[]
  fullName: long[]
  nameWithType.vb: Long()
  fullName.vb: Long()
  name.vb: Long()
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_LoadedMapChunkIndices
  name: LoadedMapChunkIndices
  nameWithType: IWorldAccessor.LoadedMapChunkIndices
  fullName: Vintagestory.API.Common.IWorldAccessor.LoadedMapChunkIndices
- uid: Vintagestory.API.Common.IWorldAccessor.BlockLightLevels*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.BlockLightLevels
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_BlockLightLevels
  name: BlockLightLevels
  nameWithType: IWorldAccessor.BlockLightLevels
  fullName: Vintagestory.API.Common.IWorldAccessor.BlockLightLevels
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.SunLightLevels*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SunLightLevels
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SunLightLevels
  name: SunLightLevels
  nameWithType: IWorldAccessor.SunLightLevels
  fullName: Vintagestory.API.Common.IWorldAccessor.SunLightLevels
- uid: Vintagestory.API.Common.IWorldAccessor.SeaLevel*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SeaLevel
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SeaLevel
  name: SeaLevel
  nameWithType: IWorldAccessor.SeaLevel
  fullName: Vintagestory.API.Common.IWorldAccessor.SeaLevel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Common.IWorldAccessor.Seed*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Seed
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Seed
  name: Seed
  nameWithType: IWorldAccessor.Seed
  fullName: Vintagestory.API.Common.IWorldAccessor.Seed
- uid: Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SavegameIdentifier
  name: SavegameIdentifier
  nameWithType: IWorldAccessor.SavegameIdentifier
  fullName: Vintagestory.API.Common.IWorldAccessor.SavegameIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Vintagestory.API.Common.IWorldAccessor.SunBrightness*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SunBrightness
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SunBrightness
  name: SunBrightness
  nameWithType: IWorldAccessor.SunBrightness
  fullName: Vintagestory.API.Common.IWorldAccessor.SunBrightness
- uid: Vintagestory.API.Common.IWorldAccessor.EntityDebugMode*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.EntityDebugMode
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_EntityDebugMode
  name: EntityDebugMode
  nameWithType: IWorldAccessor.EntityDebugMode
  fullName: Vintagestory.API.Common.IWorldAccessor.EntityDebugMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Vintagestory.API.Common.IWorldAccessor.AssetManager*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.AssetManager
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_AssetManager
  name: AssetManager
  nameWithType: IWorldAccessor.AssetManager
  fullName: Vintagestory.API.Common.IWorldAccessor.AssetManager
- uid: Vintagestory.API.Common.IAssetManager
  commentId: T:Vintagestory.API.Common.IAssetManager
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IAssetManager.html
  name: IAssetManager
  nameWithType: IAssetManager
  fullName: Vintagestory.API.Common.IAssetManager
- uid: Vintagestory.API.Common.IWorldAccessor.Logger*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Logger
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Logger
  name: Logger
  nameWithType: IWorldAccessor.Logger
  fullName: Vintagestory.API.Common.IWorldAccessor.Logger
- uid: Vintagestory.API.Common.ILogger
  commentId: T:Vintagestory.API.Common.ILogger
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: Vintagestory.API.Common.ILogger
- uid: Vintagestory.API.Common.IWorldAccessor.Side*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Side
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Side
  name: Side
  nameWithType: IWorldAccessor.Side
  fullName: Vintagestory.API.Common.IWorldAccessor.Side
- uid: Vintagestory.API.Common.EnumAppSide
  commentId: T:Vintagestory.API.Common.EnumAppSide
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.EnumAppSide.html
  name: EnumAppSide
  nameWithType: EnumAppSide
  fullName: Vintagestory.API.Common.EnumAppSide
- uid: Vintagestory.API.Common.IWorldAccessor.BlockAccessor*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.BlockAccessor
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_BlockAccessor
  name: BlockAccessor
  nameWithType: IWorldAccessor.BlockAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor.BlockAccessor
- uid: Vintagestory.API.Common.IBlockAccessor
  commentId: T:Vintagestory.API.Common.IBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessor.html
  name: IBlockAccessor
  nameWithType: IBlockAccessor
  fullName: Vintagestory.API.Common.IBlockAccessor
- uid: Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_BulkBlockAccessor
  name: BulkBlockAccessor
  nameWithType: IWorldAccessor.BulkBlockAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor.BulkBlockAccessor
- uid: Vintagestory.API.Common.IBulkBlockAccessor
  commentId: T:Vintagestory.API.Common.IBulkBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBulkBlockAccessor.html
  name: IBulkBlockAccessor
  nameWithType: IBulkBlockAccessor
  fullName: Vintagestory.API.Common.IBulkBlockAccessor
- uid: Vintagestory.API.Common.IWorldAccessor.ClassRegistry*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.ClassRegistry
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_ClassRegistry
  name: ClassRegistry
  nameWithType: IWorldAccessor.ClassRegistry
  fullName: Vintagestory.API.Common.IWorldAccessor.ClassRegistry
- uid: Vintagestory.API.Common.IClassRegistryAPI
  commentId: T:Vintagestory.API.Common.IClassRegistryAPI
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IClassRegistryAPI.html
  name: IClassRegistryAPI
  nameWithType: IClassRegistryAPI
  fullName: Vintagestory.API.Common.IClassRegistryAPI
- uid: Vintagestory.API.Common.IWorldAccessor.Calendar*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Calendar
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Calendar
  name: Calendar
  nameWithType: IWorldAccessor.Calendar
  fullName: Vintagestory.API.Common.IWorldAccessor.Calendar
- uid: Vintagestory.API.Common.IGameCalendar
  commentId: T:Vintagestory.API.Common.IGameCalendar
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IGameCalendar.html
  name: IGameCalendar
  nameWithType: IGameCalendar
  fullName: Vintagestory.API.Common.IGameCalendar
- uid: Vintagestory.API.Common.IWorldAccessor.CollisionTester*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.CollisionTester
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_CollisionTester
  name: CollisionTester
  nameWithType: IWorldAccessor.CollisionTester
  fullName: Vintagestory.API.Common.IWorldAccessor.CollisionTester
- uid: Vintagestory.API.MathTools.CollisionTester
  commentId: T:Vintagestory.API.MathTools.CollisionTester
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.CollisionTester.html
  name: CollisionTester
  nameWithType: CollisionTester
  fullName: Vintagestory.API.MathTools.CollisionTester
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: Vintagestory.API.Common.IWorldAccessor.Rand*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Rand
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Rand
  name: Rand
  nameWithType: IWorldAccessor.Rand
  fullName: Vintagestory.API.Common.IWorldAccessor.Rand
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_ElapsedMilliseconds
  name: ElapsedMilliseconds
  nameWithType: IWorldAccessor.ElapsedMilliseconds
  fullName: Vintagestory.API.Common.IWorldAccessor.ElapsedMilliseconds
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Vintagestory.API.Common.IWorldAccessor.Collectibles*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Collectibles
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Collectibles
  name: Collectibles
  nameWithType: IWorldAccessor.Collectibles
  fullName: Vintagestory.API.Common.IWorldAccessor.Collectibles
- uid: System.Collections.Generic.List{Vintagestory.API.Common.CollectibleObject}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.Common.CollectibleObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CollectibleObject>
  nameWithType: List<CollectibleObject>
  fullName: System.Collections.Generic.List<Vintagestory.API.Common.CollectibleObject>
  nameWithType.vb: List(Of CollectibleObject)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.Common.CollectibleObject)
  name.vb: List(Of CollectibleObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.Common.CollectibleObject
    name: CollectibleObject
    href: Vintagestory.API.Common.CollectibleObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.CollectibleObject
    name: CollectibleObject
    href: Vintagestory.API.Common.CollectibleObject.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Common.IWorldAccessor.Blocks*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Blocks
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Blocks
  name: Blocks
  nameWithType: IWorldAccessor.Blocks
  fullName: Vintagestory.API.Common.IWorldAccessor.Blocks
- uid: System.Collections.Generic.IList{Vintagestory.API.Common.Block}
  commentId: T:System.Collections.Generic.IList{Vintagestory.API.Common.Block}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Block>
  nameWithType: IList<Block>
  fullName: System.Collections.Generic.IList<Vintagestory.API.Common.Block>
  nameWithType.vb: IList(Of Block)
  fullName.vb: System.Collections.Generic.IList(Of Vintagestory.API.Common.Block)
  name.vb: IList(Of Block)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.Items*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.Items
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_Items
  name: Items
  nameWithType: IWorldAccessor.Items
  fullName: Vintagestory.API.Common.IWorldAccessor.Items
- uid: System.Collections.Generic.IList{Vintagestory.API.Common.Item}
  commentId: T:System.Collections.Generic.IList{Vintagestory.API.Common.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Item>
  nameWithType: IList<Item>
  fullName: System.Collections.Generic.IList<Vintagestory.API.Common.Item>
  nameWithType.vb: IList(Of Item)
  fullName.vb: System.Collections.Generic.IList(Of Vintagestory.API.Common.Item)
  name.vb: IList(Of Item)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Vintagestory.API.Common.Item
    name: Item
    href: Vintagestory.API.Common.Item.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.Item
    name: Item
    href: Vintagestory.API.Common.Item.html
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.EntityTypes*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.EntityTypes
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_EntityTypes
  name: EntityTypes
  nameWithType: IWorldAccessor.EntityTypes
  fullName: Vintagestory.API.Common.IWorldAccessor.EntityTypes
- uid: System.Collections.Generic.List{Vintagestory.API.Common.Entities.EntityProperties}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.Common.Entities.EntityProperties}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EntityProperties>
  nameWithType: List<EntityProperties>
  fullName: System.Collections.Generic.List<Vintagestory.API.Common.Entities.EntityProperties>
  nameWithType.vb: List(Of EntityProperties)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.Common.Entities.EntityProperties)
  name.vb: List(Of EntityProperties)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.Common.Entities.EntityProperties
    name: EntityProperties
    href: Vintagestory.API.Common.Entities.EntityProperties.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.Entities.EntityProperties
    name: EntityProperties
    href: Vintagestory.API.Common.Entities.EntityProperties.html
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_EntityTypeCodes
  name: EntityTypeCodes
  nameWithType: IWorldAccessor.EntityTypeCodes
  fullName: Vintagestory.API.Common.IWorldAccessor.EntityTypeCodes
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.GridRecipes*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GridRecipes
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GridRecipes
  name: GridRecipes
  nameWithType: IWorldAccessor.GridRecipes
  fullName: Vintagestory.API.Common.IWorldAccessor.GridRecipes
- uid: System.Collections.Generic.List{Vintagestory.API.Common.GridRecipe}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.Common.GridRecipe}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GridRecipe>
  nameWithType: List<GridRecipe>
  fullName: System.Collections.Generic.List<Vintagestory.API.Common.GridRecipe>
  nameWithType.vb: List(Of GridRecipe)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.Common.GridRecipe)
  name.vb: List(Of GridRecipe)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.Common.GridRecipe
    name: GridRecipe
    href: Vintagestory.API.Common.GridRecipe.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.GridRecipe
    name: GridRecipe
    href: Vintagestory.API.Common.GridRecipe.html
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetRecipeRegistry_System_String_
  name: GetRecipeRegistry
  nameWithType: IWorldAccessor.GetRecipeRegistry
  fullName: Vintagestory.API.Common.IWorldAccessor.GetRecipeRegistry
- uid: Vintagestory.API.Common.RecipeRegistryBase
  commentId: T:Vintagestory.API.Common.RecipeRegistryBase
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.RecipeRegistryBase.html
  name: RecipeRegistryBase
  nameWithType: RecipeRegistryBase
  fullName: Vintagestory.API.Common.RecipeRegistryBase
- uid: Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_DefaultEntityTrackingRange
  name: DefaultEntityTrackingRange
  nameWithType: IWorldAccessor.DefaultEntityTrackingRange
  fullName: Vintagestory.API.Common.IWorldAccessor.DefaultEntityTrackingRange
- uid: Vintagestory.API.Common.IWorldAccessor.GetItem*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetItem
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetItem_System_Int32_
  name: GetItem
  nameWithType: IWorldAccessor.GetItem
  fullName: Vintagestory.API.Common.IWorldAccessor.GetItem
- uid: Vintagestory.API.Common.Item
  commentId: T:Vintagestory.API.Common.Item
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.Item.html
  name: Item
  nameWithType: Item
  fullName: Vintagestory.API.Common.Item
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlock*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetBlock
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetBlock_System_Int32_
  name: GetBlock
  nameWithType: IWorldAccessor.GetBlock
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlock
- uid: Vintagestory.API.Common.Block
  commentId: T:Vintagestory.API.Common.Block
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.Block.html
  name: Block
  nameWithType: Block
  fullName: Vintagestory.API.Common.Block
- uid: Vintagestory.API.Common.IWorldAccessor.SearchBlocks*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SearchBlocks
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SearchBlocks_Vintagestory_API_Common_AssetLocation_
  name: SearchBlocks
  nameWithType: IWorldAccessor.SearchBlocks
  fullName: Vintagestory.API.Common.IWorldAccessor.SearchBlocks
- uid: Vintagestory.API.Common.AssetLocation
  commentId: T:Vintagestory.API.Common.AssetLocation
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.AssetLocation.html
  name: AssetLocation
  nameWithType: AssetLocation
  fullName: Vintagestory.API.Common.AssetLocation
- uid: Vintagestory.API.Common.Block[]
  isExternal: true
  href: Vintagestory.API.Common.Block.html
  name: Block[]
  nameWithType: Block[]
  fullName: Vintagestory.API.Common.Block[]
  nameWithType.vb: Block()
  fullName.vb: Vintagestory.API.Common.Block()
  name.vb: Block()
  spec.csharp:
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.SearchItems*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SearchItems
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SearchItems_Vintagestory_API_Common_AssetLocation_
  name: SearchItems
  nameWithType: IWorldAccessor.SearchItems
  fullName: Vintagestory.API.Common.IWorldAccessor.SearchItems
- uid: Vintagestory.API.Common.Item[]
  isExternal: true
  href: Vintagestory.API.Common.Item.html
  name: Item[]
  nameWithType: Item[]
  fullName: Vintagestory.API.Common.Item[]
  nameWithType.vb: Item()
  fullName.vb: Vintagestory.API.Common.Item()
  name.vb: Item()
  spec.csharp:
  - uid: Vintagestory.API.Common.Item
    name: Item
    href: Vintagestory.API.Common.Item.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.Item
    name: Item
    href: Vintagestory.API.Common.Item.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntityType*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetEntityType
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetEntityType_Vintagestory_API_Common_AssetLocation_
  name: GetEntityType
  nameWithType: IWorldAccessor.GetEntityType
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntityType
- uid: Vintagestory.API.Common.Entities.EntityProperties
  commentId: T:Vintagestory.API.Common.Entities.EntityProperties
  parent: Vintagestory.API.Common.Entities
  href: Vintagestory.API.Common.Entities.EntityProperties.html
  name: EntityProperties
  nameWithType: EntityProperties
  fullName: Vintagestory.API.Common.Entities.EntityProperties
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SpawnItemEntity_Vintagestory_API_Common_ItemStack_Vintagestory_API_MathTools_Vec3d_Vintagestory_API_MathTools_Vec3d_
  name: SpawnItemEntity
  nameWithType: IWorldAccessor.SpawnItemEntity
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnItemEntity
- uid: Vintagestory.API.Common.ItemStack
  commentId: T:Vintagestory.API.Common.ItemStack
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ItemStack.html
  name: ItemStack
  nameWithType: ItemStack
  fullName: Vintagestory.API.Common.ItemStack
- uid: Vintagestory.API.MathTools.Vec3d
  commentId: T:Vintagestory.API.MathTools.Vec3d
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3d.html
  name: Vec3d
  nameWithType: Vec3d
  fullName: Vintagestory.API.MathTools.Vec3d
- uid: Vintagestory.API.Common.Entities.Entity
  commentId: T:Vintagestory.API.Common.Entities.Entity
  parent: Vintagestory.API.Common.Entities
  href: Vintagestory.API.Common.Entities.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: Vintagestory.API.Common.Entities.Entity
- uid: Vintagestory.API.MathTools.BlockPos
  commentId: T:Vintagestory.API.MathTools.BlockPos
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockPos.html
  name: BlockPos
  nameWithType: BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnEntity*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SpawnEntity
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SpawnEntity_Vintagestory_API_Common_Entities_Entity_
  name: SpawnEntity
  nameWithType: IWorldAccessor.SpawnEntity
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnEntity
- uid: Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_UpdateEntityChunk_Vintagestory_API_Common_Entities_Entity_System_Int64_
  name: UpdateEntityChunk
  nameWithType: IWorldAccessor.UpdateEntityChunk
  fullName: Vintagestory.API.Common.IWorldAccessor.UpdateEntityChunk
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetEntitiesAround_Vintagestory_API_MathTools_Vec3d_System_Single_System_Single_Vintagestory_API_Common_ActionConsumable_Vintagestory_API_Common_Entities_Entity__
  name: GetEntitiesAround
  nameWithType: IWorldAccessor.GetEntitiesAround
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntitiesAround
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity}
  commentId: T:Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Entities.Entity}
  parent: Vintagestory.API.Common
  definition: Vintagestory.API.Common.ActionConsumable`1
  href: Vintagestory.API.Common.ActionConsumable-1.html
  name: ActionConsumable<Entity>
  nameWithType: ActionConsumable<Entity>
  fullName: Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Entities.Entity>
  nameWithType.vb: ActionConsumable(Of Entity)
  fullName.vb: Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Entities.Entity)
  name.vb: ActionConsumable(Of Entity)
  spec.csharp:
  - uid: Vintagestory.API.Common.ActionConsumable`1
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-1.html
  - name: <
  - uid: Vintagestory.API.Common.Entities.Entity
    name: Entity
    href: Vintagestory.API.Common.Entities.Entity.html
  - name: '>'
  spec.vb:
  - uid: Vintagestory.API.Common.ActionConsumable`1
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.Entities.Entity
    name: Entity
    href: Vintagestory.API.Common.Entities.Entity.html
  - name: )
- uid: Vintagestory.API.Common.Entities.Entity[]
  isExternal: true
  href: Vintagestory.API.Common.Entities.Entity.html
  name: Entity[]
  nameWithType: Entity[]
  fullName: Vintagestory.API.Common.Entities.Entity[]
  nameWithType.vb: Entity()
  fullName.vb: Vintagestory.API.Common.Entities.Entity()
  name.vb: Entity()
  spec.csharp:
  - uid: Vintagestory.API.Common.Entities.Entity
    name: Entity
    href: Vintagestory.API.Common.Entities.Entity.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.Entities.Entity
    name: Entity
    href: Vintagestory.API.Common.Entities.Entity.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.ActionConsumable`1
  commentId: T:Vintagestory.API.Common.ActionConsumable`1
  href: Vintagestory.API.Common.ActionConsumable-1.html
  name: ActionConsumable<T>
  nameWithType: ActionConsumable<T>
  fullName: Vintagestory.API.Common.ActionConsumable<T>
  nameWithType.vb: ActionConsumable(Of T)
  fullName.vb: Vintagestory.API.Common.ActionConsumable(Of T)
  name.vb: ActionConsumable(Of T)
  spec.csharp:
  - uid: Vintagestory.API.Common.ActionConsumable`1
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Vintagestory.API.Common.ActionConsumable`1
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetEntitiesInsideCuboid_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_ActionConsumable_Vintagestory_API_Common_Entities_Entity__
  name: GetEntitiesInsideCuboid
  nameWithType: IWorldAccessor.GetEntitiesInsideCuboid
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntitiesInsideCuboid
- uid: Vintagestory.API.Common.IWorldAccessor.GetPlayersAround*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetPlayersAround
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetPlayersAround_Vintagestory_API_MathTools_Vec3d_System_Single_System_Single_Vintagestory_API_Common_ActionConsumable_Vintagestory_API_Common_IPlayer__
  name: GetPlayersAround
  nameWithType: IWorldAccessor.GetPlayersAround
  fullName: Vintagestory.API.Common.IWorldAccessor.GetPlayersAround
- uid: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.IPlayer}
  commentId: T:Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.IPlayer}
  parent: Vintagestory.API.Common
  definition: Vintagestory.API.Common.ActionConsumable`1
  href: Vintagestory.API.Common.ActionConsumable-1.html
  name: ActionConsumable<IPlayer>
  nameWithType: ActionConsumable<IPlayer>
  fullName: Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.IPlayer>
  nameWithType.vb: ActionConsumable(Of IPlayer)
  fullName.vb: Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.IPlayer)
  name.vb: ActionConsumable(Of IPlayer)
  spec.csharp:
  - uid: Vintagestory.API.Common.ActionConsumable`1
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-1.html
  - name: <
  - uid: Vintagestory.API.Common.IPlayer
    name: IPlayer
    href: Vintagestory.API.Common.IPlayer.html
  - name: '>'
  spec.vb:
  - uid: Vintagestory.API.Common.ActionConsumable`1
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.IPlayer
    name: IPlayer
    href: Vintagestory.API.Common.IPlayer.html
  - name: )
- uid: Vintagestory.API.Common.IPlayer[]
  isExternal: true
  href: Vintagestory.API.Common.IPlayer.html
  name: IPlayer[]
  nameWithType: IPlayer[]
  fullName: Vintagestory.API.Common.IPlayer[]
  nameWithType.vb: IPlayer()
  fullName.vb: Vintagestory.API.Common.IPlayer()
  name.vb: IPlayer()
  spec.csharp:
  - uid: Vintagestory.API.Common.IPlayer
    name: IPlayer
    href: Vintagestory.API.Common.IPlayer.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.IPlayer
    name: IPlayer
    href: Vintagestory.API.Common.IPlayer.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.GetNearestEntity*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetNearestEntity
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetNearestEntity_Vintagestory_API_MathTools_Vec3d_System_Single_System_Single_Vintagestory_API_Common_ActionConsumable_Vintagestory_API_Common_Entities_Entity__
  name: GetNearestEntity
  nameWithType: IWorldAccessor.GetNearestEntity
  fullName: Vintagestory.API.Common.IWorldAccessor.GetNearestEntity
- uid: Vintagestory.API.Common.IWorldAccessor.GetEntityById*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetEntityById
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetEntityById_System_Int64_
  name: GetEntityById
  nameWithType: IWorldAccessor.GetEntityById
  fullName: Vintagestory.API.Common.IWorldAccessor.GetEntityById
- uid: Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetIntersectingEntities_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_Cuboidf___Vintagestory_API_Common_ActionConsumable_Vintagestory_API_Common_Entities_Entity__
  name: GetIntersectingEntities
  nameWithType: IWorldAccessor.GetIntersectingEntities
  fullName: Vintagestory.API.Common.IWorldAccessor.GetIntersectingEntities
- uid: Vintagestory.API.MathTools.Cuboidf[]
  isExternal: true
  href: Vintagestory.API.MathTools.Cuboidf.html
  name: Cuboidf[]
  nameWithType: Cuboidf[]
  fullName: Vintagestory.API.MathTools.Cuboidf[]
  nameWithType.vb: Cuboidf()
  fullName.vb: Vintagestory.API.MathTools.Cuboidf()
  name.vb: Cuboidf()
  spec.csharp:
  - uid: Vintagestory.API.MathTools.Cuboidf
    name: Cuboidf
    href: Vintagestory.API.MathTools.Cuboidf.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.MathTools.Cuboidf
    name: Cuboidf
    href: Vintagestory.API.MathTools.Cuboidf.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.NearestPlayer*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.NearestPlayer
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_NearestPlayer_System_Double_System_Double_System_Double_
  name: NearestPlayer
  nameWithType: IWorldAccessor.NearestPlayer
  fullName: Vintagestory.API.Common.IWorldAccessor.NearestPlayer
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Vintagestory.API.Common.IPlayer
  commentId: T:Vintagestory.API.Common.IPlayer
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IPlayer.html
  name: IPlayer
  nameWithType: IPlayer
  fullName: Vintagestory.API.Common.IPlayer
- uid: Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_AllOnlinePlayers
  name: AllOnlinePlayers
  nameWithType: IWorldAccessor.AllOnlinePlayers
  fullName: Vintagestory.API.Common.IWorldAccessor.AllOnlinePlayers
- uid: Vintagestory.API.Common.IWorldAccessor.AllPlayers*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.AllPlayers
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_AllPlayers
  name: AllPlayers
  nameWithType: IWorldAccessor.AllPlayers
  fullName: Vintagestory.API.Common.IWorldAccessor.AllPlayers
- uid: Vintagestory.API.Common.IWorldAccessor.PlayerByUid*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.PlayerByUid
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_PlayerByUid_System_String_
  name: PlayerByUid
  nameWithType: IWorldAccessor.PlayerByUid
  fullName: Vintagestory.API.Common.IWorldAccessor.PlayerByUid
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.PlaySoundAt
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_PlaySoundAt_Vintagestory_API_Common_AssetLocation_System_Double_System_Double_System_Double_Vintagestory_API_Common_IPlayer_System_Boolean_System_Single_System_Single_
  name: PlaySoundAt
  nameWithType: IWorldAccessor.PlaySoundAt
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundAt
- uid: Vintagestory.API.Client.EnumSoundType
  commentId: T:Vintagestory.API.Client.EnumSoundType
  parent: Vintagestory.API.Client
  href: Vintagestory.API.Client.EnumSoundType.html
  name: EnumSoundType
  nameWithType: EnumSoundType
  fullName: Vintagestory.API.Client.EnumSoundType
- uid: Vintagestory.API.Client
  commentId: N:Vintagestory.API.Client
  href: Vintagestory.html
  name: Vintagestory.API.Client
  nameWithType: Vintagestory.API.Client
  fullName: Vintagestory.API.Client
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Client
    name: Client
    href: Vintagestory.API.Client.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Client
    name: Client
    href: Vintagestory.API.Client.html
- uid: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.PlaySoundFor
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_PlaySoundFor_Vintagestory_API_Common_AssetLocation_Vintagestory_API_Common_IPlayer_System_Boolean_System_Single_System_Single_
  name: PlaySoundFor
  nameWithType: IWorldAccessor.PlaySoundFor
  fullName: Vintagestory.API.Common.IWorldAccessor.PlaySoundFor
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnParticles*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SpawnParticles
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SpawnParticles_System_Single_System_Int32_Vintagestory_API_MathTools_Vec3d_Vintagestory_API_MathTools_Vec3d_Vintagestory_API_MathTools_Vec3f_Vintagestory_API_MathTools_Vec3f_System_Single_System_Single_System_Single_Vintagestory_API_Common_EnumParticleModel_Vintagestory_API_Common_IPlayer_
  name: SpawnParticles
  nameWithType: IWorldAccessor.SpawnParticles
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnParticles
- uid: Vintagestory.API.MathTools.Vec3f
  commentId: T:Vintagestory.API.MathTools.Vec3f
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3f.html
  name: Vec3f
  nameWithType: Vec3f
  fullName: Vintagestory.API.MathTools.Vec3f
- uid: Vintagestory.API.Common.EnumParticleModel
  commentId: T:Vintagestory.API.Common.EnumParticleModel
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.EnumParticleModel.html
  name: EnumParticleModel
  nameWithType: EnumParticleModel
  fullName: Vintagestory.API.Common.EnumParticleModel
- uid: Vintagestory.API.Common.IParticlePropertiesProvider
  commentId: T:Vintagestory.API.Common.IParticlePropertiesProvider
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IParticlePropertiesProvider.html
  name: IParticlePropertiesProvider
  nameWithType: IParticlePropertiesProvider
  fullName: Vintagestory.API.Common.IParticlePropertiesProvider
- uid: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_SpawnCubeParticles_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_Vec3d_System_Single_System_Int32_System_Single_Vintagestory_API_Common_IPlayer_Vintagestory_API_MathTools_Vec3f_
  name: SpawnCubeParticles
  nameWithType: IWorldAccessor.SpawnCubeParticles
  fullName: Vintagestory.API.Common.IWorldAccessor.SpawnCubeParticles
- uid: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_RayTraceForSelection_Vintagestory_API_MathTools_Vec3d_Vintagestory_API_MathTools_Vec3d_Vintagestory_API_Common_BlockSelection__Vintagestory_API_Common_EntitySelection__Vintagestory_API_MathTools_BlockFilter_Vintagestory_API_MathTools_EntityFilter_
  name: RayTraceForSelection
  nameWithType: IWorldAccessor.RayTraceForSelection
  fullName: Vintagestory.API.Common.IWorldAccessor.RayTraceForSelection
- uid: Vintagestory.API.Common.BlockSelection
  commentId: T:Vintagestory.API.Common.BlockSelection
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.BlockSelection.html
  name: BlockSelection
  nameWithType: BlockSelection
  fullName: Vintagestory.API.Common.BlockSelection
- uid: Vintagestory.API.Common.EntitySelection
  commentId: T:Vintagestory.API.Common.EntitySelection
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.EntitySelection.html
  name: EntitySelection
  nameWithType: EntitySelection
  fullName: Vintagestory.API.Common.EntitySelection
- uid: Vintagestory.API.MathTools.BlockFilter
  commentId: T:Vintagestory.API.MathTools.BlockFilter
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockFilter.html
  name: BlockFilter
  nameWithType: BlockFilter
  fullName: Vintagestory.API.MathTools.BlockFilter
- uid: Vintagestory.API.MathTools.EntityFilter
  commentId: T:Vintagestory.API.MathTools.EntityFilter
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.EntityFilter.html
  name: EntityFilter
  nameWithType: EntityFilter
  fullName: Vintagestory.API.MathTools.EntityFilter
- uid: Vintagestory.API.MathTools.IWorldIntersectionSupplier
  commentId: T:Vintagestory.API.MathTools.IWorldIntersectionSupplier
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.IWorldIntersectionSupplier.html
  name: IWorldIntersectionSupplier
  nameWithType: IWorldIntersectionSupplier
  fullName: Vintagestory.API.MathTools.IWorldIntersectionSupplier
- uid: Vintagestory.API.MathTools.Ray
  commentId: T:Vintagestory.API.MathTools.Ray
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Ray.html
  name: Ray
  nameWithType: Ray
  fullName: Vintagestory.API.MathTools.Ray
- uid: Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_RegisterGameTickListener_System_Action_System_Single__System_Int32_System_Int32_
  name: RegisterGameTickListener
  nameWithType: IWorldAccessor.RegisterGameTickListener
  fullName: Vintagestory.API.Common.IWorldAccessor.RegisterGameTickListener
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<float>
  nameWithType: Action<float>
  fullName: System.Action<float>
  nameWithType.vb: Action(Of Single)
  fullName.vb: System.Action(Of Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_UnregisterGameTickListener_System_Int64_
  name: UnregisterGameTickListener
  nameWithType: IWorldAccessor.UnregisterGameTickListener
  fullName: Vintagestory.API.Common.IWorldAccessor.UnregisterGameTickListener
- uid: Vintagestory.API.Common.IWorldAccessor.RegisterCallback*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.RegisterCallback
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_RegisterCallback_System_Action_System_Single__System_Int32_
  name: RegisterCallback
  nameWithType: IWorldAccessor.RegisterCallback
  fullName: Vintagestory.API.Common.IWorldAccessor.RegisterCallback
- uid: Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_RegisterCallbackUnique_System_Action_Vintagestory_API_Common_IWorldAccessor_Vintagestory_API_MathTools_BlockPos_System_Single__Vintagestory_API_MathTools_BlockPos_System_Int32_
  name: RegisterCallbackUnique
  nameWithType: IWorldAccessor.RegisterCallbackUnique
  fullName: Vintagestory.API.Common.IWorldAccessor.RegisterCallbackUnique
- uid: System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single}
  commentId: T:System.Action{Vintagestory.API.Common.IWorldAccessor,Vintagestory.API.MathTools.BlockPos,System.Single}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<IWorldAccessor, BlockPos, float>
  nameWithType: Action<IWorldAccessor, BlockPos, float>
  fullName: System.Action<Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, float>
  nameWithType.vb: Action(Of IWorldAccessor, BlockPos, Single)
  fullName.vb: System.Action(Of Vintagestory.API.Common.IWorldAccessor, Vintagestory.API.MathTools.BlockPos, Single)
  name.vb: Action(Of IWorldAccessor, BlockPos, Single)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: Vintagestory.API.Common.IWorldAccessor
    name: IWorldAccessor
    href: Vintagestory.API.Common.IWorldAccessor.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.IWorldAccessor
    name: IWorldAccessor
    href: Vintagestory.API.Common.IWorldAccessor.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_PlayerHasPrivilege_System_Int32_System_String_
  name: PlayerHasPrivilege
  nameWithType: IWorldAccessor.PlayerHasPrivilege
  fullName: Vintagestory.API.Common.IWorldAccessor.PlayerHasPrivilege
- uid: Vintagestory.API.Common.IWorldAccessor.UnregisterCallback*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.UnregisterCallback
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_UnregisterCallback_System_Int64_
  name: UnregisterCallback
  nameWithType: IWorldAccessor.UnregisterCallback
  fullName: Vintagestory.API.Common.IWorldAccessor.UnregisterCallback
- uid: Vintagestory.API.Common.IWorldAccessor.InteresectionTester*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.InteresectionTester
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_InteresectionTester
  name: InteresectionTester
  nameWithType: IWorldAccessor.InteresectionTester
  fullName: Vintagestory.API.Common.IWorldAccessor.InteresectionTester
- uid: Vintagestory.API.MathTools.AABBIntersectionTest
  commentId: T:Vintagestory.API.MathTools.AABBIntersectionTest
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.AABBIntersectionTest.html
  name: AABBIntersectionTest
  nameWithType: AABBIntersectionTest
  fullName: Vintagestory.API.MathTools.AABBIntersectionTest
- uid: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.HighlightBlocks
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_HighlightBlocks_Vintagestory_API_Common_IPlayer_System_Int32_System_Collections_Generic_List_Vintagestory_API_MathTools_BlockPos__System_Collections_Generic_List_System_Int32__Vintagestory_API_Client_EnumHighlightBlocksMode_Vintagestory_API_Common_EnumHighlightShape_System_Single_
  name: HighlightBlocks
  nameWithType: IWorldAccessor.HighlightBlocks
  fullName: Vintagestory.API.Common.IWorldAccessor.HighlightBlocks
- uid: System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.MathTools.BlockPos}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<BlockPos>
  nameWithType: List<BlockPos>
  fullName: System.Collections.Generic.List<Vintagestory.API.MathTools.BlockPos>
  nameWithType.vb: List(Of BlockPos)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.MathTools.BlockPos)
  name.vb: List(Of BlockPos)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Vintagestory.API.Client.EnumHighlightBlocksMode
  commentId: T:Vintagestory.API.Client.EnumHighlightBlocksMode
  parent: Vintagestory.API.Client
  href: Vintagestory.API.Client.EnumHighlightBlocksMode.html
  name: EnumHighlightBlocksMode
  nameWithType: EnumHighlightBlocksMode
  fullName: Vintagestory.API.Client.EnumHighlightBlocksMode
- uid: Vintagestory.API.Common.EnumHighlightShape
  commentId: T:Vintagestory.API.Common.EnumHighlightShape
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.EnumHighlightShape.html
  name: EnumHighlightShape
  nameWithType: EnumHighlightShape
  fullName: Vintagestory.API.Common.EnumHighlightShape
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetBlockAccessor_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: GetBlockAccessor
  nameWithType: IWorldAccessor.GetBlockAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessor
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetBlockAccessorBulkUpdate_System_Boolean_System_Boolean_System_Boolean_
  name: GetBlockAccessorBulkUpdate
  nameWithType: IWorldAccessor.GetBlockAccessorBulkUpdate
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkUpdate
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetBlockAccessorBulkMinimalUpdate_System_Boolean_System_Boolean_
  name: GetBlockAccessorBulkMinimalUpdate
  nameWithType: IWorldAccessor.GetBlockAccessorBulkMinimalUpdate
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorBulkMinimalUpdate
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetBlockAccessorMapChunkLoading_System_Boolean_System_Boolean_
  name: GetBlockAccessorMapChunkLoading
  nameWithType: IWorldAccessor.GetBlockAccessorMapChunkLoading
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorMapChunkLoading
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetBlockAccessorRevertable_System_Boolean_System_Boolean_System_Boolean_
  name: GetBlockAccessorRevertable
  nameWithType: IWorldAccessor.GetBlockAccessorRevertable
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorRevertable
- uid: Vintagestory.API.Common.IBlockAccessorRevertable
  commentId: T:Vintagestory.API.Common.IBlockAccessorRevertable
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessorRevertable.html
  name: IBlockAccessorRevertable
  nameWithType: IBlockAccessorRevertable
  fullName: Vintagestory.API.Common.IBlockAccessorRevertable
- uid: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetBlockAccessorPrefetch_System_Boolean_System_Boolean_
  name: GetBlockAccessorPrefetch
  nameWithType: IWorldAccessor.GetBlockAccessorPrefetch
  fullName: Vintagestory.API.Common.IWorldAccessor.GetBlockAccessorPrefetch
- uid: Vintagestory.API.Common.IBlockAccessorPrefetch
  commentId: T:Vintagestory.API.Common.IBlockAccessorPrefetch
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessorPrefetch.html
  name: IBlockAccessorPrefetch
  nameWithType: IBlockAccessorPrefetch
  fullName: Vintagestory.API.Common.IBlockAccessorPrefetch
- uid: Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetCachingBlockAccessor_System_Boolean_System_Boolean_
  name: GetCachingBlockAccessor
  nameWithType: IWorldAccessor.GetCachingBlockAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor.GetCachingBlockAccessor
- uid: Vintagestory.API.Common.ICachingBlockAccessor
  commentId: T:Vintagestory.API.Common.ICachingBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ICachingBlockAccessor.html
  name: ICachingBlockAccessor
  nameWithType: ICachingBlockAccessor
  fullName: Vintagestory.API.Common.ICachingBlockAccessor
- uid: Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor*
  commentId: Overload:Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor
  href: Vintagestory.API.Common.IWorldAccessor.html#Vintagestory_API_Common_IWorldAccessor_GetLockFreeBlockAccessor
  name: GetLockFreeBlockAccessor
  nameWithType: IWorldAccessor.GetLockFreeBlockAccessor
  fullName: Vintagestory.API.Common.IWorldAccessor.GetLockFreeBlockAccessor
