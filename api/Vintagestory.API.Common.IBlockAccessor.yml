### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Common.IBlockAccessor
  commentId: T:Vintagestory.API.Common.IBlockAccessor
  id: IBlockAccessor
  parent: Vintagestory.API.Common
  children:
  - Vintagestory.API.Common.IBlockAccessor.BreakBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer,System.Single)
  - Vintagestory.API.Common.IBlockAccessor.BreakDecor(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  - Vintagestory.API.Common.IBlockAccessor.ChunkSize
  - Vintagestory.API.Common.IBlockAccessor.Commit
  - Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension(Vintagestory.API.MathTools.Vec3d)
  - Vintagestory.API.Common.IBlockAccessor.DamageBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Single)
  - Vintagestory.API.Common.IBlockAccessor.ExchangeBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  - Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetBlockEntity(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetBlockEntity``1(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetBlockId(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetBlockId(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull(System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetChunk(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetChunk(System.Int64)
  - Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ClimateCondition,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  - Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  - Vintagestory.API.Common.IBlockAccessor.GetDecor(Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetDecors(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall(Vintagestory.API.MathTools.BlockPos,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetLightLevel(System.Int32,System.Int32,System.Int32,Vintagestory.API.Common.EnumLightLevelType)
  - Vintagestory.API.Common.IBlockAccessor.GetLightLevel(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumLightLevelType)
  - Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetMapChunk(System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetMapChunk(Vintagestory.API.MathTools.Vec2i)
  - Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetMapRegion(System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetSubDecors(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.Vec3d)
  - Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(System.Double,System.Double,System.Double)
  - Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(System.Double,System.Double,System.Double,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.IsSideSolid(System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  - Vintagestory.API.Common.IBlockAccessor.IsValidPos(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.IsValidPos(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.MapSize
  - Vintagestory.API.Common.IBlockAccessor.MapSizeX
  - Vintagestory.API.Common.IBlockAccessor.MapSizeY
  - Vintagestory.API.Common.IBlockAccessor.MapSizeZ
  - Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged(System.Int32,System.Int32,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,System.Action)
  - Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer)
  - Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.MarkBlockModified(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX
  - Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY
  - Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ
  - Vintagestory.API.Common.IBlockAccessor.RegionSize
  - Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight(System.Byte[],Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.Rollback
  - Vintagestory.API.Common.IBlockAccessor.SearchBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  - Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  - Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  - Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,System.Int32)
  - Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing)
  - Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  - Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(Vintagestory.API.Common.BlockEntity)
  - Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap
  - Vintagestory.API.Common.IBlockAccessor.WalkBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.Block,System.Int32,System.Int32,System.Int32},System.Boolean)
  - Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  - Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  langs:
  - csharp
  - vb
  name: IBlockAccessor
  nameWithType: IBlockAccessor
  fullName: Vintagestory.API.Common.IBlockAccessor
  type: Interface
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Provides read/write access to the blocks of a world
  example: []
  syntax:
    content: public interface IBlockAccessor
    content.vb: Public Interface IBlockAccessor
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.Common.IBlockAccessor.ChunkSize
  commentId: P:Vintagestory.API.Common.IBlockAccessor.ChunkSize
  id: ChunkSize
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: IBlockAccessor.ChunkSize
  fullName: Vintagestory.API.Common.IBlockAccessor.ChunkSize
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Width, Length and Height of a chunk
  example: []
  syntax:
    content: int ChunkSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property ChunkSize As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.ChunkSize*
- uid: Vintagestory.API.Common.IBlockAccessor.RegionSize
  commentId: P:Vintagestory.API.Common.IBlockAccessor.RegionSize
  id: RegionSize
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: RegionSize
  nameWithType: IBlockAccessor.RegionSize
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionSize
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Width and Length of a region in blocks
  example: []
  syntax:
    content: int RegionSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property RegionSize As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.RegionSize*
- uid: Vintagestory.API.Common.IBlockAccessor.MapSizeX
  commentId: P:Vintagestory.API.Common.IBlockAccessor.MapSizeX
  id: MapSizeX
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MapSizeX
  nameWithType: IBlockAccessor.MapSizeX
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSizeX
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: X Size of the world in blocks
  example: []
  syntax:
    content: int MapSizeX { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property MapSizeX As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.MapSizeX*
- uid: Vintagestory.API.Common.IBlockAccessor.MapSizeY
  commentId: P:Vintagestory.API.Common.IBlockAccessor.MapSizeY
  id: MapSizeY
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MapSizeY
  nameWithType: IBlockAccessor.MapSizeY
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSizeY
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Y Size of the world in blocks
  example: []
  syntax:
    content: int MapSizeY { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property MapSizeY As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.MapSizeY*
- uid: Vintagestory.API.Common.IBlockAccessor.MapSizeZ
  commentId: P:Vintagestory.API.Common.IBlockAccessor.MapSizeZ
  id: MapSizeZ
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MapSizeZ
  nameWithType: IBlockAccessor.MapSizeZ
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSizeZ
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Z Size of the world in blocks
  example: []
  syntax:
    content: int MapSizeZ { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property MapSizeZ As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.MapSizeZ*
- uid: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX
  commentId: P:Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX
  id: RegionMapSizeX
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: RegionMapSizeX
  nameWithType: IBlockAccessor.RegionMapSizeX
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: int RegionMapSizeX { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property RegionMapSizeX As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX*
- uid: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY
  commentId: P:Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY
  id: RegionMapSizeY
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: RegionMapSizeY
  nameWithType: IBlockAccessor.RegionMapSizeY
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: int RegionMapSizeY { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property RegionMapSizeY As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY*
- uid: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ
  commentId: P:Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ
  id: RegionMapSizeZ
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: RegionMapSizeZ
  nameWithType: IBlockAccessor.RegionMapSizeZ
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  syntax:
    content: int RegionMapSizeZ { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property RegionMapSizeZ As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ*
- uid: Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap
  commentId: P:Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap
  id: UpdateSnowAccumMap
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: UpdateSnowAccumMap
  nameWithType: IBlockAccessor.UpdateSnowAccumMap
  fullName: Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Whether to update the snow accum map on a SetBlock()
  example: []
  syntax:
    content: bool UpdateSnowAccumMap { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UpdateSnowAccumMap As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap*
- uid: Vintagestory.API.Common.IBlockAccessor.MapSize
  commentId: P:Vintagestory.API.Common.IBlockAccessor.MapSize
  id: MapSize
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MapSize
  nameWithType: IBlockAccessor.MapSize
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSize
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Size of the world in blocks
  example: []
  syntax:
    content: Vec3i MapSize { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.Vec3i
    content.vb: ReadOnly Property MapSize As Vec3i
  overload: Vintagestory.API.Common.IBlockAccessor.MapSize*
- uid: Vintagestory.API.Common.IBlockAccessor.GetChunk(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetChunk(System.Int32,System.Int32,System.Int32)
  id: GetChunk(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetChunk(int, int, int)
  nameWithType: IBlockAccessor.GetChunk(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetChunk(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Retrieve chunk at given chunk position (= divide block position by chunk size)

    <br />For dimension awareness, chunkY would need to be based on BlockPos.InternalY / chunksize or else explicitly include the dimensionId multiplied by GlobalConstants.DimensionSizeInChunks
  example: []
  syntax:
    content: IWorldChunk GetChunk(int chunkX, int chunkY, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkY
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.IWorldChunk
      description: ''
    content.vb: Function GetChunk(chunkX As Integer, chunkY As Integer, chunkZ As Integer) As IWorldChunk
  overload: Vintagestory.API.Common.IBlockAccessor.GetChunk*
  nameWithType.vb: IBlockAccessor.GetChunk(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetChunk(Integer, Integer, Integer)
  name.vb: GetChunk(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetChunk(System.Int64)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetChunk(System.Int64)
  id: GetChunk(System.Int64)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetChunk(long)
  nameWithType: IBlockAccessor.GetChunk(long)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetChunk(long)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve chunk at given chunk position, returns null if chunk is not loaded
  example: []
  syntax:
    content: IWorldChunk GetChunk(long chunkIndex3D)
    parameters:
    - id: chunkIndex3D
      type: System.Int64
      description: ''
    return:
      type: Vintagestory.API.Common.IWorldChunk
      description: ''
    content.vb: Function GetChunk(chunkIndex3D As Long) As IWorldChunk
  overload: Vintagestory.API.Common.IBlockAccessor.GetChunk*
  nameWithType.vb: IBlockAccessor.GetChunk(Long)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetChunk(Long)
  name.vb: GetChunk(Long)
- uid: Vintagestory.API.Common.IBlockAccessor.GetMapRegion(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetMapRegion(System.Int32,System.Int32)
  id: GetMapRegion(System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetMapRegion(int, int)
  nameWithType: IBlockAccessor.GetMapRegion(int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMapRegion(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves a map region at given region position, returns null if region is not loaded
  example: []
  syntax:
    content: IMapRegion GetMapRegion(int regionX, int regionZ)
    parameters:
    - id: regionX
      type: System.Int32
      description: ''
    - id: regionZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.IMapRegion
      description: ''
    content.vb: Function GetMapRegion(regionX As Integer, regionZ As Integer) As IMapRegion
  overload: Vintagestory.API.Common.IBlockAccessor.GetMapRegion*
  nameWithType.vb: IBlockAccessor.GetMapRegion(Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetMapRegion(Integer, Integer)
  name.vb: GetMapRegion(Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(System.Int32,System.Int32,System.Int32)
  id: GetChunkAtBlockPos(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetChunkAtBlockPos(int, int, int)
  nameWithType: IBlockAccessor.GetChunkAtBlockPos(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve chunk at given block position, returns null if chunk is not loaded
  example: []
  syntax:
    content: >-
      [Obsolete("Please use BlockPos version instead, for dimension awareness")]

      IWorldChunk GetChunkAtBlockPos(int posX, int posY, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posY
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.IWorldChunk
      description: ''
    content.vb: >-
      <Obsolete("Please use BlockPos version instead, for dimension awareness")>

      Function GetChunkAtBlockPos(posX As Integer, posY As Integer, posZ As Integer) As IWorldChunk
  overload: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use BlockPos version instead, for dimension awareness
  nameWithType.vb: IBlockAccessor.GetChunkAtBlockPos(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(Integer, Integer, Integer)
  name.vb: GetChunkAtBlockPos(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  id: GetChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetChunkAtBlockPos(BlockPos)
  nameWithType: IBlockAccessor.GetChunkAtBlockPos(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve chunk at given block position, returns null if chunk is not loaded
  example: []
  syntax:
    content: IWorldChunk GetChunkAtBlockPos(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.IWorldChunk
      description: ''
    content.vb: Function GetChunkAtBlockPos(pos As BlockPos) As IWorldChunk
  overload: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos*
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockId(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlockId(System.Int32,System.Int32,System.Int32)
  id: GetBlockId(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlockId(int, int, int)
  nameWithType: IBlockAccessor.GetBlockId(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockId(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Get the block id of the block at the given world coordinate
  example: []
  syntax:
    content: >-
      [Obsolete("Please use BlockPos version instead, for dimension awareness")]

      int GetBlockId(int posX, int posY, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posY
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: >-
      <Obsolete("Please use BlockPos version instead, for dimension awareness")>

      Function GetBlockId(posX As Integer, posY As Integer, posZ As Integer) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlockId*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use BlockPos version instead, for dimension awareness
  nameWithType.vb: IBlockAccessor.GetBlockId(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlockId(Integer, Integer, Integer)
  name.vb: GetBlockId(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockId(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlockId(Vintagestory.API.MathTools.BlockPos)
  id: GetBlockId(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlockId(BlockPos)
  nameWithType: IBlockAccessor.GetBlockId(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockId(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Get the block id of the block at the given world coordinate
  example: []
  syntax:
    content: int GetBlockId(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetBlockId(pos As BlockPos) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlockId*
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32)
  id: GetBlock(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(int, int, int)
  nameWithType: IBlockAccessor.GetBlock(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Get the block type of the block at the given world coordinate. Will never return null. For air blocks or invalid coordinates you'll get a block instance with block code "air" and id 0

    Same as <xref href="Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> with BlockLayersAccess.Default as layer
  example: []
  syntax:
    content: >-
      [Obsolete("Please use BlockPos version instead, for dimension awareness")]

      Block GetBlock(int posX, int posY, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posY
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: >-
      <Obsolete("Please use BlockPos version instead, for dimension awareness")>

      Function GetBlock(posX As Integer, posY As Integer, posZ As Integer) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlock*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use BlockPos version instead, for dimension awareness
  nameWithType.vb: IBlockAccessor.GetBlock(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlock(Integer, Integer, Integer)
  name.vb: GetBlock(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos)
  id: GetBlock(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(BlockPos)
  nameWithType: IBlockAccessor.GetBlock(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Get the block type of the block at the given world coordinate. Will never return null. For air blocks or invalid coordinates you'll get a block instance with block code "air" and id 0

    Same as <xref href="Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> with BlockLayersAccess.Default as layer
  example: []
  syntax:
    content: Block GetBlock(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetBlock(pos As BlockPos) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlock*
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(int, int, int, int)
  nameWithType: IBlockAccessor.GetBlock(int, int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Get the block type of the block at the given world coordinate. Will never return null. For airblocks or invalid coordinates you'll get a block instance with block code "air" and id 0

    <br />Reads the block from the specified layer(s), see <xref href="Vintagestory.API.Common.BlockLayersAccess" data-throw-if-not-resolved="false"></xref> documentation for details.
  example: []
  syntax:
    content: >-
      [Obsolete("Please use BlockPos version instead, for dimension awareness")]

      Block GetBlock(int x, int y, int z, int layer)
    parameters:
    - id: x
      type: System.Int32
      description: x coordinate
    - id: y
      type: System.Int32
      description: y coordinate
    - id: z
      type: System.Int32
      description: z coordinate
    - id: layer
      type: System.Int32
      description: blocks layer e.g. solid, fluid etc.
    return:
      type: Vintagestory.API.Common.Block
      description: ID of the block at the given position
    content.vb: >-
      <Obsolete("Please use BlockPos version instead, for dimension awareness")>

      Function GetBlock(x As Integer, y As Integer, z As Integer, layer As Integer) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlock*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use BlockPos version instead, for dimension awareness
  nameWithType.vb: IBlockAccessor.GetBlock(Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlock(Integer, Integer, Integer, Integer)
  name.vb: GetBlock(Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(BlockPos, int)
  nameWithType: IBlockAccessor.GetBlock(BlockPos, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Get block type at given world coordinate. Will never return null. For airblocks or invalid coordinates you'll get a block instance with block code "air" and id 0

    <br />Reads the block from the specified layer(s), see BlockLayersAccess documentation for details.
  example: []
  syntax:
    content: Block GetBlock(BlockPos pos, int layer)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: layer
      type: System.Int32
      description: blocks layer e.g. solid, fluid etc.
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetBlock(pos As BlockPos, layer As Integer) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlock*
  nameWithType.vb: IBlockAccessor.GetBlock(BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: GetBlock(BlockPos, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull(System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetBlockOrNull(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlockOrNull(int, int, int, int)
  nameWithType: IBlockAccessor.GetBlockOrNull(int, int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull(int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Get the block type of the block at the given world coordinate. For invalid or unloaded coordinates this method returns null.
  example: []
  syntax:
    content: >-
      [Obsolete("Please use BlockPos version instead, for dimension awareness")]

      Block GetBlockOrNull(int x, int y, int z, int layer = 4)
    parameters:
    - id: x
      type: System.Int32
      description: x coordinate
    - id: y
      type: System.Int32
      description: y coordinate
    - id: z
      type: System.Int32
      description: z coordinate
    - id: layer
      type: System.Int32
      description: Block layer
    return:
      type: Vintagestory.API.Common.Block
      description: ID of the block at the given position
    content.vb: >-
      <Obsolete("Please use BlockPos version instead, for dimension awareness")>

      Function GetBlockOrNull(x As Integer, y As Integer, z As Integer, layer As Integer = 4) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use BlockPos version instead, for dimension awareness
  nameWithType.vb: IBlockAccessor.GetBlockOrNull(Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull(Integer, Integer, Integer, Integer)
  name.vb: GetBlockOrNull(Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(System.Int32,System.Int32,System.Int32)
  id: GetMostSolidBlock(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetMostSolidBlock(int, int, int)
  nameWithType: IBlockAccessor.GetMostSolidBlock(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Same as <xref href="Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> with BlockLayersAccess.MostSolid as layer
  example: []
  syntax:
    content: >-
      [Obsolete("Please use BlockPos version instead, for dimension awareness")]

      Block GetMostSolidBlock(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: >-
      <Obsolete("Please use BlockPos version instead, for dimension awareness")>

      Function GetMostSolidBlock(x As Integer, y As Integer, z As Integer) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use BlockPos version instead, for dimension awareness
  nameWithType.vb: IBlockAccessor.GetMostSolidBlock(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(Integer, Integer, Integer)
  name.vb: GetMostSolidBlock(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(Vintagestory.API.MathTools.BlockPos)
  id: GetMostSolidBlock(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetMostSolidBlock(BlockPos)
  nameWithType: IBlockAccessor.GetMostSolidBlock(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Same as <xref href="Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> with BlockLayersAccess.MostSolid as layer
  example: []
  syntax:
    content: Block GetMostSolidBlock(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetMostSolidBlock(pos As BlockPos) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock*
- uid: Vintagestory.API.Common.IBlockAccessor.WalkBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.Block,System.Int32,System.Int32,System.Int32},System.Boolean)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.WalkBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.Block,System.Int32,System.Int32,System.Int32},System.Boolean)
  id: WalkBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.Block,System.Int32,System.Int32,System.Int32},System.Boolean)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: WalkBlocks(BlockPos, BlockPos, Action<Block, int, int, int>, bool)
  nameWithType: IBlockAccessor.WalkBlocks(BlockPos, BlockPos, Action<Block, int, int, int>, bool)
  fullName: Vintagestory.API.Common.IBlockAccessor.WalkBlocks(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, System.Action<Vintagestory.API.Common.Block, int, int, int>, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    A method to iterate over blocks in an area. Less overhead than when calling GetBlock(pos) many times. If there is liquids in the liquid layer, the onBlock method will be called twice. Currently used for more efficient collision testing.

    <br />Currently NOT dimensionally aware
  example: []
  syntax:
    content: void WalkBlocks(BlockPos minPos, BlockPos maxPos, Action<Block, int, int, int> onBlock, bool centerOrder = false)
    parameters:
    - id: minPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: maxPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: onBlock
      type: System.Action{Vintagestory.API.Common.Block,System.Int32,System.Int32,System.Int32}
      description: The method in which you want to check for the block, whatever it may be.
    - id: centerOrder
      type: System.Boolean
      description: If true, the blocks will be ordered by the distance to the center position
    content.vb: Sub WalkBlocks(minPos As BlockPos, maxPos As BlockPos, onBlock As Action(Of Block, Integer, Integer, Integer), centerOrder As Boolean = False)
  overload: Vintagestory.API.Common.IBlockAccessor.WalkBlocks*
  nameWithType.vb: IBlockAccessor.WalkBlocks(BlockPos, BlockPos, Action(Of Block, Integer, Integer, Integer), Boolean)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.WalkBlocks(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, System.Action(Of Vintagestory.API.Common.Block, Integer, Integer, Integer), Boolean)
  name.vb: WalkBlocks(BlockPos, BlockPos, Action(Of Block, Integer, Integer, Integer), Boolean)
- uid: Vintagestory.API.Common.IBlockAccessor.SearchBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SearchBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  id: SearchBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SearchBlocks(BlockPos, BlockPos, ActionConsumable<Block, BlockPos>, Action<int, int, int>)
  nameWithType: IBlockAccessor.SearchBlocks(BlockPos, BlockPos, ActionConsumable<Block, BlockPos>, Action<int, int, int>)
  fullName: Vintagestory.API.Common.IBlockAccessor.SearchBlocks(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos>, System.Action<int, int, int>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    A method to search for a given block in an area

    <br />Currently NOT dimensionally aware
  example: []
  syntax:
    content: void SearchBlocks(BlockPos minPos, BlockPos maxPos, ActionConsumable<Block, BlockPos> onBlock, Action<int, int, int> onChunkMissing = null)
    parameters:
    - id: minPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: maxPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: onBlock
      type: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos}
      description: Return false to stop the search
    - id: onChunkMissing
      type: System.Action{System.Int32,System.Int32,System.Int32}
      description: Called when a missing/unloaded chunk was encountered
    content.vb: Sub SearchBlocks(minPos As BlockPos, maxPos As BlockPos, onBlock As ActionConsumable(Of Block, BlockPos), onChunkMissing As Action(Of Integer, Integer, Integer) = Nothing)
  overload: Vintagestory.API.Common.IBlockAccessor.SearchBlocks*
  nameWithType.vb: IBlockAccessor.SearchBlocks(BlockPos, BlockPos, ActionConsumable(Of Block, BlockPos), Action(Of Integer, Integer, Integer))
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SearchBlocks(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos), System.Action(Of Integer, Integer, Integer))
  name.vb: SearchBlocks(BlockPos, BlockPos, ActionConsumable(Of Block, BlockPos), Action(Of Integer, Integer, Integer))
- uid: Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  id: SearchFluidBlocks(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos},System.Action{System.Int32,System.Int32,System.Int32})
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SearchFluidBlocks(BlockPos, BlockPos, ActionConsumable<Block, BlockPos>, Action<int, int, int>)
  nameWithType: IBlockAccessor.SearchFluidBlocks(BlockPos, BlockPos, ActionConsumable<Block, BlockPos>, Action<int, int, int>)
  fullName: Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos>, System.Action<int, int, int>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    A method to search for a given fluid block in an area

    <br />Currently NOT dimensionally aware
  example: []
  syntax:
    content: void SearchFluidBlocks(BlockPos minPos, BlockPos maxPos, ActionConsumable<Block, BlockPos> onBlock, Action<int, int, int> onChunkMissing = null)
    parameters:
    - id: minPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: maxPos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: onBlock
      type: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos}
      description: Return false to stop the search
    - id: onChunkMissing
      type: System.Action{System.Int32,System.Int32,System.Int32}
      description: Called when a missing/unloaded chunk was encountered
    content.vb: Sub SearchFluidBlocks(minPos As BlockPos, maxPos As BlockPos, onBlock As ActionConsumable(Of Block, BlockPos), onChunkMissing As Action(Of Integer, Integer, Integer) = Nothing)
  overload: Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks*
  nameWithType.vb: IBlockAccessor.SearchFluidBlocks(BlockPos, BlockPos, ActionConsumable(Of Block, BlockPos), Action(Of Integer, Integer, Integer))
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos), System.Action(Of Integer, Integer, Integer))
  name.vb: SearchFluidBlocks(BlockPos, BlockPos, ActionConsumable(Of Block, BlockPos), Action(Of Integer, Integer, Integer))
- uid: Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  commentId: M:Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  id: WalkStructures(Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: WalkStructures(BlockPos, Action<GeneratedStructure>)
  nameWithType: IBlockAccessor.WalkStructures(BlockPos, Action<GeneratedStructure>)
  fullName: Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos, System.Action<Vintagestory.API.Common.GeneratedStructure>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Calls given handler if it encounters one or more generated structure at given position (read from mapregions, assuming a max structure size of 256x256x256)
  example: []
  syntax:
    content: void WalkStructures(BlockPos pos, Action<GeneratedStructure> onStructure)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: onStructure
      type: System.Action{Vintagestory.API.Common.GeneratedStructure}
      description: ''
    content.vb: Sub WalkStructures(pos As BlockPos, onStructure As Action(Of GeneratedStructure))
  overload: Vintagestory.API.Common.IBlockAccessor.WalkStructures*
  nameWithType.vb: IBlockAccessor.WalkStructures(BlockPos, Action(Of GeneratedStructure))
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos, System.Action(Of Vintagestory.API.Common.GeneratedStructure))
  name.vb: WalkStructures(BlockPos, Action(Of GeneratedStructure))
- uid: Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  commentId: M:Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  id: WalkStructures(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockPos,System.Action{Vintagestory.API.Common.GeneratedStructure})
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: WalkStructures(BlockPos, BlockPos, Action<GeneratedStructure>)
  nameWithType: IBlockAccessor.WalkStructures(BlockPos, BlockPos, Action<GeneratedStructure>)
  fullName: Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, System.Action<Vintagestory.API.Common.GeneratedStructure>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Calls given handler if it encounters one or more generated structure that intersect any position inside minpos-&gt;maxpos (read from mapregions, assuming a max structure size of 256x256x256)
  example: []
  syntax:
    content: void WalkStructures(BlockPos minpos, BlockPos maxpos, Action<GeneratedStructure> onStructure)
    parameters:
    - id: minpos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: maxpos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: onStructure
      type: System.Action{Vintagestory.API.Common.GeneratedStructure}
      description: ''
    content.vb: Sub WalkStructures(minpos As BlockPos, maxpos As BlockPos, onStructure As Action(Of GeneratedStructure))
  overload: Vintagestory.API.Common.IBlockAccessor.WalkStructures*
  nameWithType.vb: IBlockAccessor.WalkStructures(BlockPos, BlockPos, Action(Of GeneratedStructure))
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.WalkStructures(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockPos, System.Action(Of Vintagestory.API.Common.GeneratedStructure))
  name.vb: WalkStructures(BlockPos, BlockPos, Action(Of GeneratedStructure))
- uid: Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  id: SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SetBlock(int, BlockPos)
  nameWithType: IBlockAccessor.SetBlock(int, BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.SetBlock(int, Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Set a block at the given position. Use blockid 0 to clear that position from any blocks. Marks the chunk dirty so that it gets saved to disk during shutdown or next autosave.

    If called with a fluid block, the fluid will automatically get set in the fluid layer, and the solid layer will be emptied.
  example: []
  syntax:
    content: void SetBlock(int blockId, BlockPos pos)
    parameters:
    - id: blockId
      type: System.Int32
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub SetBlock(blockId As Integer, pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.SetBlock*
  nameWithType.vb: IBlockAccessor.SetBlock(Integer, BlockPos)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SetBlock(Integer, Vintagestory.API.MathTools.BlockPos)
  name.vb: SetBlock(Integer, BlockPos)
- uid: Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SetBlock(int, BlockPos, int)
  nameWithType: IBlockAccessor.SetBlock(int, BlockPos, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.SetBlock(int, Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Sets a block to given layer. Can only use "BlockLayersAccess.Solid" or "BlockLayersAccess.Liquid". Use id 0 to clear a block from given position. Marks the chunk dirty so that it gets saved to disk during shutdown or next autosave.
  example: []
  syntax:
    content: void SetBlock(int blockId, BlockPos pos, int layer)
    parameters:
    - id: blockId
      type: System.Int32
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: layer
      type: System.Int32
      description: ''
    content.vb: Sub SetBlock(blockId As Integer, pos As BlockPos, layer As Integer)
  overload: Vintagestory.API.Common.IBlockAccessor.SetBlock*
  nameWithType.vb: IBlockAccessor.SetBlock(Integer, BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SetBlock(Integer, Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: SetBlock(Integer, BlockPos, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  id: SetBlock(System.Int32,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SetBlock(int, BlockPos, ItemStack)
  nameWithType: IBlockAccessor.SetBlock(int, BlockPos, ItemStack)
  fullName: Vintagestory.API.Common.IBlockAccessor.SetBlock(int, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ItemStack)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Set a block at the given position. Use blockid 0 to clear that position from any blocks. Marks the chunk dirty so that it gets saved to disk during shutdown or next autosave.

    If called with a fluid block, the fluid will automatically get set in the fluid layer, and the solid layer will be emptied.
  example: []
  syntax:
    content: void SetBlock(int blockId, BlockPos pos, ItemStack byItemstack)
    parameters:
    - id: blockId
      type: System.Int32
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: byItemstack
      type: Vintagestory.API.Common.ItemStack
      description: If set then it will be passed onto the block.OnBlockPlaced method
    content.vb: Sub SetBlock(blockId As Integer, pos As BlockPos, byItemstack As ItemStack)
  overload: Vintagestory.API.Common.IBlockAccessor.SetBlock*
  nameWithType.vb: IBlockAccessor.SetBlock(Integer, BlockPos, ItemStack)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SetBlock(Integer, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ItemStack)
  name.vb: SetBlock(Integer, BlockPos, ItemStack)
- uid: Vintagestory.API.Common.IBlockAccessor.ExchangeBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.ExchangeBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  id: ExchangeBlock(System.Int32,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: ExchangeBlock(int, BlockPos)
  nameWithType: IBlockAccessor.ExchangeBlock(int, BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.ExchangeBlock(int, Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Set a block at the given position without calling OnBlockRemoved or OnBlockPlaced, which prevents any block entity from being removed or placed. Marks the chunk dirty so that it gets saved to disk during shutdown or next autosave. Should only be used if you want to prevent any block entity deletion at this position.

    <br />This also, for example, does not change a block's reinforcement level, useful for openable blocks such as doors, gates etc
  example: []
  syntax:
    content: void ExchangeBlock(int blockId, BlockPos pos)
    parameters:
    - id: blockId
      type: System.Int32
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
    content.vb: Sub ExchangeBlock(blockId As Integer, pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.ExchangeBlock*
  nameWithType.vb: IBlockAccessor.ExchangeBlock(Integer, BlockPos)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.ExchangeBlock(Integer, Vintagestory.API.MathTools.BlockPos)
  name.vb: ExchangeBlock(Integer, BlockPos)
- uid: Vintagestory.API.Common.IBlockAccessor.BreakBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer,System.Single)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.BreakBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer,System.Single)
  id: BreakBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer,System.Single)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: BreakBlock(BlockPos, IPlayer, float)
  nameWithType: IBlockAccessor.BreakBlock(BlockPos, IPlayer, float)
  fullName: Vintagestory.API.Common.IBlockAccessor.BreakBlock(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.IPlayer, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes the block at given position and calls Block.GetDrops(), Block.OnBreakBlock() and Block.OnNeighbourBlockChange() for all neighbours. Drops the items that are return from Block.GetDrops()
  example: []
  syntax:
    content: void BreakBlock(BlockPos pos, IPlayer byPlayer, float dropQuantityMultiplier = 1)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: byPlayer
      type: Vintagestory.API.Common.IPlayer
      description: ''
    - id: dropQuantityMultiplier
      type: System.Single
      description: ''
    content.vb: Sub BreakBlock(pos As BlockPos, byPlayer As IPlayer, dropQuantityMultiplier As Single = 1)
  overload: Vintagestory.API.Common.IBlockAccessor.BreakBlock*
  nameWithType.vb: IBlockAccessor.BreakBlock(BlockPos, IPlayer, Single)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.BreakBlock(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.IPlayer, Single)
  name.vb: BreakBlock(BlockPos, IPlayer, Single)
- uid: Vintagestory.API.Common.IBlockAccessor.DamageBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Single)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.DamageBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Single)
  id: DamageBlock(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Single)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: DamageBlock(BlockPos, BlockFacing, float)
  nameWithType: IBlockAccessor.DamageBlock(BlockPos, BlockFacing, float)
  fullName: Vintagestory.API.Common.IBlockAccessor.DamageBlock(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockFacing, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Client Side: Will render the block breaking decal on that block. If the remaining block resistance reaches 0, will call break block

    Server Side: Broadcasts a package to all nearby clients to update the block damage of this block for rendering the decal (note: there is currently no server side list of current block damages, these are client side only at the moemnt)
  example: []
  syntax:
    content: void DamageBlock(BlockPos pos, BlockFacing facing, float damage)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    - id: damage
      type: System.Single
      description: ''
    content.vb: Sub DamageBlock(pos As BlockPos, facing As BlockFacing, damage As Single)
  overload: Vintagestory.API.Common.IBlockAccessor.DamageBlock*
  nameWithType.vb: IBlockAccessor.DamageBlock(BlockPos, BlockFacing, Single)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.DamageBlock(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockFacing, Single)
  name.vb: DamageBlock(BlockPos, BlockFacing, Single)
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32)
  id: GetBlock(System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(int)
  nameWithType: IBlockAccessor.GetBlock(int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Get the Block object of a certain block ID. Returns null when not found.
  example: []
  syntax:
    content: Block GetBlock(int blockId)
    parameters:
    - id: blockId
      type: System.Int32
      description: The block ID to search for
    return:
      type: Vintagestory.API.Common.Block
      description: BlockType object
    content.vb: Function GetBlock(blockId As Integer) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlock*
  nameWithType.vb: IBlockAccessor.GetBlock(Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlock(Integer)
  name.vb: GetBlock(Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  id: GetBlock(Vintagestory.API.Common.AssetLocation)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlock(AssetLocation)
  nameWithType: IBlockAccessor.GetBlock(AssetLocation)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.Common.AssetLocation)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Get the Block object of for given block code. Returns null when not found.
  example: []
  syntax:
    content: Block GetBlock(AssetLocation code)
    parameters:
    - id: code
      type: Vintagestory.API.Common.AssetLocation
      description: ''
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetBlock(code As AssetLocation) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlock*
- uid: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  id: SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SpawnBlockEntity(string, BlockPos, ItemStack)
  nameWithType: IBlockAccessor.SpawnBlockEntity(string, BlockPos, ItemStack)
  fullName: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(string, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ItemStack)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Spawn block entity at this position. Does not place it's corresponding block, you have to this yourself.
  example: []
  syntax:
    content: void SpawnBlockEntity(string classname, BlockPos position, ItemStack byItemStack = null)
    parameters:
    - id: classname
      type: System.String
      description: ''
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: byItemStack
      type: Vintagestory.API.Common.ItemStack
      description: ''
    content.vb: Sub SpawnBlockEntity(classname As String, position As BlockPos, byItemStack As ItemStack = Nothing)
  overload: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity*
  nameWithType.vb: IBlockAccessor.SpawnBlockEntity(String, BlockPos, ItemStack)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(String, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ItemStack)
  name.vb: SpawnBlockEntity(String, BlockPos, ItemStack)
- uid: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(Vintagestory.API.Common.BlockEntity)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(Vintagestory.API.Common.BlockEntity)
  id: SpawnBlockEntity(Vintagestory.API.Common.BlockEntity)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SpawnBlockEntity(BlockEntity)
  nameWithType: IBlockAccessor.SpawnBlockEntity(BlockEntity)
  fullName: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(Vintagestory.API.Common.BlockEntity)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Adds pre-initialized block entity to the world. Does not call CreateBehaviors/Initialize/OnBlockPlaced on the block entity. This is a very low level method for block entity spawning, normally you'd want to use <xref href="Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String%2cVintagestory.API.MathTools.BlockPos%2cVintagestory.API.Common.ItemStack)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: void SpawnBlockEntity(BlockEntity be)
    parameters:
    - id: be
      type: Vintagestory.API.Common.BlockEntity
      description: ''
    content.vb: Sub SpawnBlockEntity(be As BlockEntity)
  overload: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity*
- uid: Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity(Vintagestory.API.MathTools.BlockPos)
  id: RemoveBlockEntity(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: RemoveBlockEntity(BlockPos)
  nameWithType: IBlockAccessor.RemoveBlockEntity(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Permanently removes any block entity at this postion. Does not remove it's corresponding block, you have to do this yourself. Marks the chunk dirty so that it gets saved to disk during shutdown or next autosave.
  example: []
  syntax:
    content: void RemoveBlockEntity(BlockPos position)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub RemoveBlockEntity(position As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity*
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlockEntity(Vintagestory.API.MathTools.BlockPos)
  id: GetBlockEntity(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlockEntity(BlockPos)
  nameWithType: IBlockAccessor.GetBlockEntity(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the block entity at given position. Returns null if there is no block entity at this position
  example: []
  syntax:
    content: BlockEntity GetBlockEntity(BlockPos position)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.BlockEntity
      description: ''
    content.vb: Function GetBlockEntity(position As BlockPos) As BlockEntity
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity*
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity``1(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlockEntity``1(Vintagestory.API.MathTools.BlockPos)
  id: GetBlockEntity``1(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetBlockEntity<T>(BlockPos)
  nameWithType: IBlockAccessor.GetBlockEntity<T>(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity<T>(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieve the block entity at given position. Returns null if there is no block entity at this position
  example: []
  syntax:
    content: 'T GetBlockEntity<T>(BlockPos position) where T : BlockEntity'
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Function GetBlockEntity(Of T As BlockEntity)(position As BlockPos) As T
  overload: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity*
  nameWithType.vb: IBlockAccessor.GetBlockEntity(Of T)(BlockPos)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity(Of T)(Vintagestory.API.MathTools.BlockPos)
  name.vb: GetBlockEntity(Of T)(BlockPos)
- uid: Vintagestory.API.Common.IBlockAccessor.IsValidPos(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.IsValidPos(System.Int32,System.Int32,System.Int32)
  id: IsValidPos(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: IsValidPos(int, int, int)
  nameWithType: IBlockAccessor.IsValidPos(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.IsValidPos(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Checks if the position is inside the maps boundaries
  example: []
  syntax:
    content: >-
      [Obsolete("Please use BlockPos version instead, for dimension awareness")]

      bool IsValidPos(int posX, int posY, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posY
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Please use BlockPos version instead, for dimension awareness")>

      Function IsValidPos(posX As Integer, posY As Integer, posZ As Integer) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.IsValidPos*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use BlockPos version instead, for dimension awareness
  nameWithType.vb: IBlockAccessor.IsValidPos(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.IsValidPos(Integer, Integer, Integer)
  name.vb: IsValidPos(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.IsValidPos(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.IsValidPos(Vintagestory.API.MathTools.BlockPos)
  id: IsValidPos(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: IsValidPos(BlockPos)
  nameWithType: IBlockAccessor.IsValidPos(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.IsValidPos(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Checks if the position is inside the maps boundaries
  example: []
  syntax:
    content: bool IsValidPos(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function IsValidPos(pos As BlockPos) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.IsValidPos*
- uid: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(System.Double,System.Double,System.Double)
  id: IsNotTraversable(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: IsNotTraversable(double, double, double)
  nameWithType: IBlockAccessor.IsNotTraversable(double, double, double)
  fullName: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Checks if this position can be traversed by a normal player (returns false for outside map or not yet loaded chunks)
  example: []
  syntax:
    content: >-
      [Obsolete("Better to use dimension-aware version")]

      bool IsNotTraversable(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
      description: ''
    - id: y
      type: System.Double
      description: ''
    - id: z
      type: System.Double
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Better to use dimension-aware version")>

      Function IsNotTraversable(x As Double, y As Double, z As Double) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Better to use dimension-aware version
  nameWithType.vb: IBlockAccessor.IsNotTraversable(Double, Double, Double)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(Double, Double, Double)
  name.vb: IsNotTraversable(Double, Double, Double)
- uid: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(System.Double,System.Double,System.Double,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(System.Double,System.Double,System.Double,System.Int32)
  id: IsNotTraversable(System.Double,System.Double,System.Double,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: IsNotTraversable(double, double, double, int)
  nameWithType: IBlockAccessor.IsNotTraversable(double, double, double, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(double, double, double, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Checks if this position can be traversed by a normal player (returns false for outside map or not yet loaded chunks)

    Dimension-aware version
  example: []
  syntax:
    content: bool IsNotTraversable(double x, double y, double z, int dim)
    parameters:
    - id: x
      type: System.Double
      description: ''
    - id: y
      type: System.Double
      description: ''
    - id: z
      type: System.Double
      description: ''
    - id: dim
      type: System.Int32
    return:
      type: System.Boolean
      description: ''
    content.vb: Function IsNotTraversable(x As Double, y As Double, z As Double, [dim] As Integer) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable*
  nameWithType.vb: IBlockAccessor.IsNotTraversable(Double, Double, Double, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(Double, Double, Double, Integer)
  name.vb: IsNotTraversable(Double, Double, Double, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(Vintagestory.API.MathTools.BlockPos)
  id: IsNotTraversable(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: IsNotTraversable(BlockPos)
  nameWithType: IBlockAccessor.IsNotTraversable(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Checks if this position can be traversed by a normal player (returns false for outside map or not yet loaded chunks)
  example: []
  syntax:
    content: bool IsNotTraversable(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function IsNotTraversable(pos As BlockPos) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable*
- uid: Vintagestory.API.Common.IBlockAccessor.Commit
  commentId: M:Vintagestory.API.Common.IBlockAccessor.Commit
  id: Commit
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: Commit()
  nameWithType: IBlockAccessor.Commit()
  fullName: Vintagestory.API.Common.IBlockAccessor.Commit()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Calling this method has no effect in normal block acessors except for:

    - Bulk update block accessor: Sets all blocks, relight all affected one chunks in one go and send blockupdates to clients in a packed format.

    - World gen block accessor: To Recalculate the heightmap in of all updated blocks in one go

    - Revertable block accessor: Same as bulk update block accessor plus stores a new history state.
  example: []
  syntax:
    content: List<BlockUpdate> Commit()
    return:
      type: System.Collections.Generic.List{Vintagestory.API.Common.BlockUpdate}
      description: List of changed blocks
    content.vb: Function Commit() As List(Of BlockUpdate)
  overload: Vintagestory.API.Common.IBlockAccessor.Commit*
- uid: Vintagestory.API.Common.IBlockAccessor.Rollback
  commentId: M:Vintagestory.API.Common.IBlockAccessor.Rollback
  id: Rollback
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: Rollback()
  nameWithType: IBlockAccessor.Rollback()
  fullName: Vintagestory.API.Common.IBlockAccessor.Rollback()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: For the bulk update block accessor reverts all the SetBlocks currently called since the last Commit()
  example: []
  syntax:
    content: void Rollback()
    content.vb: Sub Rollback()
  overload: Vintagestory.API.Common.IBlockAccessor.Rollback*
- uid: Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty(Vintagestory.API.MathTools.BlockPos)
  id: MarkBlockEntityDirty(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MarkBlockEntityDirty(BlockPos)
  nameWithType: IBlockAccessor.MarkBlockEntityDirty(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Server side call: Resends the block entity data (if present) to all clients. Triggers a block changed event on the client once received , but will not redraw the chunk. Marks also the chunk dirty so that it gets saved to disk during shutdown or next autosave.<br />

    Client side call: No effect
  example: []
  syntax:
    content: void MarkBlockEntityDirty(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub MarkBlockEntityDirty(pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty*
- uid: Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate(Vintagestory.API.MathTools.BlockPos)
  id: TriggerNeighbourBlockUpdate(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: TriggerNeighbourBlockUpdate(BlockPos)
  nameWithType: IBlockAccessor.TriggerNeighbourBlockUpdate(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Triggers the method OnNeighbourBlockChange() to all neighbour blocks at given position
  example: []
  syntax:
    content: void TriggerNeighbourBlockUpdate(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub TriggerNeighbourBlockUpdate(pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate*
- uid: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer)
  id: MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.IPlayer)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MarkBlockDirty(BlockPos, IPlayer)
  nameWithType: IBlockAccessor.MarkBlockDirty(BlockPos, IPlayer)
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.IPlayer)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Server side: Sends that block to the client (via bulk packet).  Through that packet the client will do a SetBlock on that position (which triggers a redraw if oldblockid != newblockid).<br />

    Client side: Triggers a block changed event and redraws the chunk
  example: []
  syntax:
    content: void MarkBlockDirty(BlockPos pos, IPlayer skipPlayer = null)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: skipPlayer
      type: Vintagestory.API.Common.IPlayer
      description: 'Server side: Does not send the update to this player, Client Side: No effect'
    content.vb: Sub MarkBlockDirty(pos As BlockPos, skipPlayer As IPlayer = Nothing)
  overload: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty*
- uid: Vintagestory.API.Common.IBlockAccessor.MarkBlockModified(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.MarkBlockModified(Vintagestory.API.MathTools.BlockPos)
  id: MarkBlockModified(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MarkBlockModified(BlockPos)
  nameWithType: IBlockAccessor.MarkBlockModified(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkBlockModified(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Server side: Triggers a OnNeighbourBlockChange on that position and sends that block to the client (via bulk packet), through that packet the client will do a SetBlock on that position (which triggers a redraw if oldblockid != newblockid).<br />

    Client side: Triggers a block changed event and redraws the chunk. Deletes and re-create block entities
  example: []
  syntax:
    content: void MarkBlockModified(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub MarkBlockModified(pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.MarkBlockModified*
- uid: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,System.Action)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,System.Action)
  id: MarkBlockDirty(Vintagestory.API.MathTools.BlockPos,System.Action)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MarkBlockDirty(BlockPos, Action)
  nameWithType: IBlockAccessor.MarkBlockDirty(BlockPos, Action)
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty(Vintagestory.API.MathTools.BlockPos, System.Action)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Server Side: Same as MarkBlockDirty()<br />

    Client Side: Same as MarkBlockDirty(), but also calls supplied delegate after the chunk has been re-retesselated. This can be used i.e. for block entities to dynamically switch between static models and dynamic models at exactly the right timing
  example: []
  syntax:
    content: void MarkBlockDirty(BlockPos pos, Action OnRetesselated)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: OnRetesselated
      type: System.Action
      description: ''
    content.vb: Sub MarkBlockDirty(pos As BlockPos, OnRetesselated As Action)
  overload: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty*
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightLevel(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumLightLevelType)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetLightLevel(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumLightLevelType)
  id: GetLightLevel(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumLightLevelType)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetLightLevel(BlockPos, EnumLightLevelType)
  nameWithType: IBlockAccessor.GetLightLevel(BlockPos, EnumLightLevelType)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightLevel(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.EnumLightLevelType)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the light level (0..32) at given position. If the chunk at that position is not loaded this method will return the default sunlight value
  example: []
  syntax:
    content: int GetLightLevel(BlockPos pos, EnumLightLevelType type)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: type
      type: Vintagestory.API.Common.EnumLightLevelType
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetLightLevel(pos As BlockPos, type As EnumLightLevelType) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetLightLevel*
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightLevel(System.Int32,System.Int32,System.Int32,Vintagestory.API.Common.EnumLightLevelType)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetLightLevel(System.Int32,System.Int32,System.Int32,Vintagestory.API.Common.EnumLightLevelType)
  id: GetLightLevel(System.Int32,System.Int32,System.Int32,Vintagestory.API.Common.EnumLightLevelType)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetLightLevel(int, int, int, EnumLightLevelType)
  nameWithType: IBlockAccessor.GetLightLevel(int, int, int, EnumLightLevelType)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightLevel(int, int, int, Vintagestory.API.Common.EnumLightLevelType)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns the light level (0..32) at given position. If the chunk at that position is not loaded this method will return the default sunlight value

    <br />Note this is not currently dimensionally aware
  example: []
  syntax:
    content: int GetLightLevel(int x, int y, int z, EnumLightLevelType type)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    - id: type
      type: Vintagestory.API.Common.EnumLightLevelType
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetLightLevel(x As Integer, y As Integer, z As Integer, type As EnumLightLevelType) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetLightLevel*
  nameWithType.vb: IBlockAccessor.GetLightLevel(Integer, Integer, Integer, EnumLightLevelType)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetLightLevel(Integer, Integer, Integer, Vintagestory.API.Common.EnumLightLevelType)
  name.vb: GetLightLevel(Integer, Integer, Integer, EnumLightLevelType)
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(System.Int32,System.Int32,System.Int32)
  id: GetLightRGBs(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetLightRGBs(int, int, int)
  nameWithType: IBlockAccessor.GetLightRGBs(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns the light values at given position. XYZ component = block light rgb, W component = sun light brightness

    <br />Note this is not currently dimensionally aware
  example: []
  syntax:
    content: Vec4f GetLightRGBs(int posX, int posY, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posY
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec4f
      description: ''
    content.vb: Function GetLightRGBs(posX As Integer, posY As Integer, posZ As Integer) As Vec4f
  overload: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs*
  nameWithType.vb: IBlockAccessor.GetLightRGBs(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(Integer, Integer, Integer)
  name.vb: GetLightRGBs(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(Vintagestory.API.MathTools.BlockPos)
  id: GetLightRGBs(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetLightRGBs(BlockPos)
  nameWithType: IBlockAccessor.GetLightRGBs(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the light values at given position. XYZ component = block light rgb, W component = sun light brightness
  example: []
  syntax:
    content: Vec4f GetLightRGBs(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec4f
      description: ''
    content.vb: Function GetLightRGBs(pos As BlockPos) As Vec4f
  overload: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs*
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt(System.Int32,System.Int32,System.Int32)
  id: GetLightRGBsAsInt(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetLightRGBsAsInt(int, int, int)
  nameWithType: IBlockAccessor.GetLightRGBsAsInt(int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: 'Returns the light values at given position. bit 0-23: block rgb light, bit 24-31: sun light brightness'
  example: []
  syntax:
    content: int GetLightRGBsAsInt(int posX, int posY, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posY
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetLightRGBsAsInt(posX As Integer, posY As Integer, posZ As Integer) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt*
  nameWithType.vb: IBlockAccessor.GetLightRGBsAsInt(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt(Integer, Integer, Integer)
  name.vb: GetLightRGBsAsInt(Integer, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt(Vintagestory.API.MathTools.BlockPos)
  id: GetTerrainMapheightAt(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetTerrainMapheightAt(BlockPos)
  nameWithType: IBlockAccessor.GetTerrainMapheightAt(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns the topmost solid surface position at given x/z coordinate as it was during world generation. This map is not updated after placing/removing blocks

    <br />Note this is meaningless in dimensions other than the normal world
  example: []
  syntax:
    content: int GetTerrainMapheightAt(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetTerrainMapheightAt(pos As BlockPos) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt*
- uid: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(Vintagestory.API.MathTools.BlockPos)
  id: GetRainMapHeightAt(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetRainMapHeightAt(BlockPos)
  nameWithType: IBlockAccessor.GetRainMapHeightAt(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns the topmost non-rain-permeable position at given x/z coordinate. This map is always updated after placing/removing blocks

    <br />Note this is meaningless in dimensions other than the normal world
  example: []
  syntax:
    content: int GetRainMapHeightAt(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetRainMapHeightAt(pos As BlockPos) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt*
- uid: Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall(Vintagestory.API.MathTools.BlockPos,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall(Vintagestory.API.MathTools.BlockPos,System.Int32,System.Int32)
  id: GetDistanceToRainFall(Vintagestory.API.MathTools.BlockPos,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetDistanceToRainFall(BlockPos, int, int)
  nameWithType: IBlockAccessor.GetDistanceToRainFall(BlockPos, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall(Vintagestory.API.MathTools.BlockPos, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns a number of how many blocks away there is rain fall. Does a cheap 2D bfs up to 4 blocks away. Returns 99 if none was found within 4 blocks
  example: []
  syntax:
    content: int GetDistanceToRainFall(BlockPos pos, int horziontalSearchWidth = 4, int verticalSearchWidth = 1)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: horziontalSearchWidth
      type: System.Int32
      description: Horizontal search distance, 4 default
    - id: verticalSearchWidth
      type: System.Int32
      description: Vertical search distance, 1 default
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetDistanceToRainFall(pos As BlockPos, horziontalSearchWidth As Integer = 4, verticalSearchWidth As Integer = 1) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall*
  nameWithType.vb: IBlockAccessor.GetDistanceToRainFall(BlockPos, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall(Vintagestory.API.MathTools.BlockPos, Integer, Integer)
  name.vb: GetDistanceToRainFall(BlockPos, Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(System.Int32,System.Int32)
  id: GetRainMapHeightAt(System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetRainMapHeightAt(int, int)
  nameWithType: IBlockAccessor.GetRainMapHeightAt(int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Returns the topmost non-rain-permeable position at given x/z coordinate. This map is always updated after placing/removing blocks

    <br />Note this is meaningless in dimensions other than the normal world
  example: []
  syntax:
    content: int GetRainMapHeightAt(int posX, int posZ)
    parameters:
    - id: posX
      type: System.Int32
      description: ''
    - id: posZ
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetRainMapHeightAt(posX As Integer, posZ As Integer) As Integer
  overload: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt*
  nameWithType.vb: IBlockAccessor.GetRainMapHeightAt(Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt(Integer, Integer)
  name.vb: GetRainMapHeightAt(Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetMapChunk(Vintagestory.API.MathTools.Vec2i)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetMapChunk(Vintagestory.API.MathTools.Vec2i)
  id: GetMapChunk(Vintagestory.API.MathTools.Vec2i)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetMapChunk(Vec2i)
  nameWithType: IBlockAccessor.GetMapChunk(Vec2i)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMapChunk(Vintagestory.API.MathTools.Vec2i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the map chunk at given chunk position
  example: []
  syntax:
    content: IMapChunk GetMapChunk(Vec2i chunkPos)
    parameters:
    - id: chunkPos
      type: Vintagestory.API.MathTools.Vec2i
      description: ''
    return:
      type: Vintagestory.API.Common.IMapChunk
      description: ''
    content.vb: Function GetMapChunk(chunkPos As Vec2i) As IMapChunk
  overload: Vintagestory.API.Common.IBlockAccessor.GetMapChunk*
- uid: Vintagestory.API.Common.IBlockAccessor.GetMapChunk(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetMapChunk(System.Int32,System.Int32)
  id: GetMapChunk(System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetMapChunk(int, int)
  nameWithType: IBlockAccessor.GetMapChunk(int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMapChunk(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the map chunk at given chunk position
  example: []
  syntax:
    content: IMapChunk GetMapChunk(int chunkX, int chunkZ)
    parameters:
    - id: chunkX
      type: System.Int32
      description: ''
    - id: chunkZ
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.IMapChunk
      description: ''
    content.vb: Function GetMapChunk(chunkX As Integer, chunkZ As Integer) As IMapChunk
  overload: Vintagestory.API.Common.IBlockAccessor.GetMapChunk*
  nameWithType.vb: IBlockAccessor.GetMapChunk(Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetMapChunk(Integer, Integer)
  name.vb: GetMapChunk(Integer, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  id: GetMapChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetMapChunkAtBlockPos(BlockPos)
  nameWithType: IBlockAccessor.GetMapChunkAtBlockPos(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the map chunk at given block position
  example: []
  syntax:
    content: IMapChunk GetMapChunkAtBlockPos(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.IMapChunk
      description: ''
    content.vb: Function GetMapChunkAtBlockPos(pos As BlockPos) As IMapChunk
  overload: Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos*
- uid: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  id: GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetClimateAt(BlockPos, EnumGetClimateMode, double)
  nameWithType: IBlockAccessor.GetClimateAt(BlockPos, EnumGetClimateMode, double)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.EnumGetClimateMode, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the position's current climate conditions
  example: []
  syntax:
    content: ClimateCondition GetClimateAt(BlockPos pos, EnumGetClimateMode mode = EnumGetClimateMode.NowValues, double totalDays = 0)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: mode
      type: Vintagestory.API.Common.EnumGetClimateMode
      description: WorldGenValues = values as determined by the worldgenerator, NowValues = additionally modified to take season, day/night and hemisphere into account
    - id: totalDays
      type: System.Double
      description: When mode == ForSuppliedDateValues then supply here the date. Not used param otherwise
    return:
      type: Vintagestory.API.Common.ClimateCondition
      description: ''
    content.vb: Function GetClimateAt(pos As BlockPos, mode As EnumGetClimateMode = EnumGetClimateMode.NowValues, totalDays As Double = 0) As ClimateCondition
  overload: Vintagestory.API.Common.IBlockAccessor.GetClimateAt*
  nameWithType.vb: IBlockAccessor.GetClimateAt(BlockPos, EnumGetClimateMode, Double)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.EnumGetClimateMode, Double)
  name.vb: GetClimateAt(BlockPos, EnumGetClimateMode, Double)
- uid: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ClimateCondition,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ClimateCondition,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  id: GetClimateAt(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ClimateCondition,Vintagestory.API.Common.EnumGetClimateMode,System.Double)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetClimateAt(BlockPos, ClimateCondition, EnumGetClimateMode, double)
  nameWithType: IBlockAccessor.GetClimateAt(BlockPos, ClimateCondition, EnumGetClimateMode, double)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ClimateCondition, Vintagestory.API.Common.EnumGetClimateMode, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Returns the position's climate conditions at specified date, making use of previously obtained worldgen climate conditions
  example: []
  syntax:
    content: ClimateCondition GetClimateAt(BlockPos pos, ClimateCondition baseClimate, EnumGetClimateMode mode, double totalDays)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
    - id: baseClimate
      type: Vintagestory.API.Common.ClimateCondition
    - id: mode
      type: Vintagestory.API.Common.EnumGetClimateMode
    - id: totalDays
      type: System.Double
    return:
      type: Vintagestory.API.Common.ClimateCondition
    content.vb: Function GetClimateAt(pos As BlockPos, baseClimate As ClimateCondition, mode As EnumGetClimateMode, totalDays As Double) As ClimateCondition
  overload: Vintagestory.API.Common.IBlockAccessor.GetClimateAt*
  nameWithType.vb: IBlockAccessor.GetClimateAt(BlockPos, ClimateCondition, EnumGetClimateMode, Double)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ClimateCondition, Vintagestory.API.Common.EnumGetClimateMode, Double)
  name.vb: GetClimateAt(BlockPos, ClimateCondition, EnumGetClimateMode, Double)
- uid: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: GetClimateAt(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetClimateAt(BlockPos, int)
  nameWithType: IBlockAccessor.GetClimateAt(BlockPos, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Fast shortcut method for the clound renderer
  example: []
  syntax:
    content: ClimateCondition GetClimateAt(BlockPos pos, int climate)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: climate
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.Common.ClimateCondition
      description: ''
    content.vb: Function GetClimateAt(pos As BlockPos, climate As Integer) As ClimateCondition
  overload: Vintagestory.API.Common.IBlockAccessor.GetClimateAt*
  nameWithType.vb: IBlockAccessor.GetClimateAt(BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetClimateAt(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: GetClimateAt(BlockPos, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.Vec3d)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.Vec3d)
  id: GetWindSpeedAt(Vintagestory.API.MathTools.Vec3d)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetWindSpeedAt(Vec3d)
  nameWithType: IBlockAccessor.GetWindSpeedAt(Vec3d)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.Vec3d)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves the wind speed for given position
  example: []
  syntax:
    content: Vec3d GetWindSpeedAt(Vec3d pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    content.vb: Function GetWindSpeedAt(pos As Vec3d) As Vec3d
  overload: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt*
- uid: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.BlockPos)
  id: GetWindSpeedAt(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetWindSpeedAt(BlockPos)
  nameWithType: IBlockAccessor.GetWindSpeedAt(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves the wind speed for given position
  example: []
  syntax:
    content: Vec3d GetWindSpeedAt(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    content.vb: Function GetWindSpeedAt(pos As BlockPos) As Vec3d
  overload: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt*
- uid: Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged(System.Int32,System.Int32,Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged(System.Int32,System.Int32,Vintagestory.API.MathTools.BlockPos)
  id: MarkAbsorptionChanged(System.Int32,System.Int32,Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MarkAbsorptionChanged(int, int, BlockPos)
  nameWithType: IBlockAccessor.MarkAbsorptionChanged(int, int, BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged(int, int, Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Used by the chisel block when enough chiseled have been removed and the blocks light absorption changes as a result of that
  example: []
  syntax:
    content: void MarkAbsorptionChanged(int oldAbsorption, int newAbsorption, BlockPos pos)
    parameters:
    - id: oldAbsorption
      type: System.Int32
      description: ''
    - id: newAbsorption
      type: System.Int32
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub MarkAbsorptionChanged(oldAbsorption As Integer, newAbsorption As Integer, pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged*
  nameWithType.vb: IBlockAccessor.MarkAbsorptionChanged(Integer, Integer, BlockPos)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged(Integer, Integer, Vintagestory.API.MathTools.BlockPos)
  name.vb: MarkAbsorptionChanged(Integer, Integer, BlockPos)
- uid: Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight(System.Byte[],Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight(System.Byte[],Vintagestory.API.MathTools.BlockPos)
  id: RemoveBlockLight(System.Byte[],Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: RemoveBlockLight(byte[], BlockPos)
  nameWithType: IBlockAccessor.RemoveBlockLight(byte[], BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight(byte[], Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Call this on OnBlockBroken() when your block entity modifies the blocks light range. That way the lighting task can still retrieve the block entity before its gone.
  example: []
  syntax:
    content: void RemoveBlockLight(byte[] oldLightHsV, BlockPos pos)
    parameters:
    - id: oldLightHsV
      type: System.Byte[]
      description: ''
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub RemoveBlockLight(oldLightHsV As Byte(), pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight*
  nameWithType.vb: IBlockAccessor.RemoveBlockLight(Byte(), BlockPos)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight(Byte(), Vintagestory.API.MathTools.BlockPos)
  name.vb: RemoveBlockLight(Byte(), BlockPos)
- uid: Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing)
  id: SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SetDecor(Block, BlockPos, BlockFacing)
  nameWithType: IBlockAccessor.SetDecor(Block, BlockPos, BlockFacing)
  fullName: Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockFacing)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Add a decor block to the side of an existing block. Use air block (id 0) to remove a decor.<br />
  example: []
  syntax:
    content: bool SetDecor(Block block, BlockPos position, BlockFacing onFace)
    parameters:
    - id: block
      type: Vintagestory.API.Common.Block
      description: ''
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: onFace
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    return:
      type: System.Boolean
      description: True if the decor was sucessfully set
    content.vb: Function SetDecor(block As Block, position As BlockPos, onFace As BlockFacing) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.SetDecor*
- uid: Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: SetDecor(Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: SetDecor(Block, BlockPos, int)
  nameWithType: IBlockAccessor.SetDecor(Block, BlockPos, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Add a decor block to a specific sub-position on the side of an existing block. Use air block (id 0) to remove a decor.<br />
  example: []
  syntax:
    content: bool SetDecor(Block block, BlockPos position, int decorIndex)
    parameters:
    - id: block
      type: Vintagestory.API.Common.Block
      description: ''
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: decorIndex
      type: System.Int32
      description: You can get this value via <xref href="Vintagestory.API.Common.BlockSelection.ToDecorIndex" data-throw-if-not-resolved="false"></xref> or via <xref href="Vintagestory.API.Common.BlockSelection.GetDecorIndex(Vintagestory.API.MathTools.BlockFacing%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.<br />It can include a subPosition for cave art etc.
    return:
      type: System.Boolean
      description: True if the decor was sucessfully set
    content.vb: Function SetDecor(block As Block, position As BlockPos, decorIndex As Integer) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.SetDecor*
  nameWithType.vb: IBlockAccessor.SetDecor(Block, BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SetDecor(Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: SetDecor(Block, BlockPos, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.GetDecors(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetDecors(Vintagestory.API.MathTools.BlockPos)
  id: GetDecors(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetDecors(BlockPos)
  nameWithType: IBlockAccessor.GetDecors(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetDecors(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Get a list of all decors at this position
  example: []
  syntax:
    content: >-
      [Obsolete("Use Dictionary<int, Block> GetSubDecors(BlockPos position)")]

      Block[] GetDecors(BlockPos position)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: Vintagestory.API.Common.Block[]
      description: null if this block has no decors. Otherwise a 6 element long list of decor blocks, any of which may be null if not set
    content.vb: >-
      <Obsolete("Use Dictionary<int, Block> GetSubDecors(BlockPos position)")>

      Function GetDecors(position As BlockPos) As Block()
  overload: Vintagestory.API.Common.IBlockAccessor.GetDecors*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Dictionary<int, Block> GetSubDecors(BlockPos position)
- uid: Vintagestory.API.Common.IBlockAccessor.GetSubDecors(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetSubDecors(Vintagestory.API.MathTools.BlockPos)
  id: GetSubDecors(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetSubDecors(BlockPos)
  nameWithType: IBlockAccessor.GetSubDecors(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetSubDecors(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Get a list of all decors at this position
  example: []
  syntax:
    content: Dictionary<int, Block> GetSubDecors(BlockPos position)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block}
      description: null if this block position has no decors. Otherwise, a Dictionary with the index being the faceAndSubposition  (subposition used for cave art etc.)
    content.vb: Function GetSubDecors(position As BlockPos) As Dictionary(Of Integer, Block)
  overload: Vintagestory.API.Common.IBlockAccessor.GetSubDecors*
- uid: Vintagestory.API.Common.IBlockAccessor.GetDecor(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetDecor(Vintagestory.API.MathTools.BlockPos,System.Int32)
  id: GetDecor(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: GetDecor(BlockPos, int)
  nameWithType: IBlockAccessor.GetDecor(BlockPos, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetDecor(Vintagestory.API.MathTools.BlockPos, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Retrieves a single decor at given position
  example: []
  syntax:
    content: Block GetDecor(BlockPos pos, int decorIndex)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: decorIndex
      type: System.Int32
      description: You can get this value via <xref href="Vintagestory.API.Common.BlockSelection.ToDecorIndex" data-throw-if-not-resolved="false"></xref>
    return:
      type: Vintagestory.API.Common.Block
      description: ''
    content.vb: Function GetDecor(pos As BlockPos, decorIndex As Integer) As Block
  overload: Vintagestory.API.Common.IBlockAccessor.GetDecor*
  nameWithType.vb: IBlockAccessor.GetDecor(BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetDecor(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: GetDecor(BlockPos, Integer)
- uid: Vintagestory.API.Common.IBlockAccessor.BreakDecor(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  commentId: M:Vintagestory.API.Common.IBlockAccessor.BreakDecor(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  id: BreakDecor(Vintagestory.API.MathTools.BlockPos,Vintagestory.API.MathTools.BlockFacing,System.Nullable{System.Int32})
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: BreakDecor(BlockPos, BlockFacing, int?)
  nameWithType: IBlockAccessor.BreakDecor(BlockPos, BlockFacing, int?)
  fullName: Vintagestory.API.Common.IBlockAccessor.BreakDecor(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockFacing, int?)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Removes all decors at given position, drops items if set
  example: []
  syntax:
    content: bool BreakDecor(BlockPos pos, BlockFacing side = null, int? decorIndex = null)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    - id: side
      type: Vintagestory.API.MathTools.BlockFacing
      description: If not null, breaks all the decor on given block face, otherwise the decor blocks on all sides are removed
    - id: decorIndex
      type: System.Nullable{System.Int32}
      description: If not null breaks only this part of the decor for give face. You can get this value via <xref href="Vintagestory.API.Common.BlockSelection.ToDecorIndex" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: True if a decor was removed
    content.vb: Function BreakDecor(pos As BlockPos, side As BlockFacing = Nothing, decorIndex As Integer? = Nothing) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.BreakDecor*
  nameWithType.vb: IBlockAccessor.BreakDecor(BlockPos, BlockFacing, Integer?)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.BreakDecor(Vintagestory.API.MathTools.BlockPos, Vintagestory.API.MathTools.BlockFacing, Integer?)
  name.vb: BreakDecor(BlockPos, BlockFacing, Integer?)
- uid: Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified(Vintagestory.API.MathTools.BlockPos)
  id: MarkChunkDecorsModified(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: MarkChunkDecorsModified(BlockPos)
  nameWithType: IBlockAccessor.MarkChunkDecorsModified(BlockPos)
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: >-
    Server: Marks this position as required for resending to the client

    Client: No effect
  example: []
  syntax:
    content: void MarkChunkDecorsModified(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Sub MarkChunkDecorsModified(pos As BlockPos)
  overload: Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified*
- uid: Vintagestory.API.Common.IBlockAccessor.IsSideSolid(System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.IsSideSolid(System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  id: IsSideSolid(System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.BlockFacing)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: IsSideSolid(int, int, int, BlockFacing)
  nameWithType: IBlockAccessor.IsSideSolid(int, int, int, BlockFacing)
  fullName: Vintagestory.API.Common.IBlockAccessor.IsSideSolid(int, int, int, Vintagestory.API.MathTools.BlockFacing)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Tests whether a side at the specified position is solid - testing both fluids layer (which could be ice) and solid blocks layer
  example: []
  syntax:
    content: bool IsSideSolid(int x, int y, int z, BlockFacing facing)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function IsSideSolid(x As Integer, y As Integer, z As Integer, facing As BlockFacing) As Boolean
  overload: Vintagestory.API.Common.IBlockAccessor.IsSideSolid*
  nameWithType.vb: IBlockAccessor.IsSideSolid(Integer, Integer, Integer, BlockFacing)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.IsSideSolid(Integer, Integer, Integer, Vintagestory.API.MathTools.BlockFacing)
  name.vb: IsSideSolid(Integer, Integer, Integer, BlockFacing)
- uid: Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension(Vintagestory.API.MathTools.Vec3d)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension(Vintagestory.API.MathTools.Vec3d)
  id: CreateMiniDimension(Vintagestory.API.MathTools.Vec3d)
  parent: Vintagestory.API.Common.IBlockAccessor
  langs:
  - csharp
  - vb
  name: CreateMiniDimension(Vec3d)
  nameWithType: IBlockAccessor.CreateMiniDimension(Vec3d)
  fullName: Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension(Vintagestory.API.MathTools.Vec3d)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Common
  summary: Used by World Edit to create previews, ships etc.
  example: []
  syntax:
    content: IMiniDimension CreateMiniDimension(Vec3d position)
    parameters:
    - id: position
      type: Vintagestory.API.MathTools.Vec3d
    return:
      type: Vintagestory.API.Common.IMiniDimension
    content.vb: Function CreateMiniDimension(position As Vec3d) As IMiniDimension
  overload: Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension*
references:
- uid: Vintagestory.API.Common
  commentId: N:Vintagestory.API.Common
  href: Vintagestory.html
  name: Vintagestory.API.Common
  nameWithType: Vintagestory.API.Common
  fullName: Vintagestory.API.Common
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: Vintagestory.API.Common.IBlockAccessor.ChunkSize*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.ChunkSize
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_ChunkSize
  name: ChunkSize
  nameWithType: IBlockAccessor.ChunkSize
  fullName: Vintagestory.API.Common.IBlockAccessor.ChunkSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Common.IBlockAccessor.RegionSize*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.RegionSize
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_RegionSize
  name: RegionSize
  nameWithType: IBlockAccessor.RegionSize
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionSize
- uid: Vintagestory.API.Common.IBlockAccessor.MapSizeX*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MapSizeX
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MapSizeX
  name: MapSizeX
  nameWithType: IBlockAccessor.MapSizeX
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSizeX
- uid: Vintagestory.API.Common.IBlockAccessor.MapSizeY*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MapSizeY
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MapSizeY
  name: MapSizeY
  nameWithType: IBlockAccessor.MapSizeY
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSizeY
- uid: Vintagestory.API.Common.IBlockAccessor.MapSizeZ*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MapSizeZ
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MapSizeZ
  name: MapSizeZ
  nameWithType: IBlockAccessor.MapSizeZ
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSizeZ
- uid: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_RegionMapSizeX
  name: RegionMapSizeX
  nameWithType: IBlockAccessor.RegionMapSizeX
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeX
- uid: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_RegionMapSizeY
  name: RegionMapSizeY
  nameWithType: IBlockAccessor.RegionMapSizeY
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeY
- uid: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_RegionMapSizeZ
  name: RegionMapSizeZ
  nameWithType: IBlockAccessor.RegionMapSizeZ
  fullName: Vintagestory.API.Common.IBlockAccessor.RegionMapSizeZ
- uid: Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_UpdateSnowAccumMap
  name: UpdateSnowAccumMap
  nameWithType: IBlockAccessor.UpdateSnowAccumMap
  fullName: Vintagestory.API.Common.IBlockAccessor.UpdateSnowAccumMap
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Vintagestory.API.Common.IBlockAccessor.MapSize*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MapSize
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MapSize
  name: MapSize
  nameWithType: IBlockAccessor.MapSize
  fullName: Vintagestory.API.Common.IBlockAccessor.MapSize
- uid: Vintagestory.API.MathTools.Vec3i
  commentId: T:Vintagestory.API.MathTools.Vec3i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3i.html
  name: Vec3i
  nameWithType: Vec3i
  fullName: Vintagestory.API.MathTools.Vec3i
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: Vintagestory.API.Common.IBlockAccessor.GetChunk*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetChunk
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetChunk_System_Int32_System_Int32_System_Int32_
  name: GetChunk
  nameWithType: IBlockAccessor.GetChunk
  fullName: Vintagestory.API.Common.IBlockAccessor.GetChunk
- uid: Vintagestory.API.Common.IWorldChunk
  commentId: T:Vintagestory.API.Common.IWorldChunk
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IWorldChunk.html
  name: IWorldChunk
  nameWithType: IWorldChunk
  fullName: Vintagestory.API.Common.IWorldChunk
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Vintagestory.API.Common.IBlockAccessor.GetMapRegion*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetMapRegion
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetMapRegion_System_Int32_System_Int32_
  name: GetMapRegion
  nameWithType: IBlockAccessor.GetMapRegion
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMapRegion
- uid: Vintagestory.API.Common.IMapRegion
  commentId: T:Vintagestory.API.Common.IMapRegion
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IMapRegion.html
  name: IMapRegion
  nameWithType: IMapRegion
  fullName: Vintagestory.API.Common.IMapRegion
- uid: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetChunkAtBlockPos_System_Int32_System_Int32_System_Int32_
  name: GetChunkAtBlockPos
  nameWithType: IBlockAccessor.GetChunkAtBlockPos
  fullName: Vintagestory.API.Common.IBlockAccessor.GetChunkAtBlockPos
- uid: Vintagestory.API.MathTools.BlockPos
  commentId: T:Vintagestory.API.MathTools.BlockPos
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockPos.html
  name: BlockPos
  nameWithType: BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockId*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetBlockId
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlockId_System_Int32_System_Int32_System_Int32_
  name: GetBlockId
  nameWithType: IBlockAccessor.GetBlockId
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockId
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  isExternal: true
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlock_Vintagestory_API_MathTools_BlockPos_System_Int32_
  name: GetBlock(BlockPos, int)
  nameWithType: IBlockAccessor.GetBlock(BlockPos, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos, int)
  nameWithType.vb: IBlockAccessor.GetBlock(BlockPos, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos, Integer)
  name.vb: GetBlock(BlockPos, Integer)
  spec.csharp:
  - uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
    name: GetBlock
    href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlock_Vintagestory_API_MathTools_BlockPos_System_Int32_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(Vintagestory.API.MathTools.BlockPos,System.Int32)
    name: GetBlock
    href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlock_Vintagestory_API_MathTools_BlockPos_System_Int32_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetBlock
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlock_System_Int32_System_Int32_System_Int32_
  name: GetBlock
  nameWithType: IBlockAccessor.GetBlock
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock
- uid: Vintagestory.API.Common.Block
  commentId: T:Vintagestory.API.Common.Block
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.Block.html
  name: Block
  nameWithType: Block
  fullName: Vintagestory.API.Common.Block
- uid: Vintagestory.API.Common.IBlockAccessor
  commentId: T:Vintagestory.API.Common.IBlockAccessor
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IBlockAccessor.html
  name: IBlockAccessor
  nameWithType: IBlockAccessor
  fullName: Vintagestory.API.Common.IBlockAccessor
- uid: Vintagestory.API.Common.BlockLayersAccess
  commentId: T:Vintagestory.API.Common.BlockLayersAccess
  href: Vintagestory.API.Common.BlockLayersAccess.html
  name: BlockLayersAccess
  nameWithType: BlockLayersAccess
  fullName: Vintagestory.API.Common.BlockLayersAccess
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlockOrNull_System_Int32_System_Int32_System_Int32_System_Int32_
  name: GetBlockOrNull
  nameWithType: IBlockAccessor.GetBlockOrNull
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockOrNull
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.Common.IBlockAccessor
  isExternal: true
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlock_System_Int32_System_Int32_System_Int32_System_Int32_
  name: GetBlock(int, int, int, int)
  nameWithType: IBlockAccessor.GetBlock(int, int, int, int)
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlock(int, int, int, int)
  nameWithType.vb: IBlockAccessor.GetBlock(Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.GetBlock(Integer, Integer, Integer, Integer)
  name.vb: GetBlock(Integer, Integer, Integer, Integer)
  spec.csharp:
  - uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
    name: GetBlock
    href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlock_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Common.IBlockAccessor.GetBlock(System.Int32,System.Int32,System.Int32,System.Int32)
    name: GetBlock
    href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlock_System_Int32_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetMostSolidBlock_System_Int32_System_Int32_System_Int32_
  name: GetMostSolidBlock
  nameWithType: IBlockAccessor.GetMostSolidBlock
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMostSolidBlock
- uid: Vintagestory.API.Common.IBlockAccessor.WalkBlocks*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.WalkBlocks
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_WalkBlocks_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_System_Action_Vintagestory_API_Common_Block_System_Int32_System_Int32_System_Int32__System_Boolean_
  name: WalkBlocks
  nameWithType: IBlockAccessor.WalkBlocks
  fullName: Vintagestory.API.Common.IBlockAccessor.WalkBlocks
- uid: System.Action{Vintagestory.API.Common.Block,System.Int32,System.Int32,System.Int32}
  commentId: T:System.Action{Vintagestory.API.Common.Block,System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.Action`4
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<Block, int, int, int>
  nameWithType: Action<Block, int, int, int>
  fullName: System.Action<Vintagestory.API.Common.Block, int, int, int>
  nameWithType.vb: Action(Of Block, Integer, Integer, Integer)
  fullName.vb: System.Action(Of Vintagestory.API.Common.Block, Integer, Integer, Integer)
  name.vb: Action(Of Block, Integer, Integer, Integer)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Action`4
  commentId: T:System.Action`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.SearchBlocks*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.SearchBlocks
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SearchBlocks_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_ActionConsumable_Vintagestory_API_Common_Block_Vintagestory_API_MathTools_BlockPos__System_Action_System_Int32_System_Int32_System_Int32__
  name: SearchBlocks
  nameWithType: IBlockAccessor.SearchBlocks
  fullName: Vintagestory.API.Common.IBlockAccessor.SearchBlocks
- uid: Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos}
  commentId: T:Vintagestory.API.Common.ActionConsumable{Vintagestory.API.Common.Block,Vintagestory.API.MathTools.BlockPos}
  parent: Vintagestory.API.Common
  definition: Vintagestory.API.Common.ActionConsumable`2
  href: Vintagestory.API.Common.ActionConsumable-2.html
  name: ActionConsumable<Block, BlockPos>
  nameWithType: ActionConsumable<Block, BlockPos>
  fullName: Vintagestory.API.Common.ActionConsumable<Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos>
  nameWithType.vb: ActionConsumable(Of Block, BlockPos)
  fullName.vb: Vintagestory.API.Common.ActionConsumable(Of Vintagestory.API.Common.Block, Vintagestory.API.MathTools.BlockPos)
  name.vb: ActionConsumable(Of Block, BlockPos)
  spec.csharp:
  - uid: Vintagestory.API.Common.ActionConsumable`2
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-2.html
  - name: <
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: '>'
  spec.vb:
  - uid: Vintagestory.API.Common.ActionConsumable`2
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: )
- uid: System.Action{System.Int32,System.Int32,System.Int32}
  commentId: T:System.Action{System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<int, int, int>
  nameWithType: Action<int, int, int>
  fullName: System.Action<int, int, int>
  nameWithType.vb: Action(Of Integer, Integer, Integer)
  fullName.vb: System.Action(Of Integer, Integer, Integer)
  name.vb: Action(Of Integer, Integer, Integer)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Vintagestory.API.Common.ActionConsumable`2
  commentId: T:Vintagestory.API.Common.ActionConsumable`2
  href: Vintagestory.API.Common.ActionConsumable-2.html
  name: ActionConsumable<T1, T2>
  nameWithType: ActionConsumable<T1, T2>
  fullName: Vintagestory.API.Common.ActionConsumable<T1, T2>
  nameWithType.vb: ActionConsumable(Of T1, T2)
  fullName.vb: Vintagestory.API.Common.ActionConsumable(Of T1, T2)
  name.vb: ActionConsumable(Of T1, T2)
  spec.csharp:
  - uid: Vintagestory.API.Common.ActionConsumable`2
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-2.html
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: Vintagestory.API.Common.ActionConsumable`2
    name: ActionConsumable
    href: Vintagestory.API.Common.ActionConsumable-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SearchFluidBlocks_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_ActionConsumable_Vintagestory_API_Common_Block_Vintagestory_API_MathTools_BlockPos__System_Action_System_Int32_System_Int32_System_Int32__
  name: SearchFluidBlocks
  nameWithType: IBlockAccessor.SearchFluidBlocks
  fullName: Vintagestory.API.Common.IBlockAccessor.SearchFluidBlocks
- uid: Vintagestory.API.Common.IBlockAccessor.WalkStructures*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.WalkStructures
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_WalkStructures_Vintagestory_API_MathTools_BlockPos_System_Action_Vintagestory_API_Common_GeneratedStructure__
  name: WalkStructures
  nameWithType: IBlockAccessor.WalkStructures
  fullName: Vintagestory.API.Common.IBlockAccessor.WalkStructures
- uid: System.Action{Vintagestory.API.Common.GeneratedStructure}
  commentId: T:System.Action{Vintagestory.API.Common.GeneratedStructure}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<GeneratedStructure>
  nameWithType: Action<GeneratedStructure>
  fullName: System.Action<Vintagestory.API.Common.GeneratedStructure>
  nameWithType.vb: Action(Of GeneratedStructure)
  fullName.vb: System.Action(Of Vintagestory.API.Common.GeneratedStructure)
  name.vb: Action(Of GeneratedStructure)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Vintagestory.API.Common.GeneratedStructure
    name: GeneratedStructure
    href: Vintagestory.API.Common.GeneratedStructure.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.GeneratedStructure
    name: GeneratedStructure
    href: Vintagestory.API.Common.GeneratedStructure.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.SetBlock*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.SetBlock
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SetBlock_System_Int32_Vintagestory_API_MathTools_BlockPos_
  name: SetBlock
  nameWithType: IBlockAccessor.SetBlock
  fullName: Vintagestory.API.Common.IBlockAccessor.SetBlock
- uid: Vintagestory.API.Common.ItemStack
  commentId: T:Vintagestory.API.Common.ItemStack
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ItemStack.html
  name: ItemStack
  nameWithType: ItemStack
  fullName: Vintagestory.API.Common.ItemStack
- uid: Vintagestory.API.Common.IBlockAccessor.ExchangeBlock*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.ExchangeBlock
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_ExchangeBlock_System_Int32_Vintagestory_API_MathTools_BlockPos_
  name: ExchangeBlock
  nameWithType: IBlockAccessor.ExchangeBlock
  fullName: Vintagestory.API.Common.IBlockAccessor.ExchangeBlock
- uid: Vintagestory.API.Common.IBlockAccessor.BreakBlock*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.BreakBlock
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_BreakBlock_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_IPlayer_System_Single_
  name: BreakBlock
  nameWithType: IBlockAccessor.BreakBlock
  fullName: Vintagestory.API.Common.IBlockAccessor.BreakBlock
- uid: Vintagestory.API.Common.IPlayer
  commentId: T:Vintagestory.API.Common.IPlayer
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IPlayer.html
  name: IPlayer
  nameWithType: IPlayer
  fullName: Vintagestory.API.Common.IPlayer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Vintagestory.API.Common.IBlockAccessor.DamageBlock*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.DamageBlock
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_DamageBlock_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockFacing_System_Single_
  name: DamageBlock
  nameWithType: IBlockAccessor.DamageBlock
  fullName: Vintagestory.API.Common.IBlockAccessor.DamageBlock
- uid: Vintagestory.API.MathTools.BlockFacing
  commentId: T:Vintagestory.API.MathTools.BlockFacing
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockFacing.html
  name: BlockFacing
  nameWithType: BlockFacing
  fullName: Vintagestory.API.MathTools.BlockFacing
- uid: Vintagestory.API.Common.AssetLocation
  commentId: T:Vintagestory.API.Common.AssetLocation
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.AssetLocation.html
  name: AssetLocation
  nameWithType: AssetLocation
  fullName: Vintagestory.API.Common.AssetLocation
- uid: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SpawnBlockEntity_System_String_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_ItemStack_
  name: SpawnBlockEntity
  nameWithType: IBlockAccessor.SpawnBlockEntity
  fullName: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  commentId: M:Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
  parent: Vintagestory.API.Common.IBlockAccessor
  isExternal: true
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SpawnBlockEntity_System_String_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_ItemStack_
  name: SpawnBlockEntity(string, BlockPos, ItemStack)
  nameWithType: IBlockAccessor.SpawnBlockEntity(string, BlockPos, ItemStack)
  fullName: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(string, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ItemStack)
  nameWithType.vb: IBlockAccessor.SpawnBlockEntity(String, BlockPos, ItemStack)
  fullName.vb: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(String, Vintagestory.API.MathTools.BlockPos, Vintagestory.API.Common.ItemStack)
  name.vb: SpawnBlockEntity(String, BlockPos, ItemStack)
  spec.csharp:
  - uid: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
    name: SpawnBlockEntity
    href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SpawnBlockEntity_System_String_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_ItemStack_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.ItemStack
    name: ItemStack
    href: Vintagestory.API.Common.ItemStack.html
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Common.IBlockAccessor.SpawnBlockEntity(System.String,Vintagestory.API.MathTools.BlockPos,Vintagestory.API.Common.ItemStack)
    name: SpawnBlockEntity
    href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SpawnBlockEntity_System_String_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_ItemStack_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Vintagestory.API.MathTools.BlockPos
    name: BlockPos
    href: Vintagestory.API.MathTools.BlockPos.html
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.ItemStack
    name: ItemStack
    href: Vintagestory.API.Common.ItemStack.html
  - name: )
- uid: Vintagestory.API.Common.BlockEntity
  commentId: T:Vintagestory.API.Common.BlockEntity
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.BlockEntity.html
  name: BlockEntity
  nameWithType: BlockEntity
  fullName: Vintagestory.API.Common.BlockEntity
- uid: Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_RemoveBlockEntity_Vintagestory_API_MathTools_BlockPos_
  name: RemoveBlockEntity
  nameWithType: IBlockAccessor.RemoveBlockEntity
  fullName: Vintagestory.API.Common.IBlockAccessor.RemoveBlockEntity
- uid: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetBlockEntity
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetBlockEntity_Vintagestory_API_MathTools_BlockPos_
  name: GetBlockEntity
  nameWithType: IBlockAccessor.GetBlockEntity
  fullName: Vintagestory.API.Common.IBlockAccessor.GetBlockEntity
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Vintagestory.API.Common.IBlockAccessor.IsValidPos*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.IsValidPos
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_IsValidPos_System_Int32_System_Int32_System_Int32_
  name: IsValidPos
  nameWithType: IBlockAccessor.IsValidPos
  fullName: Vintagestory.API.Common.IBlockAccessor.IsValidPos
- uid: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.IsNotTraversable
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_IsNotTraversable_System_Double_System_Double_System_Double_
  name: IsNotTraversable
  nameWithType: IBlockAccessor.IsNotTraversable
  fullName: Vintagestory.API.Common.IBlockAccessor.IsNotTraversable
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Vintagestory.API.Common.IBlockAccessor.Commit*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.Commit
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_Commit
  name: Commit
  nameWithType: IBlockAccessor.Commit
  fullName: Vintagestory.API.Common.IBlockAccessor.Commit
- uid: System.Collections.Generic.List{Vintagestory.API.Common.BlockUpdate}
  commentId: T:System.Collections.Generic.List{Vintagestory.API.Common.BlockUpdate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<BlockUpdate>
  nameWithType: List<BlockUpdate>
  fullName: System.Collections.Generic.List<Vintagestory.API.Common.BlockUpdate>
  nameWithType.vb: List(Of BlockUpdate)
  fullName.vb: System.Collections.Generic.List(Of Vintagestory.API.Common.BlockUpdate)
  name.vb: List(Of BlockUpdate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Vintagestory.API.Common.BlockUpdate
    name: BlockUpdate
    href: Vintagestory.API.Common.BlockUpdate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Vintagestory.API.Common.BlockUpdate
    name: BlockUpdate
    href: Vintagestory.API.Common.BlockUpdate.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Common.IBlockAccessor.Rollback*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.Rollback
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_Rollback
  name: Rollback
  nameWithType: IBlockAccessor.Rollback
  fullName: Vintagestory.API.Common.IBlockAccessor.Rollback
- uid: Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MarkBlockEntityDirty_Vintagestory_API_MathTools_BlockPos_
  name: MarkBlockEntityDirty
  nameWithType: IBlockAccessor.MarkBlockEntityDirty
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkBlockEntityDirty
- uid: Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_TriggerNeighbourBlockUpdate_Vintagestory_API_MathTools_BlockPos_
  name: TriggerNeighbourBlockUpdate
  nameWithType: IBlockAccessor.TriggerNeighbourBlockUpdate
  fullName: Vintagestory.API.Common.IBlockAccessor.TriggerNeighbourBlockUpdate
- uid: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MarkBlockDirty_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_IPlayer_
  name: MarkBlockDirty
  nameWithType: IBlockAccessor.MarkBlockDirty
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkBlockDirty
- uid: Vintagestory.API.Common.IBlockAccessor.MarkBlockModified*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MarkBlockModified
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MarkBlockModified_Vintagestory_API_MathTools_BlockPos_
  name: MarkBlockModified
  nameWithType: IBlockAccessor.MarkBlockModified
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkBlockModified
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightLevel*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetLightLevel
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetLightLevel_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_EnumLightLevelType_
  name: GetLightLevel
  nameWithType: IBlockAccessor.GetLightLevel
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightLevel
- uid: Vintagestory.API.Common.EnumLightLevelType
  commentId: T:Vintagestory.API.Common.EnumLightLevelType
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.EnumLightLevelType.html
  name: EnumLightLevelType
  nameWithType: EnumLightLevelType
  fullName: Vintagestory.API.Common.EnumLightLevelType
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetLightRGBs
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetLightRGBs_System_Int32_System_Int32_System_Int32_
  name: GetLightRGBs
  nameWithType: IBlockAccessor.GetLightRGBs
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightRGBs
- uid: Vintagestory.API.MathTools.Vec4f
  commentId: T:Vintagestory.API.MathTools.Vec4f
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec4f.html
  name: Vec4f
  nameWithType: Vec4f
  fullName: Vintagestory.API.MathTools.Vec4f
- uid: Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetLightRGBsAsInt_System_Int32_System_Int32_System_Int32_
  name: GetLightRGBsAsInt
  nameWithType: IBlockAccessor.GetLightRGBsAsInt
  fullName: Vintagestory.API.Common.IBlockAccessor.GetLightRGBsAsInt
- uid: Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetTerrainMapheightAt_Vintagestory_API_MathTools_BlockPos_
  name: GetTerrainMapheightAt
  nameWithType: IBlockAccessor.GetTerrainMapheightAt
  fullName: Vintagestory.API.Common.IBlockAccessor.GetTerrainMapheightAt
- uid: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetRainMapHeightAt_Vintagestory_API_MathTools_BlockPos_
  name: GetRainMapHeightAt
  nameWithType: IBlockAccessor.GetRainMapHeightAt
  fullName: Vintagestory.API.Common.IBlockAccessor.GetRainMapHeightAt
- uid: Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetDistanceToRainFall_Vintagestory_API_MathTools_BlockPos_System_Int32_System_Int32_
  name: GetDistanceToRainFall
  nameWithType: IBlockAccessor.GetDistanceToRainFall
  fullName: Vintagestory.API.Common.IBlockAccessor.GetDistanceToRainFall
- uid: Vintagestory.API.Common.IBlockAccessor.GetMapChunk*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetMapChunk
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetMapChunk_Vintagestory_API_MathTools_Vec2i_
  name: GetMapChunk
  nameWithType: IBlockAccessor.GetMapChunk
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMapChunk
- uid: Vintagestory.API.MathTools.Vec2i
  commentId: T:Vintagestory.API.MathTools.Vec2i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec2i.html
  name: Vec2i
  nameWithType: Vec2i
  fullName: Vintagestory.API.MathTools.Vec2i
- uid: Vintagestory.API.Common.IMapChunk
  commentId: T:Vintagestory.API.Common.IMapChunk
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IMapChunk.html
  name: IMapChunk
  nameWithType: IMapChunk
  fullName: Vintagestory.API.Common.IMapChunk
- uid: Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetMapChunkAtBlockPos_Vintagestory_API_MathTools_BlockPos_
  name: GetMapChunkAtBlockPos
  nameWithType: IBlockAccessor.GetMapChunkAtBlockPos
  fullName: Vintagestory.API.Common.IBlockAccessor.GetMapChunkAtBlockPos
- uid: Vintagestory.API.Common.IBlockAccessor.GetClimateAt*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetClimateAt
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetClimateAt_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_Common_EnumGetClimateMode_System_Double_
  name: GetClimateAt
  nameWithType: IBlockAccessor.GetClimateAt
  fullName: Vintagestory.API.Common.IBlockAccessor.GetClimateAt
- uid: Vintagestory.API.Common.EnumGetClimateMode
  commentId: T:Vintagestory.API.Common.EnumGetClimateMode
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.EnumGetClimateMode.html
  name: EnumGetClimateMode
  nameWithType: EnumGetClimateMode
  fullName: Vintagestory.API.Common.EnumGetClimateMode
- uid: Vintagestory.API.Common.ClimateCondition
  commentId: T:Vintagestory.API.Common.ClimateCondition
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.ClimateCondition.html
  name: ClimateCondition
  nameWithType: ClimateCondition
  fullName: Vintagestory.API.Common.ClimateCondition
- uid: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetWindSpeedAt_Vintagestory_API_MathTools_Vec3d_
  name: GetWindSpeedAt
  nameWithType: IBlockAccessor.GetWindSpeedAt
  fullName: Vintagestory.API.Common.IBlockAccessor.GetWindSpeedAt
- uid: Vintagestory.API.MathTools.Vec3d
  commentId: T:Vintagestory.API.MathTools.Vec3d
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3d.html
  name: Vec3d
  nameWithType: Vec3d
  fullName: Vintagestory.API.MathTools.Vec3d
- uid: Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MarkAbsorptionChanged_System_Int32_System_Int32_Vintagestory_API_MathTools_BlockPos_
  name: MarkAbsorptionChanged
  nameWithType: IBlockAccessor.MarkAbsorptionChanged
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkAbsorptionChanged
- uid: Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_RemoveBlockLight_System_Byte___Vintagestory_API_MathTools_BlockPos_
  name: RemoveBlockLight
  nameWithType: IBlockAccessor.RemoveBlockLight
  fullName: Vintagestory.API.Common.IBlockAccessor.RemoveBlockLight
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.SetDecor*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.SetDecor
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_SetDecor_Vintagestory_API_Common_Block_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockFacing_
  name: SetDecor
  nameWithType: IBlockAccessor.SetDecor
  fullName: Vintagestory.API.Common.IBlockAccessor.SetDecor
- uid: Vintagestory.API.Common.BlockSelection.ToDecorIndex
  commentId: M:Vintagestory.API.Common.BlockSelection.ToDecorIndex
  href: Vintagestory.API.Common.BlockSelection.html#Vintagestory_API_Common_BlockSelection_ToDecorIndex
  name: ToDecorIndex()
  nameWithType: BlockSelection.ToDecorIndex()
  fullName: Vintagestory.API.Common.BlockSelection.ToDecorIndex()
  spec.csharp:
  - uid: Vintagestory.API.Common.BlockSelection.ToDecorIndex
    name: ToDecorIndex
    href: Vintagestory.API.Common.BlockSelection.html#Vintagestory_API_Common_BlockSelection_ToDecorIndex
  - name: (
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Common.BlockSelection.ToDecorIndex
    name: ToDecorIndex
    href: Vintagestory.API.Common.BlockSelection.html#Vintagestory_API_Common_BlockSelection_ToDecorIndex
  - name: (
  - name: )
- uid: Vintagestory.API.Common.BlockSelection.GetDecorIndex(Vintagestory.API.MathTools.BlockFacing,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.Common.BlockSelection.GetDecorIndex(Vintagestory.API.MathTools.BlockFacing,System.Int32,System.Int32,System.Int32)
  isExternal: true
  href: Vintagestory.API.Common.BlockSelection.html#Vintagestory_API_Common_BlockSelection_GetDecorIndex_Vintagestory_API_MathTools_BlockFacing_System_Int32_System_Int32_System_Int32_
  name: GetDecorIndex(BlockFacing, int, int, int)
  nameWithType: BlockSelection.GetDecorIndex(BlockFacing, int, int, int)
  fullName: Vintagestory.API.Common.BlockSelection.GetDecorIndex(Vintagestory.API.MathTools.BlockFacing, int, int, int)
  nameWithType.vb: BlockSelection.GetDecorIndex(BlockFacing, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.Common.BlockSelection.GetDecorIndex(Vintagestory.API.MathTools.BlockFacing, Integer, Integer, Integer)
  name.vb: GetDecorIndex(BlockFacing, Integer, Integer, Integer)
  spec.csharp:
  - uid: Vintagestory.API.Common.BlockSelection.GetDecorIndex(Vintagestory.API.MathTools.BlockFacing,System.Int32,System.Int32,System.Int32)
    name: GetDecorIndex
    href: Vintagestory.API.Common.BlockSelection.html#Vintagestory_API_Common_BlockSelection_GetDecorIndex_Vintagestory_API_MathTools_BlockFacing_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockFacing
    name: BlockFacing
    href: Vintagestory.API.MathTools.BlockFacing.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Common.BlockSelection.GetDecorIndex(Vintagestory.API.MathTools.BlockFacing,System.Int32,System.Int32,System.Int32)
    name: GetDecorIndex
    href: Vintagestory.API.Common.BlockSelection.html#Vintagestory_API_Common_BlockSelection_GetDecorIndex_Vintagestory_API_MathTools_BlockFacing_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: Vintagestory.API.MathTools.BlockFacing
    name: BlockFacing
    href: Vintagestory.API.MathTools.BlockFacing.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.GetDecors*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetDecors
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetDecors_Vintagestory_API_MathTools_BlockPos_
  name: GetDecors
  nameWithType: IBlockAccessor.GetDecors
  fullName: Vintagestory.API.Common.IBlockAccessor.GetDecors
- uid: Vintagestory.API.Common.Block[]
  isExternal: true
  href: Vintagestory.API.Common.Block.html
  name: Block[]
  nameWithType: Block[]
  fullName: Vintagestory.API.Common.Block[]
  nameWithType.vb: Block()
  fullName.vb: Vintagestory.API.Common.Block()
  name.vb: Block()
  spec.csharp:
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: (
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.GetSubDecors*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetSubDecors
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetSubDecors_Vintagestory_API_MathTools_BlockPos_
  name: GetSubDecors
  nameWithType: IBlockAccessor.GetSubDecors
  fullName: Vintagestory.API.Common.IBlockAccessor.GetSubDecors
- uid: System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Vintagestory.API.Common.Block}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, Block>
  nameWithType: Dictionary<int, Block>
  fullName: System.Collections.Generic.Dictionary<int, Vintagestory.API.Common.Block>
  nameWithType.vb: Dictionary(Of Integer, Block)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, Vintagestory.API.Common.Block)
  name.vb: Dictionary(Of Integer, Block)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Vintagestory.API.Common.Block
    name: Block
    href: Vintagestory.API.Common.Block.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.GetDecor*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.GetDecor
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_GetDecor_Vintagestory_API_MathTools_BlockPos_System_Int32_
  name: GetDecor
  nameWithType: IBlockAccessor.GetDecor
  fullName: Vintagestory.API.Common.IBlockAccessor.GetDecor
- uid: Vintagestory.API.Common.IBlockAccessor.BreakDecor*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.BreakDecor
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_BreakDecor_Vintagestory_API_MathTools_BlockPos_Vintagestory_API_MathTools_BlockFacing_System_Nullable_System_Int32__
  name: BreakDecor
  nameWithType: IBlockAccessor.BreakDecor
  fullName: Vintagestory.API.Common.IBlockAccessor.BreakDecor
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_MarkChunkDecorsModified_Vintagestory_API_MathTools_BlockPos_
  name: MarkChunkDecorsModified
  nameWithType: IBlockAccessor.MarkChunkDecorsModified
  fullName: Vintagestory.API.Common.IBlockAccessor.MarkChunkDecorsModified
- uid: Vintagestory.API.Common.IBlockAccessor.IsSideSolid*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.IsSideSolid
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_IsSideSolid_System_Int32_System_Int32_System_Int32_Vintagestory_API_MathTools_BlockFacing_
  name: IsSideSolid
  nameWithType: IBlockAccessor.IsSideSolid
  fullName: Vintagestory.API.Common.IBlockAccessor.IsSideSolid
- uid: Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension*
  commentId: Overload:Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension
  href: Vintagestory.API.Common.IBlockAccessor.html#Vintagestory_API_Common_IBlockAccessor_CreateMiniDimension_Vintagestory_API_MathTools_Vec3d_
  name: CreateMiniDimension
  nameWithType: IBlockAccessor.CreateMiniDimension
  fullName: Vintagestory.API.Common.IBlockAccessor.CreateMiniDimension
- uid: Vintagestory.API.Common.IMiniDimension
  commentId: T:Vintagestory.API.Common.IMiniDimension
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IMiniDimension.html
  name: IMiniDimension
  nameWithType: IMiniDimension
  fullName: Vintagestory.API.Common.IMiniDimension
