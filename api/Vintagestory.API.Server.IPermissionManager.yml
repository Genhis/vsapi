### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Server.IPermissionManager
  commentId: T:Vintagestory.API.Server.IPermissionManager
  id: IPermissionManager
  parent: Vintagestory.API.Server
  children:
  - Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup(System.String,System.String)
  - Vintagestory.API.Server.IPermissionManager.DenyPrivilege(System.String,System.String)
  - Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege(System.String)
  - Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel(System.Int32)
  - Vintagestory.API.Server.IPermissionManager.GetRole(System.String)
  - Vintagestory.API.Server.IPermissionManager.GrantPrivilege(System.String,System.String,System.Boolean)
  - Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege(System.String)
  - Vintagestory.API.Server.IPermissionManager.RegisterPrivilege(System.String,System.String,System.Boolean)
  - Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial(System.String,System.String)
  - Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup(System.String,System.String)
  - Vintagestory.API.Server.IPermissionManager.RevokePrivilege(System.String,System.String,System.Boolean)
  - Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer,System.String)
  - Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer,Vintagestory.API.Common.IPlayerRole)
  langs:
  - csharp
  - vb
  name: IPermissionManager
  nameWithType: IPermissionManager
  fullName: Vintagestory.API.Server.IPermissionManager
  type: Interface
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  syntax:
    content: public interface IPermissionManager
    content.vb: Public Interface IPermissionManager
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.Server.IPermissionManager.GetRole(System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.GetRole(System.String)
  id: GetRole(System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: GetRole(string)
  nameWithType: IPermissionManager.GetRole(string)
  fullName: Vintagestory.API.Server.IPermissionManager.GetRole(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Retrieve a role by its role code
  example: []
  syntax:
    content: IPlayerRole GetRole(string code)
    parameters:
    - id: code
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.Common.IPlayerRole
      description: ''
    content.vb: Function GetRole(code As String) As IPlayerRole
  overload: Vintagestory.API.Server.IPermissionManager.GetRole*
  nameWithType.vb: IPermissionManager.GetRole(String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.GetRole(String)
  name.vb: GetRole(String)
- uid: Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer,Vintagestory.API.Common.IPlayerRole)
  commentId: M:Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer,Vintagestory.API.Common.IPlayerRole)
  id: SetRole(Vintagestory.API.Server.IServerPlayer,Vintagestory.API.Common.IPlayerRole)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: SetRole(IServerPlayer, IPlayerRole)
  nameWithType: IPermissionManager.SetRole(IServerPlayer, IPlayerRole)
  fullName: Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer, Vintagestory.API.Common.IPlayerRole)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Set given role for given player. Role must exist in the serverconfig.json. For a list of roles, read sapi.Config.Roles
  example: []
  syntax:
    content: void SetRole(IServerPlayer player, IPlayerRole role)
    parameters:
    - id: player
      type: Vintagestory.API.Server.IServerPlayer
      description: ''
    - id: role
      type: Vintagestory.API.Common.IPlayerRole
      description: ''
    content.vb: Sub SetRole(player As IServerPlayer, role As IPlayerRole)
  overload: Vintagestory.API.Server.IPermissionManager.SetRole*
- uid: Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer,System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer,System.String)
  id: SetRole(Vintagestory.API.Server.IServerPlayer,System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: SetRole(IServerPlayer, string)
  nameWithType: IPermissionManager.SetRole(IServerPlayer, string)
  fullName: Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Set given role for given player. Role must exist in the serverconfig.json. For a list of roles, read sapi.Config.Roles
  example: []
  syntax:
    content: void SetRole(IServerPlayer player, string roleCode)
    parameters:
    - id: player
      type: Vintagestory.API.Server.IServerPlayer
      description: ''
    - id: roleCode
      type: System.String
      description: ''
    content.vb: Sub SetRole(player As IServerPlayer, roleCode As String)
  overload: Vintagestory.API.Server.IPermissionManager.SetRole*
  nameWithType.vb: IPermissionManager.SetRole(IServerPlayer, String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.SetRole(Vintagestory.API.Server.IServerPlayer, String)
  name.vb: SetRole(IServerPlayer, String)
- uid: Vintagestory.API.Server.IPermissionManager.RegisterPrivilege(System.String,System.String,System.Boolean)
  commentId: M:Vintagestory.API.Server.IPermissionManager.RegisterPrivilege(System.String,System.String,System.Boolean)
  id: RegisterPrivilege(System.String,System.String,System.Boolean)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: RegisterPrivilege(string, string, bool)
  nameWithType: IPermissionManager.RegisterPrivilege(string, string, bool)
  fullName: Vintagestory.API.Server.IPermissionManager.RegisterPrivilege(string, string, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: >-
    Registers a user privilege with the server. Is only active for the current server session and lost during a server restart/shutdown, so register it during server startup.

    New privileges are auto-granted to admins and the server console.
  example: []
  syntax:
    content: void RegisterPrivilege(string code, string shortdescription, bool adminAutoGrant = true)
    parameters:
    - id: code
      type: System.String
      description: Privilege to register
    - id: shortdescription
      type: System.String
      description: Short description
    - id: adminAutoGrant
      type: System.Boolean
      description: By default, super users are automatically granted all privileges. Set this value to false to change that
    content.vb: Sub RegisterPrivilege(code As String, shortdescription As String, adminAutoGrant As Boolean = True)
  overload: Vintagestory.API.Server.IPermissionManager.RegisterPrivilege*
  nameWithType.vb: IPermissionManager.RegisterPrivilege(String, String, Boolean)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.RegisterPrivilege(String, String, Boolean)
  name.vb: RegisterPrivilege(String, String, Boolean)
- uid: Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege(System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege(System.String)
  id: GrantTemporaryPrivilege(System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: GrantTemporaryPrivilege(string)
  nameWithType: IPermissionManager.GrantTemporaryPrivilege(string)
  fullName: Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Grants privilege to all players connected or yet to connect. This setting is only active for the current server session and lost during a server restart/shutdown.
  example: []
  syntax:
    content: void GrantTemporaryPrivilege(string code)
    parameters:
    - id: code
      type: System.String
      description: ''
    content.vb: Sub GrantTemporaryPrivilege(code As String)
  overload: Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege*
  nameWithType.vb: IPermissionManager.GrantTemporaryPrivilege(String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege(String)
  name.vb: GrantTemporaryPrivilege(String)
- uid: Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege(System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege(System.String)
  id: DropTemporaryPrivilege(System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: DropTemporaryPrivilege(string)
  nameWithType: IPermissionManager.DropTemporaryPrivilege(string)
  fullName: Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Revokes a privilege that has been previously granted to all players. Does not revoke privileges granted from a group. Does nothing if this privilege hasn't been previously granted.
  example: []
  syntax:
    content: void DropTemporaryPrivilege(string code)
    parameters:
    - id: code
      type: System.String
      description: ''
    content.vb: Sub DropTemporaryPrivilege(code As String)
  overload: Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege*
  nameWithType.vb: IPermissionManager.DropTemporaryPrivilege(String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege(String)
  name.vb: DropTemporaryPrivilege(String)
- uid: Vintagestory.API.Server.IPermissionManager.GrantPrivilege(System.String,System.String,System.Boolean)
  commentId: M:Vintagestory.API.Server.IPermissionManager.GrantPrivilege(System.String,System.String,System.Boolean)
  id: GrantPrivilege(System.String,System.String,System.Boolean)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: GrantPrivilege(string, string, bool)
  nameWithType: IPermissionManager.GrantPrivilege(string, string, bool)
  fullName: Vintagestory.API.Server.IPermissionManager.GrantPrivilege(string, string, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Grant a privilege to an individual connected player.
  example: []
  syntax:
    content: bool GrantPrivilege(string playerUID, string code, bool permanent = false)
    parameters:
    - id: playerUID
      type: System.String
      description: ''
    - id: code
      type: System.String
      description: ''
    - id: permanent
      type: System.Boolean
      description: Wether to store this privilege permanently. Otherwise only valid for the active server session.
    return:
      type: System.Boolean
      description: False if player was not found
    content.vb: Function GrantPrivilege(playerUID As String, code As String, permanent As Boolean = False) As Boolean
  overload: Vintagestory.API.Server.IPermissionManager.GrantPrivilege*
  nameWithType.vb: IPermissionManager.GrantPrivilege(String, String, Boolean)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.GrantPrivilege(String, String, Boolean)
  name.vb: GrantPrivilege(String, String, Boolean)
- uid: Vintagestory.API.Server.IPermissionManager.DenyPrivilege(System.String,System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.DenyPrivilege(System.String,System.String)
  id: DenyPrivilege(System.String,System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: DenyPrivilege(string, string)
  nameWithType: IPermissionManager.DenyPrivilege(string, string)
  fullName: Vintagestory.API.Server.IPermissionManager.DenyPrivilege(string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Actively denies a privilege from a player, overrides privileges granted by a role. Does not however override non permanent privileges
  example: []
  syntax:
    content: bool DenyPrivilege(string playerUID, string code)
    parameters:
    - id: playerUID
      type: System.String
      description: ''
    - id: code
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: False if player was not found
    content.vb: Function DenyPrivilege(playerUID As String, code As String) As Boolean
  overload: Vintagestory.API.Server.IPermissionManager.DenyPrivilege*
  nameWithType.vb: IPermissionManager.DenyPrivilege(String, String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.DenyPrivilege(String, String)
  name.vb: DenyPrivilege(String, String)
- uid: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial(System.String,System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial(System.String,System.String)
  id: RemovePrivilegeDenial(System.String,System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: RemovePrivilegeDenial(string, string)
  nameWithType: IPermissionManager.RemovePrivilegeDenial(string, string)
  fullName: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial(string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Removes a previously set privilege denial, if any was set.
  example: []
  syntax:
    content: bool RemovePrivilegeDenial(string playerUID, string code)
    parameters:
    - id: playerUID
      type: System.String
      description: ''
    - id: code
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function RemovePrivilegeDenial(playerUID As String, code As String) As Boolean
  overload: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial*
  nameWithType.vb: IPermissionManager.RemovePrivilegeDenial(String, String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial(String, String)
  name.vb: RemovePrivilegeDenial(String, String)
- uid: Vintagestory.API.Server.IPermissionManager.RevokePrivilege(System.String,System.String,System.Boolean)
  commentId: M:Vintagestory.API.Server.IPermissionManager.RevokePrivilege(System.String,System.String,System.Boolean)
  id: RevokePrivilege(System.String,System.String,System.Boolean)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: RevokePrivilege(string, string, bool)
  nameWithType: IPermissionManager.RevokePrivilege(string, string, bool)
  fullName: Vintagestory.API.Server.IPermissionManager.RevokePrivilege(string, string, bool)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Revokes a privilege that has been previously granted to this player. Does not revoke privileges granted from a group. Does nothing if the player does not have given privilege.
  example: []
  syntax:
    content: bool RevokePrivilege(string playerUID, string code, bool permanent = false)
    parameters:
    - id: playerUID
      type: System.String
      description: ''
    - id: code
      type: System.String
      description: ''
    - id: permanent
      type: System.Boolean
      description: If true it removes a previously granted permanent privilege. If false it removes a previously granted temporary privilege.
    return:
      type: System.Boolean
      description: False if player was not found
    content.vb: Function RevokePrivilege(playerUID As String, code As String, permanent As Boolean = False) As Boolean
  overload: Vintagestory.API.Server.IPermissionManager.RevokePrivilege*
  nameWithType.vb: IPermissionManager.RevokePrivilege(String, String, Boolean)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.RevokePrivilege(String, String, Boolean)
  name.vb: RevokePrivilege(String, String, Boolean)
- uid: Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup(System.String,System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup(System.String,System.String)
  id: AddPrivilegeToGroup(System.String,System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: AddPrivilegeToGroup(string, string)
  nameWithType: IPermissionManager.AddPrivilegeToGroup(string, string)
  fullName: Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup(string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Add given privilege to given group, granting everyone in this group access to this privilege. This setting is only active for the current server session and lost during a server restart/shutdown.
  example: []
  syntax:
    content: bool AddPrivilegeToGroup(string groupCode, string privilegeCode)
    parameters:
    - id: groupCode
      type: System.String
      description: ''
    - id: privilegeCode
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function AddPrivilegeToGroup(groupCode As String, privilegeCode As String) As Boolean
  overload: Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup*
  nameWithType.vb: IPermissionManager.AddPrivilegeToGroup(String, String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup(String, String)
  name.vb: AddPrivilegeToGroup(String, String)
- uid: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup(System.String,System.String)
  commentId: M:Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup(System.String,System.String)
  id: RemovePrivilegeFromGroup(System.String,System.String)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: RemovePrivilegeFromGroup(string, string)
  nameWithType: IPermissionManager.RemovePrivilegeFromGroup(string, string)
  fullName: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup(string, string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Revokes given privilege to given group, revoking everyones access to this privilege inside this group
  example: []
  syntax:
    content: bool RemovePrivilegeFromGroup(string groupCode, string privilegeCode)
    parameters:
    - id: groupCode
      type: System.String
      description: ''
    - id: privilegeCode
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function RemovePrivilegeFromGroup(groupCode As String, privilegeCode As String) As Boolean
  overload: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup*
  nameWithType.vb: IPermissionManager.RemovePrivilegeFromGroup(String, String)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup(String, String)
  name.vb: RemovePrivilegeFromGroup(String, String)
- uid: Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel(System.Int32)
  commentId: M:Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel(System.Int32)
  id: GetPlayerPermissionLevel(System.Int32)
  parent: Vintagestory.API.Server.IPermissionManager
  langs:
  - csharp
  - vb
  name: GetPlayerPermissionLevel(int)
  nameWithType: IPermissionManager.GetPlayerPermissionLevel(int)
  fullName: Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Server
  summary: Returns the players permission level
  example: []
  syntax:
    content: int GetPlayerPermissionLevel(int player)
    parameters:
    - id: player
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Function GetPlayerPermissionLevel(player As Integer) As Integer
  overload: Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel*
  nameWithType.vb: IPermissionManager.GetPlayerPermissionLevel(Integer)
  fullName.vb: Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel(Integer)
  name.vb: GetPlayerPermissionLevel(Integer)
references:
- uid: Vintagestory.API.Server
  commentId: N:Vintagestory.API.Server
  href: Vintagestory.html
  name: Vintagestory.API.Server
  nameWithType: Vintagestory.API.Server
  fullName: Vintagestory.API.Server
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Server
    name: Server
    href: Vintagestory.API.Server.html
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: Vintagestory.API.Server.IPermissionManager.GetRole*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.GetRole
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_GetRole_System_String_
  name: GetRole
  nameWithType: IPermissionManager.GetRole
  fullName: Vintagestory.API.Server.IPermissionManager.GetRole
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Vintagestory.API.Common.IPlayerRole
  commentId: T:Vintagestory.API.Common.IPlayerRole
  parent: Vintagestory.API.Common
  href: Vintagestory.API.Common.IPlayerRole.html
  name: IPlayerRole
  nameWithType: IPlayerRole
  fullName: Vintagestory.API.Common.IPlayerRole
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Common
  commentId: N:Vintagestory.API.Common
  href: Vintagestory.html
  name: Vintagestory.API.Common
  nameWithType: Vintagestory.API.Common
  fullName: Vintagestory.API.Common
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Common
    name: Common
    href: Vintagestory.API.Common.html
- uid: Vintagestory.API.Server.IPermissionManager.SetRole*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.SetRole
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_SetRole_Vintagestory_API_Server_IServerPlayer_Vintagestory_API_Common_IPlayerRole_
  name: SetRole
  nameWithType: IPermissionManager.SetRole
  fullName: Vintagestory.API.Server.IPermissionManager.SetRole
- uid: Vintagestory.API.Server.IServerPlayer
  commentId: T:Vintagestory.API.Server.IServerPlayer
  parent: Vintagestory.API.Server
  href: Vintagestory.API.Server.IServerPlayer.html
  name: IServerPlayer
  nameWithType: IServerPlayer
  fullName: Vintagestory.API.Server.IServerPlayer
- uid: Vintagestory.API.Server.IPermissionManager.RegisterPrivilege*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.RegisterPrivilege
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_RegisterPrivilege_System_String_System_String_System_Boolean_
  name: RegisterPrivilege
  nameWithType: IPermissionManager.RegisterPrivilege
  fullName: Vintagestory.API.Server.IPermissionManager.RegisterPrivilege
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_GrantTemporaryPrivilege_System_String_
  name: GrantTemporaryPrivilege
  nameWithType: IPermissionManager.GrantTemporaryPrivilege
  fullName: Vintagestory.API.Server.IPermissionManager.GrantTemporaryPrivilege
- uid: Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_DropTemporaryPrivilege_System_String_
  name: DropTemporaryPrivilege
  nameWithType: IPermissionManager.DropTemporaryPrivilege
  fullName: Vintagestory.API.Server.IPermissionManager.DropTemporaryPrivilege
- uid: Vintagestory.API.Server.IPermissionManager.GrantPrivilege*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.GrantPrivilege
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_GrantPrivilege_System_String_System_String_System_Boolean_
  name: GrantPrivilege
  nameWithType: IPermissionManager.GrantPrivilege
  fullName: Vintagestory.API.Server.IPermissionManager.GrantPrivilege
- uid: Vintagestory.API.Server.IPermissionManager.DenyPrivilege*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.DenyPrivilege
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_DenyPrivilege_System_String_System_String_
  name: DenyPrivilege
  nameWithType: IPermissionManager.DenyPrivilege
  fullName: Vintagestory.API.Server.IPermissionManager.DenyPrivilege
- uid: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_RemovePrivilegeDenial_System_String_System_String_
  name: RemovePrivilegeDenial
  nameWithType: IPermissionManager.RemovePrivilegeDenial
  fullName: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeDenial
- uid: Vintagestory.API.Server.IPermissionManager.RevokePrivilege*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.RevokePrivilege
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_RevokePrivilege_System_String_System_String_System_Boolean_
  name: RevokePrivilege
  nameWithType: IPermissionManager.RevokePrivilege
  fullName: Vintagestory.API.Server.IPermissionManager.RevokePrivilege
- uid: Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_AddPrivilegeToGroup_System_String_System_String_
  name: AddPrivilegeToGroup
  nameWithType: IPermissionManager.AddPrivilegeToGroup
  fullName: Vintagestory.API.Server.IPermissionManager.AddPrivilegeToGroup
- uid: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_RemovePrivilegeFromGroup_System_String_System_String_
  name: RemovePrivilegeFromGroup
  nameWithType: IPermissionManager.RemovePrivilegeFromGroup
  fullName: Vintagestory.API.Server.IPermissionManager.RemovePrivilegeFromGroup
- uid: Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel*
  commentId: Overload:Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel
  href: Vintagestory.API.Server.IPermissionManager.html#Vintagestory_API_Server_IPermissionManager_GetPlayerPermissionLevel_System_Int32_
  name: GetPlayerPermissionLevel
  nameWithType: IPermissionManager.GetPlayerPermissionLevel
  fullName: Vintagestory.API.Server.IPermissionManager.GetPlayerPermissionLevel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
