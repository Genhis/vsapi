### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.MathTools.BlockFacing
  commentId: T:Vintagestory.API.MathTools.BlockFacing
  id: BlockFacing
  parent: Vintagestory.API.MathTools
  children:
  - Vintagestory.API.MathTools.BlockFacing.ALLFACES
  - Vintagestory.API.MathTools.BlockFacing.ALLNORMALI
  - Vintagestory.API.MathTools.BlockFacing.AllVertexFlagsNormals
  - Vintagestory.API.MathTools.BlockFacing.Axis
  - Vintagestory.API.MathTools.BlockFacing.Code
  - Vintagestory.API.MathTools.BlockFacing.DOWN
  - Vintagestory.API.MathTools.BlockFacing.EAST
  - Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockFacing.Flag
  - Vintagestory.API.MathTools.BlockFacing.FlagContains(System.Byte,Vintagestory.API.MathTools.BlockFacing)
  - Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals(System.Byte)
  - Vintagestory.API.MathTools.BlockFacing.FromCode(System.String)
  - Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(System.Char)
  - Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(System.String)
  - Vintagestory.API.MathTools.BlockFacing.FromFlag(System.Int32)
  - Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3f)
  - Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3i)
  - Vintagestory.API.MathTools.BlockFacing.FromVector(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.BlockFacing.GetCCW
  - Vintagestory.API.MathTools.BlockFacing.GetCW
  - Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(System.Double[],System.Single[])
  - Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(System.Single,System.Single,System.Single,System.Single[])
  - Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated(System.Int32)
  - Vintagestory.API.MathTools.BlockFacing.GetOpposite
  - Vintagestory.API.MathTools.BlockFacing.HORIZONTALS
  - Vintagestory.API.MathTools.BlockFacing.HORIZONTALS_ANGLEORDER
  - Vintagestory.API.MathTools.BlockFacing.HORIZONTAL_NORMALI
  - Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex
  - Vintagestory.API.MathTools.BlockFacing.HorizontalFlags
  - Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle(System.Single)
  - Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw(System.Single)
  - Vintagestory.API.MathTools.BlockFacing.Index
  - Vintagestory.API.MathTools.BlockFacing.IsAdjacent(Vintagestory.API.MathTools.BlockFacing)
  - Vintagestory.API.MathTools.BlockFacing.IsAxisNS
  - Vintagestory.API.MathTools.BlockFacing.IsAxisWE
  - Vintagestory.API.MathTools.BlockFacing.IsHorizontal
  - Vintagestory.API.MathTools.BlockFacing.IsVertical
  - Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets(Vintagestory.API.MathTools.BlockPos)
  - Vintagestory.API.MathTools.BlockFacing.MeshDataIndex
  - Vintagestory.API.MathTools.BlockFacing.NORTH
  - Vintagestory.API.MathTools.BlockFacing.Negative
  - Vintagestory.API.MathTools.BlockFacing.NormalByte
  - Vintagestory.API.MathTools.BlockFacing.NormalPacked
  - Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags
  - Vintagestory.API.MathTools.BlockFacing.Normald
  - Vintagestory.API.MathTools.BlockFacing.Normalf
  - Vintagestory.API.MathTools.BlockFacing.Normali
  - Vintagestory.API.MathTools.BlockFacing.NumberOfFaces
  - Vintagestory.API.MathTools.BlockFacing.Opposite
  - Vintagestory.API.MathTools.BlockFacing.Plane
  - Vintagestory.API.MathTools.BlockFacing.PlaneCenter
  - Vintagestory.API.MathTools.BlockFacing.SOUTH
  - Vintagestory.API.MathTools.BlockFacing.ToAB(Vintagestory.API.MathTools.Vec3f)
  - Vintagestory.API.MathTools.BlockFacing.ToString
  - Vintagestory.API.MathTools.BlockFacing.UP
  - Vintagestory.API.MathTools.BlockFacing.VERTICALS
  - Vintagestory.API.MathTools.BlockFacing.VerticalFlags
  - Vintagestory.API.MathTools.BlockFacing.WEST
  - Vintagestory.API.MathTools.BlockFacing.indexDOWN
  - Vintagestory.API.MathTools.BlockFacing.indexEAST
  - Vintagestory.API.MathTools.BlockFacing.indexNORTH
  - Vintagestory.API.MathTools.BlockFacing.indexSOUTH
  - Vintagestory.API.MathTools.BlockFacing.indexUP
  - Vintagestory.API.MathTools.BlockFacing.indexWEST
  langs:
  - csharp
  - vb
  name: BlockFacing
  nameWithType: BlockFacing
  fullName: Vintagestory.API.MathTools.BlockFacing
  type: Class
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Represents one of the 6 faces of a cube and all it's properties. Uses a right Handed Coordinate System. See also http://www.matrix44.net/cms/notes/opengl-3d-graphics/coordinate-systems-in-opengl

    In short:

    North: Negative Z

    East: Positive X

    South: Positive Z

    West: Negative X

    Up: Positive Y

    Down: Negative Y
  example: []
  syntax:
    content: public class BlockFacing
    content.vb: Public Class BlockFacing
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  - System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
- uid: Vintagestory.API.MathTools.BlockFacing.NumberOfFaces
  commentId: F:Vintagestory.API.MathTools.BlockFacing.NumberOfFaces
  id: NumberOfFaces
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: NumberOfFaces
  nameWithType: BlockFacing.NumberOfFaces
  fullName: Vintagestory.API.MathTools.BlockFacing.NumberOfFaces
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int NumberOfFaces = 6
    return:
      type: System.Int32
    content.vb: Public Const NumberOfFaces As Integer = 6
- uid: Vintagestory.API.MathTools.BlockFacing.indexNORTH
  commentId: F:Vintagestory.API.MathTools.BlockFacing.indexNORTH
  id: indexNORTH
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: indexNORTH
  nameWithType: BlockFacing.indexNORTH
  fullName: Vintagestory.API.MathTools.BlockFacing.indexNORTH
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int indexNORTH = 0
    return:
      type: System.Int32
    content.vb: Public Const indexNORTH As Integer = 0
- uid: Vintagestory.API.MathTools.BlockFacing.indexEAST
  commentId: F:Vintagestory.API.MathTools.BlockFacing.indexEAST
  id: indexEAST
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: indexEAST
  nameWithType: BlockFacing.indexEAST
  fullName: Vintagestory.API.MathTools.BlockFacing.indexEAST
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int indexEAST = 1
    return:
      type: System.Int32
    content.vb: Public Const indexEAST As Integer = 1
- uid: Vintagestory.API.MathTools.BlockFacing.indexSOUTH
  commentId: F:Vintagestory.API.MathTools.BlockFacing.indexSOUTH
  id: indexSOUTH
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: indexSOUTH
  nameWithType: BlockFacing.indexSOUTH
  fullName: Vintagestory.API.MathTools.BlockFacing.indexSOUTH
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int indexSOUTH = 2
    return:
      type: System.Int32
    content.vb: Public Const indexSOUTH As Integer = 2
- uid: Vintagestory.API.MathTools.BlockFacing.indexWEST
  commentId: F:Vintagestory.API.MathTools.BlockFacing.indexWEST
  id: indexWEST
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: indexWEST
  nameWithType: BlockFacing.indexWEST
  fullName: Vintagestory.API.MathTools.BlockFacing.indexWEST
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int indexWEST = 3
    return:
      type: System.Int32
    content.vb: Public Const indexWEST As Integer = 3
- uid: Vintagestory.API.MathTools.BlockFacing.indexUP
  commentId: F:Vintagestory.API.MathTools.BlockFacing.indexUP
  id: indexUP
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: indexUP
  nameWithType: BlockFacing.indexUP
  fullName: Vintagestory.API.MathTools.BlockFacing.indexUP
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int indexUP = 4
    return:
      type: System.Int32
    content.vb: Public Const indexUP As Integer = 4
- uid: Vintagestory.API.MathTools.BlockFacing.indexDOWN
  commentId: F:Vintagestory.API.MathTools.BlockFacing.indexDOWN
  id: indexDOWN
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: indexDOWN
  nameWithType: BlockFacing.indexDOWN
  fullName: Vintagestory.API.MathTools.BlockFacing.indexDOWN
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const int indexDOWN = 5
    return:
      type: System.Int32
    content.vb: Public Const indexDOWN As Integer = 5
- uid: Vintagestory.API.MathTools.BlockFacing.HorizontalFlags
  commentId: F:Vintagestory.API.MathTools.BlockFacing.HorizontalFlags
  id: HorizontalFlags
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: HorizontalFlags
  nameWithType: BlockFacing.HorizontalFlags
  fullName: Vintagestory.API.MathTools.BlockFacing.HorizontalFlags
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: All horizontal blockfacing flags combined
  example: []
  syntax:
    content: public static readonly byte HorizontalFlags
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly HorizontalFlags As Byte
- uid: Vintagestory.API.MathTools.BlockFacing.VerticalFlags
  commentId: F:Vintagestory.API.MathTools.BlockFacing.VerticalFlags
  id: VerticalFlags
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: VerticalFlags
  nameWithType: BlockFacing.VerticalFlags
  fullName: Vintagestory.API.MathTools.BlockFacing.VerticalFlags
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: All vertical blockfacing flags combined
  example: []
  syntax:
    content: public static readonly byte VerticalFlags
    return:
      type: System.Byte
    content.vb: Public Shared ReadOnly VerticalFlags As Byte
- uid: Vintagestory.API.MathTools.BlockFacing.NORTH
  commentId: F:Vintagestory.API.MathTools.BlockFacing.NORTH
  id: NORTH
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: NORTH
  nameWithType: BlockFacing.NORTH
  fullName: Vintagestory.API.MathTools.BlockFacing.NORTH
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faces towards negative Z
  example: []
  syntax:
    content: public static readonly BlockFacing NORTH
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared ReadOnly NORTH As BlockFacing
- uid: Vintagestory.API.MathTools.BlockFacing.EAST
  commentId: F:Vintagestory.API.MathTools.BlockFacing.EAST
  id: EAST
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: EAST
  nameWithType: BlockFacing.EAST
  fullName: Vintagestory.API.MathTools.BlockFacing.EAST
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faces towards positive X
  example: []
  syntax:
    content: public static readonly BlockFacing EAST
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared ReadOnly EAST As BlockFacing
- uid: Vintagestory.API.MathTools.BlockFacing.SOUTH
  commentId: F:Vintagestory.API.MathTools.BlockFacing.SOUTH
  id: SOUTH
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: SOUTH
  nameWithType: BlockFacing.SOUTH
  fullName: Vintagestory.API.MathTools.BlockFacing.SOUTH
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faces towards positive Z
  example: []
  syntax:
    content: public static readonly BlockFacing SOUTH
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared ReadOnly SOUTH As BlockFacing
- uid: Vintagestory.API.MathTools.BlockFacing.WEST
  commentId: F:Vintagestory.API.MathTools.BlockFacing.WEST
  id: WEST
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: WEST
  nameWithType: BlockFacing.WEST
  fullName: Vintagestory.API.MathTools.BlockFacing.WEST
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faces towards negative X
  example: []
  syntax:
    content: public static readonly BlockFacing WEST
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared ReadOnly WEST As BlockFacing
- uid: Vintagestory.API.MathTools.BlockFacing.UP
  commentId: F:Vintagestory.API.MathTools.BlockFacing.UP
  id: UP
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: UP
  nameWithType: BlockFacing.UP
  fullName: Vintagestory.API.MathTools.BlockFacing.UP
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faces towards positive Y
  example: []
  syntax:
    content: public static readonly BlockFacing UP
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared ReadOnly UP As BlockFacing
- uid: Vintagestory.API.MathTools.BlockFacing.DOWN
  commentId: F:Vintagestory.API.MathTools.BlockFacing.DOWN
  id: DOWN
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: DOWN
  nameWithType: BlockFacing.DOWN
  fullName: Vintagestory.API.MathTools.BlockFacing.DOWN
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faces towards negative Y
  example: []
  syntax:
    content: public static readonly BlockFacing DOWN
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared ReadOnly DOWN As BlockFacing
- uid: Vintagestory.API.MathTools.BlockFacing.ALLFACES
  commentId: F:Vintagestory.API.MathTools.BlockFacing.ALLFACES
  id: ALLFACES
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: ALLFACES
  nameWithType: BlockFacing.ALLFACES
  fullName: Vintagestory.API.MathTools.BlockFacing.ALLFACES
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: All block faces in the order of N, E, S, W, U, D
  example: []
  syntax:
    content: public static readonly BlockFacing[] ALLFACES
    return:
      type: Vintagestory.API.MathTools.BlockFacing[]
    content.vb: Public Shared ReadOnly ALLFACES As BlockFacing()
- uid: Vintagestory.API.MathTools.BlockFacing.ALLNORMALI
  commentId: F:Vintagestory.API.MathTools.BlockFacing.ALLNORMALI
  id: ALLNORMALI
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: ALLNORMALI
  nameWithType: BlockFacing.ALLNORMALI
  fullName: Vintagestory.API.MathTools.BlockFacing.ALLNORMALI
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: All block faces in the order of N, E, S, W, U, D
  example: []
  syntax:
    content: public static readonly Vec3i[] ALLNORMALI
    return:
      type: Vintagestory.API.MathTools.Vec3i[]
    content.vb: Public Shared ReadOnly ALLNORMALI As Vec3i()
- uid: Vintagestory.API.MathTools.BlockFacing.AllVertexFlagsNormals
  commentId: F:Vintagestory.API.MathTools.BlockFacing.AllVertexFlagsNormals
  id: AllVertexFlagsNormals
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: AllVertexFlagsNormals
  nameWithType: BlockFacing.AllVertexFlagsNormals
  fullName: Vintagestory.API.MathTools.BlockFacing.AllVertexFlagsNormals
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Packed ints representing the normal flags, left-shifted by 15 for easy inclusion in VertexFlags
  example: []
  syntax:
    content: public static readonly int[] AllVertexFlagsNormals
    return:
      type: System.Int32[]
    content.vb: Public Shared ReadOnly AllVertexFlagsNormals As Integer()
- uid: Vintagestory.API.MathTools.BlockFacing.HORIZONTALS
  commentId: F:Vintagestory.API.MathTools.BlockFacing.HORIZONTALS
  id: HORIZONTALS
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: HORIZONTALS
  nameWithType: BlockFacing.HORIZONTALS
  fullName: Vintagestory.API.MathTools.BlockFacing.HORIZONTALS
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Array of horizontal faces (N, E, S, W)
  example: []
  syntax:
    content: public static readonly BlockFacing[] HORIZONTALS
    return:
      type: Vintagestory.API.MathTools.BlockFacing[]
    content.vb: Public Shared ReadOnly HORIZONTALS As BlockFacing()
- uid: Vintagestory.API.MathTools.BlockFacing.HORIZONTAL_NORMALI
  commentId: F:Vintagestory.API.MathTools.BlockFacing.HORIZONTAL_NORMALI
  id: HORIZONTAL_NORMALI
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: HORIZONTAL_NORMALI
  nameWithType: BlockFacing.HORIZONTAL_NORMALI
  fullName: Vintagestory.API.MathTools.BlockFacing.HORIZONTAL_NORMALI
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Array of the normals to the horizontal faces (N, E, S, W)
  example: []
  syntax:
    content: public static readonly Vec3i[] HORIZONTAL_NORMALI
    return:
      type: Vintagestory.API.MathTools.Vec3i[]
    content.vb: Public Shared ReadOnly HORIZONTAL_NORMALI As Vec3i()
- uid: Vintagestory.API.MathTools.BlockFacing.VERTICALS
  commentId: F:Vintagestory.API.MathTools.BlockFacing.VERTICALS
  id: VERTICALS
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: VERTICALS
  nameWithType: BlockFacing.VERTICALS
  fullName: Vintagestory.API.MathTools.BlockFacing.VERTICALS
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Array of vertical faces (U, D)
  example: []
  syntax:
    content: public static readonly BlockFacing[] VERTICALS
    return:
      type: Vintagestory.API.MathTools.BlockFacing[]
    content.vb: Public Shared ReadOnly VERTICALS As BlockFacing()
- uid: Vintagestory.API.MathTools.BlockFacing.HORIZONTALS_ANGLEORDER
  commentId: F:Vintagestory.API.MathTools.BlockFacing.HORIZONTALS_ANGLEORDER
  id: HORIZONTALS_ANGLEORDER
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: HORIZONTALS_ANGLEORDER
  nameWithType: BlockFacing.HORIZONTALS_ANGLEORDER
  fullName: Vintagestory.API.MathTools.BlockFacing.HORIZONTALS_ANGLEORDER
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Array of horizontal faces in angle order (0°, 90°, 180°, 270°) =&gt; (E, N, W, S)
  example: []
  syntax:
    content: public static readonly BlockFacing[] HORIZONTALS_ANGLEORDER
    return:
      type: Vintagestory.API.MathTools.BlockFacing[]
    content.vb: Public Shared ReadOnly HORIZONTALS_ANGLEORDER As BlockFacing()
- uid: Vintagestory.API.MathTools.BlockFacing.Flag
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Flag
  id: Flag
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Flag
  nameWithType: BlockFacing.Flag
  fullName: Vintagestory.API.MathTools.BlockFacing.Flag
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: The faces byte flag
  example: []
  syntax:
    content: public byte Flag { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public ReadOnly Property Flag As Byte
  overload: Vintagestory.API.MathTools.BlockFacing.Flag*
- uid: Vintagestory.API.MathTools.BlockFacing.Index
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Index
  id: Index
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: BlockFacing.Index
  fullName: Vintagestory.API.MathTools.BlockFacing.Index
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: The index of the face (N=0, E=1, S=2, W=3, U=4, D=5)
  example: []
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Index As Integer
  overload: Vintagestory.API.MathTools.BlockFacing.Index*
- uid: Vintagestory.API.MathTools.BlockFacing.MeshDataIndex
  commentId: P:Vintagestory.API.MathTools.BlockFacing.MeshDataIndex
  id: MeshDataIndex
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: MeshDataIndex
  nameWithType: BlockFacing.MeshDataIndex
  fullName: Vintagestory.API.MathTools.BlockFacing.MeshDataIndex
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Index + 1
  example: []
  syntax:
    content: public byte MeshDataIndex { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public ReadOnly Property MeshDataIndex As Byte
  overload: Vintagestory.API.MathTools.BlockFacing.MeshDataIndex*
- uid: Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex
  commentId: P:Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex
  id: HorizontalAngleIndex
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: HorizontalAngleIndex
  nameWithType: BlockFacing.HorizontalAngleIndex
  fullName: Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: The angle index of the face (E = 0, N = 1, W = 2, S = 3)
  example: []
  syntax:
    content: public int HorizontalAngleIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property HorizontalAngleIndex As Integer
  overload: Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex*
- uid: Vintagestory.API.MathTools.BlockFacing.Normali
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Normali
  id: Normali
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Normali
  nameWithType: BlockFacing.Normali
  fullName: Vintagestory.API.MathTools.BlockFacing.Normali
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns a normal vector of this face
  example: []
  syntax:
    content: public Vec3i Normali { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.Vec3i
    content.vb: Public ReadOnly Property Normali As Vec3i
  overload: Vintagestory.API.MathTools.BlockFacing.Normali*
- uid: Vintagestory.API.MathTools.BlockFacing.Normalf
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Normalf
  id: Normalf
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Normalf
  nameWithType: BlockFacing.Normalf
  fullName: Vintagestory.API.MathTools.BlockFacing.Normalf
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns a normal vector of this face
  example: []
  syntax:
    content: public Vec3f Normalf { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.Vec3f
    content.vb: Public ReadOnly Property Normalf As Vec3f
  overload: Vintagestory.API.MathTools.BlockFacing.Normalf*
- uid: Vintagestory.API.MathTools.BlockFacing.Normald
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Normald
  id: Normald
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Normald
  nameWithType: BlockFacing.Normald
  fullName: Vintagestory.API.MathTools.BlockFacing.Normald
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public Vec3d Normald { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.Vec3d
    content.vb: Public ReadOnly Property Normald As Vec3d
  overload: Vintagestory.API.MathTools.BlockFacing.Normald*
- uid: Vintagestory.API.MathTools.BlockFacing.Plane
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Plane
  id: Plane
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Plane
  nameWithType: BlockFacing.Plane
  fullName: Vintagestory.API.MathTools.BlockFacing.Plane
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns a cuboid where either the width, height or length is zero which represents the min/max of the block 2D plane in 3D space
  example: []
  syntax:
    content: public Cuboidf Plane { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.Cuboidf
    content.vb: Public ReadOnly Property Plane As Cuboidf
  overload: Vintagestory.API.MathTools.BlockFacing.Plane*
- uid: Vintagestory.API.MathTools.BlockFacing.NormalByte
  commentId: P:Vintagestory.API.MathTools.BlockFacing.NormalByte
  id: NormalByte
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: NormalByte
  nameWithType: BlockFacing.NormalByte
  fullName: Vintagestory.API.MathTools.BlockFacing.NormalByte
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns a normal vector of this face encoded in 6 bits/

    bit 0: 1 if south or west

    bit 1: sign bit

    bit 2: 1 if up or down

    bit 3: sign bit

    bit 4: 1 if north or south

    bit 5: sign bit
  example: []
  syntax:
    content: public byte NormalByte { get; }
    parameters: []
    return:
      type: System.Byte
    content.vb: Public ReadOnly Property NormalByte As Byte
  overload: Vintagestory.API.MathTools.BlockFacing.NormalByte*
- uid: Vintagestory.API.MathTools.BlockFacing.NormalPacked
  commentId: P:Vintagestory.API.MathTools.BlockFacing.NormalPacked
  id: NormalPacked
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: NormalPacked
  nameWithType: BlockFacing.NormalPacked
  fullName: Vintagestory.API.MathTools.BlockFacing.NormalPacked
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Normalized normal vector in format GL_INT_2_10_10_10_REV
  example: []
  syntax:
    content: public int NormalPacked { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NormalPacked As Integer
  overload: Vintagestory.API.MathTools.BlockFacing.NormalPacked*
- uid: Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags
  commentId: P:Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags
  id: NormalPackedFlags
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: NormalPackedFlags
  nameWithType: BlockFacing.NormalPackedFlags
  fullName: Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Normalized normal vector packed into 3x4=12 bytes total and bit shifted by 15 bits, for use in meshdata flags data
  example: []
  syntax:
    content: public int NormalPackedFlags { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NormalPackedFlags As Integer
  overload: Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags*
- uid: Vintagestory.API.MathTools.BlockFacing.PlaneCenter
  commentId: P:Vintagestory.API.MathTools.BlockFacing.PlaneCenter
  id: PlaneCenter
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: PlaneCenter
  nameWithType: BlockFacing.PlaneCenter
  fullName: Vintagestory.API.MathTools.BlockFacing.PlaneCenter
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the center position of this face
  example: []
  syntax:
    content: public Vec3f PlaneCenter { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.Vec3f
    content.vb: Public ReadOnly Property PlaneCenter As Vec3f
  overload: Vintagestory.API.MathTools.BlockFacing.PlaneCenter*
- uid: Vintagestory.API.MathTools.BlockFacing.Code
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Code
  id: Code
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: BlockFacing.Code
  fullName: Vintagestory.API.MathTools.BlockFacing.Code
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the string north, east, south, west, up or down
  example: []
  syntax:
    content: public string Code { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Code As String
  overload: Vintagestory.API.MathTools.BlockFacing.Code*
- uid: Vintagestory.API.MathTools.BlockFacing.IsHorizontal
  commentId: P:Vintagestory.API.MathTools.BlockFacing.IsHorizontal
  id: IsHorizontal
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: IsHorizontal
  nameWithType: BlockFacing.IsHorizontal
  fullName: Vintagestory.API.MathTools.BlockFacing.IsHorizontal
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: True if this face is N,E,S or W
  example: []
  syntax:
    content: public bool IsHorizontal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHorizontal As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.IsHorizontal*
- uid: Vintagestory.API.MathTools.BlockFacing.IsVertical
  commentId: P:Vintagestory.API.MathTools.BlockFacing.IsVertical
  id: IsVertical
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: IsVertical
  nameWithType: BlockFacing.IsVertical
  fullName: Vintagestory.API.MathTools.BlockFacing.IsVertical
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: True if this face is U or D
  example: []
  syntax:
    content: public bool IsVertical { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVertical As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.IsVertical*
- uid: Vintagestory.API.MathTools.BlockFacing.IsAxisNS
  commentId: P:Vintagestory.API.MathTools.BlockFacing.IsAxisNS
  id: IsAxisNS
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: IsAxisNS
  nameWithType: BlockFacing.IsAxisNS
  fullName: Vintagestory.API.MathTools.BlockFacing.IsAxisNS
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: True if this face is N or S
  example: []
  syntax:
    content: public bool IsAxisNS { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAxisNS As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.IsAxisNS*
- uid: Vintagestory.API.MathTools.BlockFacing.IsAxisWE
  commentId: P:Vintagestory.API.MathTools.BlockFacing.IsAxisWE
  id: IsAxisWE
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: IsAxisWE
  nameWithType: BlockFacing.IsAxisWE
  fullName: Vintagestory.API.MathTools.BlockFacing.IsAxisWE
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: True if this face is N or S
  example: []
  syntax:
    content: public bool IsAxisWE { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAxisWE As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.IsAxisWE*
- uid: Vintagestory.API.MathTools.BlockFacing.Axis
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Axis
  id: Axis
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Axis
  nameWithType: BlockFacing.Axis
  fullName: Vintagestory.API.MathTools.BlockFacing.Axis
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: The normal axis of this vector.
  example: []
  syntax:
    content: public EnumAxis Axis { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.EnumAxis
    content.vb: Public ReadOnly Property Axis As EnumAxis
  overload: Vintagestory.API.MathTools.BlockFacing.Axis*
- uid: Vintagestory.API.MathTools.BlockFacing.Opposite
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Opposite
  id: Opposite
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Opposite
  nameWithType: BlockFacing.Opposite
  fullName: Vintagestory.API.MathTools.BlockFacing.Opposite
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the opposing face
  example: []
  syntax:
    content: public BlockFacing Opposite { get; }
    parameters: []
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public ReadOnly Property Opposite As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.Opposite*
- uid: Vintagestory.API.MathTools.BlockFacing.Negative
  commentId: P:Vintagestory.API.MathTools.BlockFacing.Negative
  id: Negative
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: Negative
  nameWithType: BlockFacing.Negative
  fullName: Vintagestory.API.MathTools.BlockFacing.Negative
  type: Property
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public bool Negative { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Negative As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.Negative*
- uid: Vintagestory.API.MathTools.BlockFacing.GetOpposite
  commentId: M:Vintagestory.API.MathTools.BlockFacing.GetOpposite
  id: GetOpposite
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: GetOpposite()
  nameWithType: BlockFacing.GetOpposite()
  fullName: Vintagestory.API.MathTools.BlockFacing.GetOpposite()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: >-
      [Obsolete("Use Opposite property instead")]

      public BlockFacing GetOpposite()
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: >-
      <Obsolete("Use Opposite property instead")>

      Public Function GetOpposite() As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.GetOpposite*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Opposite property instead
- uid: Vintagestory.API.MathTools.BlockFacing.GetCCW
  commentId: M:Vintagestory.API.MathTools.BlockFacing.GetCCW
  id: GetCCW
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: GetCCW()
  nameWithType: BlockFacing.GetCCW()
  fullName: Vintagestory.API.MathTools.BlockFacing.GetCCW()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the face if current face would be horizontally counter-clockwise rotated, only works for horizontal faces
  example: []
  syntax:
    content: public BlockFacing GetCCW()
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Function GetCCW() As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.GetCCW*
- uid: Vintagestory.API.MathTools.BlockFacing.GetCW
  commentId: M:Vintagestory.API.MathTools.BlockFacing.GetCW
  id: GetCW
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: GetCW()
  nameWithType: BlockFacing.GetCW()
  fullName: Vintagestory.API.MathTools.BlockFacing.GetCW()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the face if current face would be horizontally clockwise rotated, only works for horizontal faces
  example: []
  syntax:
    content: public BlockFacing GetCW()
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Function GetCW() As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.GetCW*
- uid: Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated(System.Int32)
  id: GetHorizontalRotated(System.Int32)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: GetHorizontalRotated(int)
  nameWithType: BlockFacing.GetHorizontalRotated(int)
  fullName: Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Gets the Horizontal BlockFacing by applying the given angel

    If used on a UP or DOWN BlockFacing it will return it's current BlockFacing
  example: []
  syntax:
    content: public BlockFacing GetHorizontalRotated(int angle)
    parameters:
    - id: angle
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Function GetHorizontalRotated(angle As Integer) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated*
  nameWithType.vb: BlockFacing.GetHorizontalRotated(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated(Integer)
  name.vb: GetHorizontalRotated(Integer)
- uid: Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy(System.Single,System.Single,System.Single)
  id: FaceWhenRotatedBy(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FaceWhenRotatedBy(float, float, float)
  nameWithType: BlockFacing.FaceWhenRotatedBy(float, float, float)
  fullName: Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Applies a 3d rotation on the face and returns the face thats closest to the rotated face
  example: []
  syntax:
    content: public BlockFacing FaceWhenRotatedBy(float radX, float radY, float radZ)
    parameters:
    - id: radX
      type: System.Single
      description: ''
    - id: radY
      type: System.Single
      description: ''
    - id: radZ
      type: System.Single
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Function FaceWhenRotatedBy(radX As Single, radY As Single, radZ As Single) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy*
  nameWithType.vb: BlockFacing.FaceWhenRotatedBy(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy(Single, Single, Single)
  name.vb: FaceWhenRotatedBy(Single, Single, Single)
- uid: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(System.Single,System.Single,System.Single,System.Single[])
  commentId: M:Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(System.Single,System.Single,System.Single,System.Single[])
  id: GetFaceBrightness(System.Single,System.Single,System.Single,System.Single[])
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: GetFaceBrightness(float, float, float, float[])
  nameWithType: BlockFacing.GetFaceBrightness(float, float, float, float[])
  fullName: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(float, float, float, float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Rotates the face by given angle and returns the interpolated brightness of this face.
  example: []
  syntax:
    content: public float GetFaceBrightness(float radX, float radY, float radZ, float[] BlockSideBrightnessByFacing)
    parameters:
    - id: radX
      type: System.Single
      description: ''
    - id: radY
      type: System.Single
      description: ''
    - id: radZ
      type: System.Single
      description: ''
    - id: BlockSideBrightnessByFacing
      type: System.Single[]
      description: Array of brightness values between 0 and 1 per face. In index order (N, E, S, W, U, D)
    return:
      type: System.Single
      description: ''
    content.vb: Public Function GetFaceBrightness(radX As Single, radY As Single, radZ As Single, BlockSideBrightnessByFacing As Single()) As Single
  overload: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness*
  nameWithType.vb: BlockFacing.GetFaceBrightness(Single, Single, Single, Single())
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(Single, Single, Single, Single())
  name.vb: GetFaceBrightness(Single, Single, Single, Single())
- uid: Vintagestory.API.MathTools.BlockFacing.ToAB(Vintagestory.API.MathTools.Vec3f)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.ToAB(Vintagestory.API.MathTools.Vec3f)
  id: ToAB(Vintagestory.API.MathTools.Vec3f)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: ToAB(Vec3f)
  nameWithType: BlockFacing.ToAB(Vec3f)
  fullName: Vintagestory.API.MathTools.BlockFacing.ToAB(Vintagestory.API.MathTools.Vec3f)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Project pos onto the block face
  example: []
  syntax:
    content: public Vec2f ToAB(Vec3f pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.Vec3f
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec2f
      description: ''
    content.vb: Public Function ToAB(pos As Vec3f) As Vec2f
  overload: Vintagestory.API.MathTools.BlockFacing.ToAB*
- uid: Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets(Vintagestory.API.MathTools.BlockPos)
  id: IterateThruFacingOffsets(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: IterateThruFacingOffsets(BlockPos)
  nameWithType: BlockFacing.IterateThruFacingOffsets(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Successive calls to this when looping through the standard six BlockFacings will set pos to the relevant facing offset from the original position<br />

    NOTE: this modifies the fields of the pos parameter, which is better for heap usage than creating a new BlockPos object for each iteration

    <br />If necessary to restore the original blockPos value, call FinishIteratingAllFaces(pos)
  example: []
  syntax:
    content: public void IterateThruFacingOffsets(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Sub IterateThruFacingOffsets(pos As BlockPos)
  overload: Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets*
- uid: Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces(Vintagestory.API.MathTools.BlockPos)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces(Vintagestory.API.MathTools.BlockPos)
  id: FinishIteratingAllFaces(Vintagestory.API.MathTools.BlockPos)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FinishIteratingAllFaces(BlockPos)
  nameWithType: BlockFacing.FinishIteratingAllFaces(BlockPos)
  fullName: Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces(Vintagestory.API.MathTools.BlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Restores the original value of pos, if we are certain we looped through ALLFACES using IterateThruFacingOffsets

    Note: if for any reason control might have exited the loop early, this cannot sensibly be used
  example: []
  syntax:
    content: public static void FinishIteratingAllFaces(BlockPos pos)
    parameters:
    - id: pos
      type: Vintagestory.API.MathTools.BlockPos
      description: ''
    content.vb: Public Shared Sub FinishIteratingAllFaces(pos As BlockPos)
  overload: Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces*
- uid: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(System.Double[],System.Single[])
  commentId: M:Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(System.Double[],System.Single[])
  id: GetFaceBrightness(System.Double[],System.Single[])
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: GetFaceBrightness(double[], float[])
  nameWithType: BlockFacing.GetFaceBrightness(double[], float[])
  fullName: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(double[], float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Rotates the face by given angle and returns the interpolated brightness of this face.
  example: []
  syntax:
    content: public float GetFaceBrightness(double[] matrix, float[] BlockSideBrightnessByFacing)
    parameters:
    - id: matrix
      type: System.Double[]
      description: ''
    - id: BlockSideBrightnessByFacing
      type: System.Single[]
      description: Array of brightness values between 0 and 1 per face. In index order (N, E, S, W, U, D)
    return:
      type: System.Single
      description: ''
    content.vb: Public Function GetFaceBrightness(matrix As Double(), BlockSideBrightnessByFacing As Single()) As Single
  overload: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness*
  nameWithType.vb: BlockFacing.GetFaceBrightness(Double(), Single())
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness(Double(), Single())
  name.vb: GetFaceBrightness(Double(), Single())
- uid: Vintagestory.API.MathTools.BlockFacing.IsAdjacent(Vintagestory.API.MathTools.BlockFacing)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.IsAdjacent(Vintagestory.API.MathTools.BlockFacing)
  id: IsAdjacent(Vintagestory.API.MathTools.BlockFacing)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: IsAdjacent(BlockFacing)
  nameWithType: BlockFacing.IsAdjacent(BlockFacing)
  fullName: Vintagestory.API.MathTools.BlockFacing.IsAdjacent(Vintagestory.API.MathTools.BlockFacing)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public bool IsAdjacent(BlockFacing facing)
    parameters:
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
    return:
      type: System.Boolean
    content.vb: Public Function IsAdjacent(facing As BlockFacing) As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.IsAdjacent*
- uid: Vintagestory.API.MathTools.BlockFacing.ToString
  commentId: M:Vintagestory.API.MathTools.BlockFacing.ToString
  id: ToString
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BlockFacing.ToString()
  fullName: Vintagestory.API.MathTools.BlockFacing.ToString()
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Vintagestory.API.MathTools.BlockFacing.ToString*
- uid: Vintagestory.API.MathTools.BlockFacing.FromCode(System.String)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FromCode(System.String)
  id: FromCode(System.String)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FromCode(string)
  nameWithType: BlockFacing.FromCode(string)
  fullName: Vintagestory.API.MathTools.BlockFacing.FromCode(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the face if code is 'north', 'east', 'south', 'west', 'north', 'up' or 'down'. Otherwise null.
  example: []
  syntax:
    content: public static BlockFacing FromCode(string code)
    parameters:
    - id: code
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Shared Function FromCode(code As String) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FromCode*
  nameWithType.vb: BlockFacing.FromCode(String)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FromCode(String)
  name.vb: FromCode(String)
- uid: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(System.Char)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(System.Char)
  id: FromFirstLetter(System.Char)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FromFirstLetter(char)
  nameWithType: BlockFacing.FromFirstLetter(char)
  fullName: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(char)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockFacing FromFirstLetter(char code)
    parameters:
    - id: code
      type: System.Char
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared Function FromFirstLetter(code As Char) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter*
  nameWithType.vb: BlockFacing.FromFirstLetter(Char)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(Char)
  name.vb: FromFirstLetter(Char)
- uid: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(System.String)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(System.String)
  id: FromFirstLetter(System.String)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FromFirstLetter(string)
  nameWithType: BlockFacing.FromFirstLetter(string)
  fullName: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the face if code is 'n', 'e', 's', 'w', 'n', 'u' or 'd'. Otherwise null.
  example: []
  syntax:
    content: public static BlockFacing FromFirstLetter(string code)
    parameters:
    - id: code
      type: System.String
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Shared Function FromFirstLetter(code As String) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter*
  nameWithType.vb: BlockFacing.FromFirstLetter(String)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter(String)
  name.vb: FromFirstLetter(String)
- uid: Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3f)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3f)
  id: FromNormal(Vintagestory.API.MathTools.Vec3f)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FromNormal(Vec3f)
  nameWithType: BlockFacing.FromNormal(Vec3f)
  fullName: Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3f)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockFacing FromNormal(Vec3f vec)
    parameters:
    - id: vec
      type: Vintagestory.API.MathTools.Vec3f
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared Function FromNormal(vec As Vec3f) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FromNormal*
- uid: Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3i)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3i)
  id: FromNormal(Vintagestory.API.MathTools.Vec3i)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FromNormal(Vec3i)
  nameWithType: BlockFacing.FromNormal(Vec3i)
  fullName: Vintagestory.API.MathTools.BlockFacing.FromNormal(Vintagestory.API.MathTools.Vec3i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockFacing FromNormal(Vec3i vec)
    parameters:
    - id: vec
      type: Vintagestory.API.MathTools.Vec3i
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared Function FromNormal(vec As Vec3i) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FromNormal*
- uid: Vintagestory.API.MathTools.BlockFacing.FromVector(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FromVector(System.Double,System.Double,System.Double)
  id: FromVector(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FromVector(double, double, double)
  nameWithType: BlockFacing.FromVector(double, double, double)
  fullName: Vintagestory.API.MathTools.BlockFacing.FromVector(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockFacing FromVector(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared Function FromVector(x As Double, y As Double, z As Double) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FromVector*
  nameWithType.vb: BlockFacing.FromVector(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FromVector(Double, Double, Double)
  name.vb: FromVector(Double, Double, Double)
- uid: Vintagestory.API.MathTools.BlockFacing.FromFlag(System.Int32)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FromFlag(System.Int32)
  id: FromFlag(System.Int32)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FromFlag(int)
  nameWithType: BlockFacing.FromFlag(int)
  fullName: Vintagestory.API.MathTools.BlockFacing.FromFlag(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static BlockFacing FromFlag(int flag)
    parameters:
    - id: flag
      type: System.Int32
    return:
      type: Vintagestory.API.MathTools.BlockFacing
    content.vb: Public Shared Function FromFlag(flag As Integer) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.FromFlag*
  nameWithType.vb: BlockFacing.FromFlag(Integer)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FromFlag(Integer)
  name.vb: FromFlag(Integer)
- uid: Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle(System.Single)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle(System.Single)
  id: HorizontalFromAngle(System.Single)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: HorizontalFromAngle(float)
  nameWithType: BlockFacing.HorizontalFromAngle(float)
  fullName: Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the closest horizontal face from given angle (0 degree = east). Uses HORIZONTALS_ANGLEORDER
  example: []
  syntax:
    content: public static BlockFacing HorizontalFromAngle(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Shared Function HorizontalFromAngle(radians As Single) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle*
  nameWithType.vb: BlockFacing.HorizontalFromAngle(Single)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle(Single)
  name.vb: HorizontalFromAngle(Single)
- uid: Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw(System.Single)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw(System.Single)
  id: HorizontalFromYaw(System.Single)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: HorizontalFromYaw(float)
  nameWithType: BlockFacing.HorizontalFromYaw(float)
  fullName: Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the closest horizontal face from given angle (0 degree = north for yaw!). Uses HORIZONTALS_ANGLEORDER
  example: []
  syntax:
    content: public static BlockFacing HorizontalFromYaw(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: ''
    return:
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    content.vb: Public Shared Function HorizontalFromYaw(radians As Single) As BlockFacing
  overload: Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw*
  nameWithType.vb: BlockFacing.HorizontalFromYaw(Single)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw(Single)
  name.vb: HorizontalFromYaw(Single)
- uid: Vintagestory.API.MathTools.BlockFacing.FlagContains(System.Byte,Vintagestory.API.MathTools.BlockFacing)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FlagContains(System.Byte,Vintagestory.API.MathTools.BlockFacing)
  id: FlagContains(System.Byte,Vintagestory.API.MathTools.BlockFacing)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FlagContains(byte, BlockFacing)
  nameWithType: BlockFacing.FlagContains(byte, BlockFacing)
  fullName: Vintagestory.API.MathTools.BlockFacing.FlagContains(byte, Vintagestory.API.MathTools.BlockFacing)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns true if given byte flags contain given face
  example: []
  syntax:
    content: public static bool FlagContains(byte flag, BlockFacing facing)
    parameters:
    - id: flag
      type: System.Byte
      description: ''
    - id: facing
      type: Vintagestory.API.MathTools.BlockFacing
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function FlagContains(flag As Byte, facing As BlockFacing) As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.FlagContains*
  nameWithType.vb: BlockFacing.FlagContains(Byte, BlockFacing)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FlagContains(Byte, Vintagestory.API.MathTools.BlockFacing)
  name.vb: FlagContains(Byte, BlockFacing)
- uid: Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals(System.Byte)
  commentId: M:Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals(System.Byte)
  id: FlagContainsHorizontals(System.Byte)
  parent: Vintagestory.API.MathTools.BlockFacing
  langs:
  - csharp
  - vb
  name: FlagContainsHorizontals(byte)
  nameWithType: BlockFacing.FlagContainsHorizontals(byte)
  fullName: Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals(byte)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns true if given byte flags contains a horizontal face
  example: []
  syntax:
    content: public static bool FlagContainsHorizontals(byte flag)
    parameters:
    - id: flag
      type: System.Byte
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function FlagContainsHorizontals(flag As Byte) As Boolean
  overload: Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals*
  nameWithType.vb: BlockFacing.FlagContainsHorizontals(Byte)
  fullName.vb: Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals(Byte)
  name.vb: FlagContainsHorizontals(Byte)
references:
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  parent: Vintagestory.API.Util.ObjectHandleExtensions
  definition: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  name: ToGcHandle(object)
  nameWithType: ObjectHandleExtensions.ToGcHandle(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(object)
  nameWithType.vb: ObjectHandleExtensions.ToGcHandle(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(Object)
  name.vb: ToGcHandle(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToGcHandle(System.Object)
    name: ToGcHandle
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToGcHandle_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util.ObjectHandleExtensions
  commentId: T:Vintagestory.API.Util.ObjectHandleExtensions
  parent: Vintagestory.API.Util
  href: Vintagestory.API.Util.ObjectHandleExtensions.html
  name: ObjectHandleExtensions
  nameWithType: ObjectHandleExtensions
  fullName: Vintagestory.API.Util.ObjectHandleExtensions
- uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  commentId: M:Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
  isExternal: true
  href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  name: ToIntPtr(object)
  nameWithType: ObjectHandleExtensions.ToIntPtr(object)
  fullName: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(object)
  nameWithType.vb: ObjectHandleExtensions.ToIntPtr(Object)
  fullName.vb: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(Object)
  name.vb: ToIntPtr(Object)
  spec.csharp:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Vintagestory.API.Util.ObjectHandleExtensions.ToIntPtr(System.Object)
    name: ToIntPtr
    href: Vintagestory.API.Util.ObjectHandleExtensions.html#Vintagestory_API_Util_ObjectHandleExtensions_ToIntPtr_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Vintagestory.API.MathTools.BlockFacing
  commentId: T:Vintagestory.API.MathTools.BlockFacing
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockFacing.html
  name: BlockFacing
  nameWithType: BlockFacing
  fullName: Vintagestory.API.MathTools.BlockFacing
- uid: Vintagestory.API.MathTools.BlockFacing[]
  isExternal: true
  href: Vintagestory.API.MathTools.BlockFacing.html
  name: BlockFacing[]
  nameWithType: BlockFacing[]
  fullName: Vintagestory.API.MathTools.BlockFacing[]
  nameWithType.vb: BlockFacing()
  fullName.vb: Vintagestory.API.MathTools.BlockFacing()
  name.vb: BlockFacing()
  spec.csharp:
  - uid: Vintagestory.API.MathTools.BlockFacing
    name: BlockFacing
    href: Vintagestory.API.MathTools.BlockFacing.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.MathTools.BlockFacing
    name: BlockFacing
    href: Vintagestory.API.MathTools.BlockFacing.html
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.Vec3i[]
  isExternal: true
  href: Vintagestory.API.MathTools.Vec3i.html
  name: Vec3i[]
  nameWithType: Vec3i[]
  fullName: Vintagestory.API.MathTools.Vec3i[]
  nameWithType.vb: Vec3i()
  fullName.vb: Vintagestory.API.MathTools.Vec3i()
  name.vb: Vec3i()
  spec.csharp:
  - uid: Vintagestory.API.MathTools.Vec3i
    name: Vec3i
    href: Vintagestory.API.MathTools.Vec3i.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Vintagestory.API.MathTools.Vec3i
    name: Vec3i
    href: Vintagestory.API.MathTools.Vec3i.html
  - name: (
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.BlockFacing.Flag*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Flag
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Flag
  name: Flag
  nameWithType: BlockFacing.Flag
  fullName: Vintagestory.API.MathTools.BlockFacing.Flag
- uid: Vintagestory.API.MathTools.BlockFacing.Index*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Index
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Index
  name: Index
  nameWithType: BlockFacing.Index
  fullName: Vintagestory.API.MathTools.BlockFacing.Index
- uid: Vintagestory.API.MathTools.BlockFacing.MeshDataIndex*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.MeshDataIndex
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_MeshDataIndex
  name: MeshDataIndex
  nameWithType: BlockFacing.MeshDataIndex
  fullName: Vintagestory.API.MathTools.BlockFacing.MeshDataIndex
- uid: Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_HorizontalAngleIndex
  name: HorizontalAngleIndex
  nameWithType: BlockFacing.HorizontalAngleIndex
  fullName: Vintagestory.API.MathTools.BlockFacing.HorizontalAngleIndex
- uid: Vintagestory.API.MathTools.BlockFacing.Normali*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Normali
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Normali
  name: Normali
  nameWithType: BlockFacing.Normali
  fullName: Vintagestory.API.MathTools.BlockFacing.Normali
- uid: Vintagestory.API.MathTools.Vec3i
  commentId: T:Vintagestory.API.MathTools.Vec3i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3i.html
  name: Vec3i
  nameWithType: Vec3i
  fullName: Vintagestory.API.MathTools.Vec3i
- uid: Vintagestory.API.MathTools.BlockFacing.Normalf*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Normalf
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Normalf
  name: Normalf
  nameWithType: BlockFacing.Normalf
  fullName: Vintagestory.API.MathTools.BlockFacing.Normalf
- uid: Vintagestory.API.MathTools.Vec3f
  commentId: T:Vintagestory.API.MathTools.Vec3f
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3f.html
  name: Vec3f
  nameWithType: Vec3f
  fullName: Vintagestory.API.MathTools.Vec3f
- uid: Vintagestory.API.MathTools.BlockFacing.Normald*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Normald
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Normald
  name: Normald
  nameWithType: BlockFacing.Normald
  fullName: Vintagestory.API.MathTools.BlockFacing.Normald
- uid: Vintagestory.API.MathTools.Vec3d
  commentId: T:Vintagestory.API.MathTools.Vec3d
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3d.html
  name: Vec3d
  nameWithType: Vec3d
  fullName: Vintagestory.API.MathTools.Vec3d
- uid: Vintagestory.API.MathTools.BlockFacing.Plane*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Plane
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Plane
  name: Plane
  nameWithType: BlockFacing.Plane
  fullName: Vintagestory.API.MathTools.BlockFacing.Plane
- uid: Vintagestory.API.MathTools.Cuboidf
  commentId: T:Vintagestory.API.MathTools.Cuboidf
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Cuboidf.html
  name: Cuboidf
  nameWithType: Cuboidf
  fullName: Vintagestory.API.MathTools.Cuboidf
- uid: Vintagestory.API.MathTools.BlockFacing.NormalByte*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.NormalByte
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_NormalByte
  name: NormalByte
  nameWithType: BlockFacing.NormalByte
  fullName: Vintagestory.API.MathTools.BlockFacing.NormalByte
- uid: Vintagestory.API.MathTools.BlockFacing.NormalPacked*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.NormalPacked
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_NormalPacked
  name: NormalPacked
  nameWithType: BlockFacing.NormalPacked
  fullName: Vintagestory.API.MathTools.BlockFacing.NormalPacked
- uid: Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_NormalPackedFlags
  name: NormalPackedFlags
  nameWithType: BlockFacing.NormalPackedFlags
  fullName: Vintagestory.API.MathTools.BlockFacing.NormalPackedFlags
- uid: Vintagestory.API.MathTools.BlockFacing.PlaneCenter*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.PlaneCenter
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_PlaneCenter
  name: PlaneCenter
  nameWithType: BlockFacing.PlaneCenter
  fullName: Vintagestory.API.MathTools.BlockFacing.PlaneCenter
- uid: Vintagestory.API.MathTools.BlockFacing.Code*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Code
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Code
  name: Code
  nameWithType: BlockFacing.Code
  fullName: Vintagestory.API.MathTools.BlockFacing.Code
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Vintagestory.API.MathTools.BlockFacing.IsHorizontal*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.IsHorizontal
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_IsHorizontal
  name: IsHorizontal
  nameWithType: BlockFacing.IsHorizontal
  fullName: Vintagestory.API.MathTools.BlockFacing.IsHorizontal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Vintagestory.API.MathTools.BlockFacing.IsVertical*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.IsVertical
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_IsVertical
  name: IsVertical
  nameWithType: BlockFacing.IsVertical
  fullName: Vintagestory.API.MathTools.BlockFacing.IsVertical
- uid: Vintagestory.API.MathTools.BlockFacing.IsAxisNS*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.IsAxisNS
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_IsAxisNS
  name: IsAxisNS
  nameWithType: BlockFacing.IsAxisNS
  fullName: Vintagestory.API.MathTools.BlockFacing.IsAxisNS
- uid: Vintagestory.API.MathTools.BlockFacing.IsAxisWE*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.IsAxisWE
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_IsAxisWE
  name: IsAxisWE
  nameWithType: BlockFacing.IsAxisWE
  fullName: Vintagestory.API.MathTools.BlockFacing.IsAxisWE
- uid: Vintagestory.API.MathTools.BlockFacing.Axis*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Axis
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Axis
  name: Axis
  nameWithType: BlockFacing.Axis
  fullName: Vintagestory.API.MathTools.BlockFacing.Axis
- uid: Vintagestory.API.MathTools.EnumAxis
  commentId: T:Vintagestory.API.MathTools.EnumAxis
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.EnumAxis.html
  name: EnumAxis
  nameWithType: EnumAxis
  fullName: Vintagestory.API.MathTools.EnumAxis
- uid: Vintagestory.API.MathTools.BlockFacing.Opposite*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Opposite
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Opposite
  name: Opposite
  nameWithType: BlockFacing.Opposite
  fullName: Vintagestory.API.MathTools.BlockFacing.Opposite
- uid: Vintagestory.API.MathTools.BlockFacing.Negative*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.Negative
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_Negative
  name: Negative
  nameWithType: BlockFacing.Negative
  fullName: Vintagestory.API.MathTools.BlockFacing.Negative
- uid: Vintagestory.API.MathTools.BlockFacing.GetOpposite*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.GetOpposite
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_GetOpposite
  name: GetOpposite
  nameWithType: BlockFacing.GetOpposite
  fullName: Vintagestory.API.MathTools.BlockFacing.GetOpposite
- uid: Vintagestory.API.MathTools.BlockFacing.GetCCW*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.GetCCW
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_GetCCW
  name: GetCCW
  nameWithType: BlockFacing.GetCCW
  fullName: Vintagestory.API.MathTools.BlockFacing.GetCCW
- uid: Vintagestory.API.MathTools.BlockFacing.GetCW*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.GetCW
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_GetCW
  name: GetCW
  nameWithType: BlockFacing.GetCW
  fullName: Vintagestory.API.MathTools.BlockFacing.GetCW
- uid: Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_GetHorizontalRotated_System_Int32_
  name: GetHorizontalRotated
  nameWithType: BlockFacing.GetHorizontalRotated
  fullName: Vintagestory.API.MathTools.BlockFacing.GetHorizontalRotated
- uid: Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FaceWhenRotatedBy_System_Single_System_Single_System_Single_
  name: FaceWhenRotatedBy
  nameWithType: BlockFacing.FaceWhenRotatedBy
  fullName: Vintagestory.API.MathTools.BlockFacing.FaceWhenRotatedBy
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_GetFaceBrightness_System_Single_System_Single_System_Single_System_Single___
  name: GetFaceBrightness
  nameWithType: BlockFacing.GetFaceBrightness
  fullName: Vintagestory.API.MathTools.BlockFacing.GetFaceBrightness
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.BlockFacing.ToAB*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.ToAB
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_ToAB_Vintagestory_API_MathTools_Vec3f_
  name: ToAB
  nameWithType: BlockFacing.ToAB
  fullName: Vintagestory.API.MathTools.BlockFacing.ToAB
- uid: Vintagestory.API.MathTools.Vec2f
  commentId: T:Vintagestory.API.MathTools.Vec2f
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec2f.html
  name: Vec2f
  nameWithType: Vec2f
  fullName: Vintagestory.API.MathTools.Vec2f
- uid: Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_IterateThruFacingOffsets_Vintagestory_API_MathTools_BlockPos_
  name: IterateThruFacingOffsets
  nameWithType: BlockFacing.IterateThruFacingOffsets
  fullName: Vintagestory.API.MathTools.BlockFacing.IterateThruFacingOffsets
- uid: Vintagestory.API.MathTools.BlockPos
  commentId: T:Vintagestory.API.MathTools.BlockPos
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.BlockPos.html
  name: BlockPos
  nameWithType: BlockPos
  fullName: Vintagestory.API.MathTools.BlockPos
- uid: Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FinishIteratingAllFaces_Vintagestory_API_MathTools_BlockPos_
  name: FinishIteratingAllFaces
  nameWithType: BlockFacing.FinishIteratingAllFaces
  fullName: Vintagestory.API.MathTools.BlockFacing.FinishIteratingAllFaces
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.BlockFacing.IsAdjacent*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.IsAdjacent
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_IsAdjacent_Vintagestory_API_MathTools_BlockFacing_
  name: IsAdjacent
  nameWithType: BlockFacing.IsAdjacent
  fullName: Vintagestory.API.MathTools.BlockFacing.IsAdjacent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.BlockFacing.ToString*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.ToString
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_ToString
  name: ToString
  nameWithType: BlockFacing.ToString
  fullName: Vintagestory.API.MathTools.BlockFacing.ToString
- uid: Vintagestory.API.MathTools.BlockFacing.FromCode*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FromCode
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FromCode_System_String_
  name: FromCode
  nameWithType: BlockFacing.FromCode
  fullName: Vintagestory.API.MathTools.BlockFacing.FromCode
- uid: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FromFirstLetter
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FromFirstLetter_System_Char_
  name: FromFirstLetter
  nameWithType: BlockFacing.FromFirstLetter
  fullName: Vintagestory.API.MathTools.BlockFacing.FromFirstLetter
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: Vintagestory.API.MathTools.BlockFacing.FromNormal*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FromNormal
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FromNormal_Vintagestory_API_MathTools_Vec3f_
  name: FromNormal
  nameWithType: BlockFacing.FromNormal
  fullName: Vintagestory.API.MathTools.BlockFacing.FromNormal
- uid: Vintagestory.API.MathTools.BlockFacing.FromVector*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FromVector
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FromVector_System_Double_System_Double_System_Double_
  name: FromVector
  nameWithType: BlockFacing.FromVector
  fullName: Vintagestory.API.MathTools.BlockFacing.FromVector
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Vintagestory.API.MathTools.BlockFacing.FromFlag*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FromFlag
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FromFlag_System_Int32_
  name: FromFlag
  nameWithType: BlockFacing.FromFlag
  fullName: Vintagestory.API.MathTools.BlockFacing.FromFlag
- uid: Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_HorizontalFromAngle_System_Single_
  name: HorizontalFromAngle
  nameWithType: BlockFacing.HorizontalFromAngle
  fullName: Vintagestory.API.MathTools.BlockFacing.HorizontalFromAngle
- uid: Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_HorizontalFromYaw_System_Single_
  name: HorizontalFromYaw
  nameWithType: BlockFacing.HorizontalFromYaw
  fullName: Vintagestory.API.MathTools.BlockFacing.HorizontalFromYaw
- uid: Vintagestory.API.MathTools.BlockFacing.FlagContains*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FlagContains
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FlagContains_System_Byte_Vintagestory_API_MathTools_BlockFacing_
  name: FlagContains
  nameWithType: BlockFacing.FlagContains
  fullName: Vintagestory.API.MathTools.BlockFacing.FlagContains
- uid: Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals*
  commentId: Overload:Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals
  href: Vintagestory.API.MathTools.BlockFacing.html#Vintagestory_API_MathTools_BlockFacing_FlagContainsHorizontals_System_Byte_
  name: FlagContainsHorizontals
  nameWithType: BlockFacing.FlagContainsHorizontals
  fullName: Vintagestory.API.MathTools.BlockFacing.FlagContainsHorizontals
