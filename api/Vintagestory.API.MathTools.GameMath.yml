### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.MathTools.GameMath
  commentId: T:Vintagestory.API.MathTools.GameMath
  id: GameMath
  parent: Vintagestory.API.MathTools
  children:
  - Vintagestory.API.MathTools.GameMath.Acos(System.Double)
  - Vintagestory.API.MathTools.GameMath.Acos(System.Single)
  - Vintagestory.API.MathTools.GameMath.AngleDegDistance(System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.AngleRadDistance(System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.Asin(System.Double)
  - Vintagestory.API.MathTools.GameMath.Asin(System.Single)
  - Vintagestory.API.MathTools.GameMath.BiLerp(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.BiLerp(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.BiLerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.BiLerpColorMap(Vintagestory.API.Datastructures.IntDataMap2D,System.Int32)
  - Vintagestory.API.MathTools.GameMath.BiLerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.BiSerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.BiSerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.BoolsFromInt(System.Boolean[],System.Int32)
  - Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate2D)
  - Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3D)
  - Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3DBlockPos)
  - Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp(System.Double,System.Double[],System.Double[])
  - Vintagestory.API.MathTools.GameMath.Clamp(System.Byte,System.Byte,System.Byte)
  - Vintagestory.API.MathTools.GameMath.Clamp(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.Clamp(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.Clamp(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.Cos(System.Double)
  - Vintagestory.API.MathTools.GameMath.Cos(System.Single)
  - Vintagestory.API.MathTools.GameMath.Crc32(System.Byte[])
  - Vintagestory.API.MathTools.GameMath.Crc32(System.String)
  - Vintagestory.API.MathTools.GameMath.CyclicValueDistance(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.CyclicValueDistance(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.DEG2RAD
  - Vintagestory.API.MathTools.GameMath.DEG2RAD_DOUBLE
  - Vintagestory.API.MathTools.GameMath.DotNetStringHash(System.String)
  - Vintagestory.API.MathTools.GameMath.FastCos(System.Single)
  - Vintagestory.API.MathTools.GameMath.FastCosDeg(System.Single)
  - Vintagestory.API.MathTools.GameMath.FastSin(System.Single)
  - Vintagestory.API.MathTools.GameMath.FastSinDeg(System.Single)
  - Vintagestory.API.MathTools.GameMath.FlipVal(System.Double@,System.Double@)
  - Vintagestory.API.MathTools.GameMath.FlipVal(System.Int32@,System.Int32@)
  - Vintagestory.API.MathTools.GameMath.GenGaussKernel(System.Double,System.Int32)
  - Vintagestory.API.MathTools.GameMath.IntFromBools(System.Boolean[])
  - Vintagestory.API.MathTools.GameMath.IntFromBools(System.Int32[])
  - Vintagestory.API.MathTools.GameMath.InverseClamp(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.Largest(System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.Lerp(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.Lerp(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.LerpByte(System.Single,System.Byte,System.Byte)
  - Vintagestory.API.MathTools.GameMath.LerpRgbColor(System.Single,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.LerpRgbaColor(System.Single,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.Map``1(``0,``0,``0,``0,``0)
  - Vintagestory.API.MathTools.GameMath.Max(System.Double[])
  - Vintagestory.API.MathTools.GameMath.Max(System.Int32[])
  - Vintagestory.API.MathTools.GameMath.Max(System.Single[])
  - Vintagestory.API.MathTools.GameMath.Md5Hash(System.String)
  - Vintagestory.API.MathTools.GameMath.Min(System.Int32[])
  - Vintagestory.API.MathTools.GameMath.Min(System.Single[])
  - Vintagestory.API.MathTools.GameMath.Mix(System.Int32,System.Int32,System.Single)
  - Vintagestory.API.MathTools.GameMath.Mix(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.Mod(System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.Mod(System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.Mod(System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.Mod(System.UInt32,System.UInt32)
  - Vintagestory.API.MathTools.GameMath.MurmurHash3(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.MurmurHash3Mod(System.Int32,System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.NormaliseAngleRad(System.Single)
  - Vintagestory.API.MathTools.GameMath.PI
  - Vintagestory.API.MathTools.GameMath.PIHALF
  - Vintagestory.API.MathTools.GameMath.PrettyBadHash(System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.R2Sequence1D(System.Int32)
  - Vintagestory.API.MathTools.GameMath.R2Sequence2D(System.Int32)
  - Vintagestory.API.MathTools.GameMath.R2Sequence3D(System.Int32)
  - Vintagestory.API.MathTools.GameMath.RAD2DEG
  - Vintagestory.API.MathTools.GameMath.RootSumOfSquares(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.RoundRandom(System.Random,System.Single)
  - Vintagestory.API.MathTools.GameMath.RoundRandom(Vintagestory.API.MathTools.IRandom,System.Single)
  - Vintagestory.API.MathTools.GameMath.Serp(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.Shuffle``1(System.Random,System.Collections.Generic.List{``0})
  - Vintagestory.API.MathTools.GameMath.Shuffle``1(System.Random,``0[])
  - Vintagestory.API.MathTools.GameMath.Shuffle``1(Vintagestory.API.MathTools.LCGRandom,System.Collections.Generic.List{``0})
  - Vintagestory.API.MathTools.GameMath.Sin(System.Double)
  - Vintagestory.API.MathTools.GameMath.Sin(System.Single)
  - Vintagestory.API.MathTools.GameMath.Smallest(System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.SmoothMax(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.SmoothMax(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.SmoothMin(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.SmoothMin(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.SmoothStep(System.Double)
  - Vintagestory.API.MathTools.GameMath.SmoothStep(System.Single)
  - Vintagestory.API.MathTools.GameMath.Smootherstep(System.Double)
  - Vintagestory.API.MathTools.GameMath.Smootherstep(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.Smootherstep(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.Sqrt(System.Double)
  - Vintagestory.API.MathTools.GameMath.Sqrt(System.Single)
  - Vintagestory.API.MathTools.GameMath.Square(System.Double)
  - Vintagestory.API.MathTools.GameMath.SumOfSquares(System.Double,System.Double,System.Double)
  - Vintagestory.API.MathTools.GameMath.TWOPI
  - Vintagestory.API.MathTools.GameMath.Tan(System.Double)
  - Vintagestory.API.MathTools.GameMath.Tan(System.Single)
  - Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4d)
  - Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4f)
  - Vintagestory.API.MathTools.GameMath.TriangleStep(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.TriangleStep(System.Single,System.Single,System.Single)
  - Vintagestory.API.MathTools.GameMath.TriangleStepFast(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.oaatHash(System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.oaatHash(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec2i)
  - Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec3i)
  - Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec4i)
  - Vintagestory.API.MathTools.GameMath.oaatHashMany(System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.oaatHashU(System.Int32,System.Int32,System.Int32)
  - Vintagestory.API.MathTools.GameMath.oaatHashUMany(System.UInt32)
  langs:
  - csharp
  - vb
  name: GameMath
  nameWithType: GameMath
  fullName: Vintagestory.API.MathTools.GameMath
  type: Class
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: A large set of useful game mathematics functions
  example: []
  syntax:
    content: public static class GameMath
    content.vb: Public Module GameMath
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Vintagestory.API.MathTools.GameMath.TWOPI
  commentId: F:Vintagestory.API.MathTools.GameMath.TWOPI
  id: TWOPI
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: TWOPI
  nameWithType: GameMath.TWOPI
  fullName: Vintagestory.API.MathTools.GameMath.TWOPI
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: 360°
  example: []
  syntax:
    content: public const float TWOPI = 6.2831855
    return:
      type: System.Single
    content.vb: Public Const TWOPI As Single = 6.2831855
- uid: Vintagestory.API.MathTools.GameMath.PI
  commentId: F:Vintagestory.API.MathTools.GameMath.PI
  id: PI
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: PI
  nameWithType: GameMath.PI
  fullName: Vintagestory.API.MathTools.GameMath.PI
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: 180°
  example: []
  syntax:
    content: public const float PI = 3.1415927
    return:
      type: System.Single
    content.vb: Public Const PI As Single = 3.1415927
- uid: Vintagestory.API.MathTools.GameMath.PIHALF
  commentId: F:Vintagestory.API.MathTools.GameMath.PIHALF
  id: PIHALF
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: PIHALF
  nameWithType: GameMath.PIHALF
  fullName: Vintagestory.API.MathTools.GameMath.PIHALF
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: 90°
  example: []
  syntax:
    content: public const float PIHALF = 1.5707964
    return:
      type: System.Single
    content.vb: Public Const PIHALF As Single = 1.5707964
- uid: Vintagestory.API.MathTools.GameMath.DEG2RAD_DOUBLE
  commentId: F:Vintagestory.API.MathTools.GameMath.DEG2RAD_DOUBLE
  id: DEG2RAD_DOUBLE
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: DEG2RAD_DOUBLE
  nameWithType: GameMath.DEG2RAD_DOUBLE
  fullName: Vintagestory.API.MathTools.GameMath.DEG2RAD_DOUBLE
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const double DEG2RAD_DOUBLE = 0.017453292519943295
    return:
      type: System.Double
    content.vb: Public Const DEG2RAD_DOUBLE As Double = 0.017453292519943295
- uid: Vintagestory.API.MathTools.GameMath.DEG2RAD
  commentId: F:Vintagestory.API.MathTools.GameMath.DEG2RAD
  id: DEG2RAD
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: DEG2RAD
  nameWithType: GameMath.DEG2RAD
  fullName: Vintagestory.API.MathTools.GameMath.DEG2RAD
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const float DEG2RAD = 0.017453292
    return:
      type: System.Single
    content.vb: Public Const DEG2RAD As Single = 0.017453292
- uid: Vintagestory.API.MathTools.GameMath.RAD2DEG
  commentId: F:Vintagestory.API.MathTools.GameMath.RAD2DEG
  id: RAD2DEG
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: RAD2DEG
  nameWithType: GameMath.RAD2DEG
  fullName: Vintagestory.API.MathTools.GameMath.RAD2DEG
  type: Field
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public const float RAD2DEG = 57.295776
    return:
      type: System.Single
    content.vb: Public Const RAD2DEG As Single = 57.295776
- uid: Vintagestory.API.MathTools.GameMath.Sin(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Sin(System.Single)
  id: Sin(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Sin(float)
  nameWithType: GameMath.Sin(float)
  fullName: Vintagestory.API.MathTools.GameMath.Sin(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Sin(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Sin(value As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Sin*
  nameWithType.vb: GameMath.Sin(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Sin(Single)
  name.vb: Sin(Single)
- uid: Vintagestory.API.MathTools.GameMath.Cos(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Cos(System.Single)
  id: Cos(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Cos(float)
  nameWithType: GameMath.Cos(float)
  fullName: Vintagestory.API.MathTools.GameMath.Cos(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Cos(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Cos(value As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Cos*
  nameWithType.vb: GameMath.Cos(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Cos(Single)
  name.vb: Cos(Single)
- uid: Vintagestory.API.MathTools.GameMath.Acos(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Acos(System.Single)
  id: Acos(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Acos(float)
  nameWithType: GameMath.Acos(float)
  fullName: Vintagestory.API.MathTools.GameMath.Acos(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Acos(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Acos(value As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Acos*
  nameWithType.vb: GameMath.Acos(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Acos(Single)
  name.vb: Acos(Single)
- uid: Vintagestory.API.MathTools.GameMath.Asin(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Asin(System.Single)
  id: Asin(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Asin(float)
  nameWithType: GameMath.Asin(float)
  fullName: Vintagestory.API.MathTools.GameMath.Asin(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Asin(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Asin(value As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Asin*
  nameWithType.vb: GameMath.Asin(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Asin(Single)
  name.vb: Asin(Single)
- uid: Vintagestory.API.MathTools.GameMath.Tan(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Tan(System.Single)
  id: Tan(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Tan(float)
  nameWithType: GameMath.Tan(float)
  fullName: Vintagestory.API.MathTools.GameMath.Tan(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Tan(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Tan(value As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Tan*
  nameWithType.vb: GameMath.Tan(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Tan(Single)
  name.vb: Tan(Single)
- uid: Vintagestory.API.MathTools.GameMath.Sin(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Sin(System.Double)
  id: Sin(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Sin(double)
  nameWithType: GameMath.Sin(double)
  fullName: Vintagestory.API.MathTools.GameMath.Sin(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double Sin(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Sin(value As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Sin*
  nameWithType.vb: GameMath.Sin(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Sin(Double)
  name.vb: Sin(Double)
- uid: Vintagestory.API.MathTools.GameMath.Cos(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Cos(System.Double)
  id: Cos(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Cos(double)
  nameWithType: GameMath.Cos(double)
  fullName: Vintagestory.API.MathTools.GameMath.Cos(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double Cos(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Cos(value As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Cos*
  nameWithType.vb: GameMath.Cos(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Cos(Double)
  name.vb: Cos(Double)
- uid: Vintagestory.API.MathTools.GameMath.Acos(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Acos(System.Double)
  id: Acos(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Acos(double)
  nameWithType: GameMath.Acos(double)
  fullName: Vintagestory.API.MathTools.GameMath.Acos(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double Acos(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Acos(value As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Acos*
  nameWithType.vb: GameMath.Acos(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Acos(Double)
  name.vb: Acos(Double)
- uid: Vintagestory.API.MathTools.GameMath.Asin(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Asin(System.Double)
  id: Asin(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Asin(double)
  nameWithType: GameMath.Asin(double)
  fullName: Vintagestory.API.MathTools.GameMath.Asin(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double Asin(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Asin(value As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Asin*
  nameWithType.vb: GameMath.Asin(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Asin(Double)
  name.vb: Asin(Double)
- uid: Vintagestory.API.MathTools.GameMath.Tan(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Tan(System.Double)
  id: Tan(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Tan(double)
  nameWithType: GameMath.Tan(double)
  fullName: Vintagestory.API.MathTools.GameMath.Tan(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double Tan(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Tan(value As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Tan*
  nameWithType.vb: GameMath.Tan(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Tan(Double)
  name.vb: Tan(Double)
- uid: Vintagestory.API.MathTools.GameMath.FastSin(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.FastSin(System.Single)
  id: FastSin(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: FastSin(float)
  nameWithType: GameMath.FastSin(float)
  fullName: Vintagestory.API.MathTools.GameMath.FastSin(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faster Sin at the cost of lower accuracy
  example: []
  syntax:
    content: public static float FastSin(float rad)
    parameters:
    - id: rad
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function FastSin(rad As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.FastSin*
  nameWithType.vb: GameMath.FastSin(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.FastSin(Single)
  name.vb: FastSin(Single)
- uid: Vintagestory.API.MathTools.GameMath.FastCos(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.FastCos(System.Single)
  id: FastCos(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: FastCos(float)
  nameWithType: GameMath.FastCos(float)
  fullName: Vintagestory.API.MathTools.GameMath.FastCos(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faster Cos at the cost of lower accuracy
  example: []
  syntax:
    content: public static float FastCos(float rad)
    parameters:
    - id: rad
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function FastCos(rad As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.FastCos*
  nameWithType.vb: GameMath.FastCos(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.FastCos(Single)
  name.vb: FastCos(Single)
- uid: Vintagestory.API.MathTools.GameMath.FastSinDeg(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.FastSinDeg(System.Single)
  id: FastSinDeg(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: FastSinDeg(float)
  nameWithType: GameMath.FastSinDeg(float)
  fullName: Vintagestory.API.MathTools.GameMath.FastSinDeg(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faster Sin at the cost of lower accuracy
  example: []
  syntax:
    content: public static float FastSinDeg(float deg)
    parameters:
    - id: deg
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function FastSinDeg(deg As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.FastSinDeg*
  nameWithType.vb: GameMath.FastSinDeg(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.FastSinDeg(Single)
  name.vb: FastSinDeg(Single)
- uid: Vintagestory.API.MathTools.GameMath.FastCosDeg(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.FastCosDeg(System.Single)
  id: FastCosDeg(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: FastCosDeg(float)
  nameWithType: GameMath.FastCosDeg(float)
  fullName: Vintagestory.API.MathTools.GameMath.FastCosDeg(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Faster Cos at the cost of lower accuracy
  example: []
  syntax:
    content: public static float FastCosDeg(float deg)
    parameters:
    - id: deg
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function FastCosDeg(deg As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.FastCosDeg*
  nameWithType.vb: GameMath.FastCosDeg(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.FastCosDeg(Single)
  name.vb: FastCosDeg(Single)
- uid: Vintagestory.API.MathTools.GameMath.Sqrt(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Sqrt(System.Single)
  id: Sqrt(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Sqrt(float)
  nameWithType: GameMath.Sqrt(float)
  fullName: Vintagestory.API.MathTools.GameMath.Sqrt(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Sqrt(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Sqrt(value As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Sqrt*
  nameWithType.vb: GameMath.Sqrt(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Sqrt(Single)
  name.vb: Sqrt(Single)
- uid: Vintagestory.API.MathTools.GameMath.Sqrt(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Sqrt(System.Double)
  id: Sqrt(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Sqrt(double)
  nameWithType: GameMath.Sqrt(double)
  fullName: Vintagestory.API.MathTools.GameMath.Sqrt(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Sqrt(double value)
    parameters:
    - id: value
      type: System.Double
    return:
      type: System.Single
    content.vb: Public Shared Function Sqrt(value As Double) As Single
  overload: Vintagestory.API.MathTools.GameMath.Sqrt*
  nameWithType.vb: GameMath.Sqrt(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Sqrt(Double)
  name.vb: Sqrt(Double)
- uid: Vintagestory.API.MathTools.GameMath.RootSumOfSquares(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.RootSumOfSquares(System.Single,System.Single,System.Single)
  id: RootSumOfSquares(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: RootSumOfSquares(float, float, float)
  nameWithType: GameMath.RootSumOfSquares(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.RootSumOfSquares(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float RootSumOfSquares(float a, float b, float c)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: c
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function RootSumOfSquares(a As Single, b As Single, c As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.RootSumOfSquares*
  nameWithType.vb: GameMath.RootSumOfSquares(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.RootSumOfSquares(Single, Single, Single)
  name.vb: RootSumOfSquares(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.SumOfSquares(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.SumOfSquares(System.Double,System.Double,System.Double)
  id: SumOfSquares(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: SumOfSquares(double, double, double)
  nameWithType: GameMath.SumOfSquares(double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.SumOfSquares(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double SumOfSquares(double a, double b, double c)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function SumOfSquares(a As Double, b As Double, c As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.SumOfSquares*
  nameWithType.vb: GameMath.SumOfSquares(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.SumOfSquares(Double, Double, Double)
  name.vb: SumOfSquares(Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.Square(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Square(System.Double)
  id: Square(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Square(double)
  nameWithType: GameMath.Square(double)
  fullName: Vintagestory.API.MathTools.GameMath.Square(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double Square(double a)
    parameters:
    - id: a
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Square(a As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Square*
  nameWithType.vb: GameMath.Square(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Square(Double)
  name.vb: Square(Double)
- uid: Vintagestory.API.MathTools.GameMath.Clamp(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Clamp(float, float, float)
  nameWithType: GameMath.Clamp(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.Clamp(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Force val to be inside a certain range
  example: []
  syntax:
    content: public static float Clamp(float val, float min, float max)
    parameters:
    - id: val
      type: System.Single
      description: ''
    - id: min
      type: System.Single
      description: ''
    - id: max
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Clamp(val As Single, min As Single, max As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Clamp*
  nameWithType.vb: GameMath.Clamp(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Clamp(Single, Single, Single)
  name.vb: Clamp(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.Clamp(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.Clamp(System.Int32,System.Int32,System.Int32)
  id: Clamp(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Clamp(int, int, int)
  nameWithType: GameMath.Clamp(int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.Clamp(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Force val to be inside a certain range
  example: []
  syntax:
    content: public static int Clamp(int val, int min, int max)
    parameters:
    - id: val
      type: System.Int32
      description: ''
    - id: min
      type: System.Int32
      description: ''
    - id: max
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Clamp(val As Integer, min As Integer, max As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.Clamp*
  nameWithType.vb: GameMath.Clamp(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Clamp(Integer, Integer, Integer)
  name.vb: Clamp(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.Clamp(System.Byte,System.Byte,System.Byte)
  commentId: M:Vintagestory.API.MathTools.GameMath.Clamp(System.Byte,System.Byte,System.Byte)
  id: Clamp(System.Byte,System.Byte,System.Byte)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Clamp(byte, byte, byte)
  nameWithType: GameMath.Clamp(byte, byte, byte)
  fullName: Vintagestory.API.MathTools.GameMath.Clamp(byte, byte, byte)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Force val to be inside a certain range
  example: []
  syntax:
    content: public static byte Clamp(byte val, byte min, byte max)
    parameters:
    - id: val
      type: System.Byte
      description: ''
    - id: min
      type: System.Byte
      description: ''
    - id: max
      type: System.Byte
      description: ''
    return:
      type: System.Byte
      description: ''
    content.vb: Public Shared Function Clamp(val As Byte, min As Byte, max As Byte) As Byte
  overload: Vintagestory.API.MathTools.GameMath.Clamp*
  nameWithType.vb: GameMath.Clamp(Byte, Byte, Byte)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Clamp(Byte, Byte, Byte)
  name.vb: Clamp(Byte, Byte, Byte)
- uid: Vintagestory.API.MathTools.GameMath.Clamp(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Clamp(System.Double,System.Double,System.Double)
  id: Clamp(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Clamp(double, double, double)
  nameWithType: GameMath.Clamp(double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.Clamp(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Force val to be inside a certain range
  example: []
  syntax:
    content: public static double Clamp(double val, double min, double max)
    parameters:
    - id: val
      type: System.Double
      description: ''
    - id: min
      type: System.Double
      description: ''
    - id: max
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function Clamp(val As Double, min As Double, max As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Clamp*
  nameWithType.vb: GameMath.Clamp(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Clamp(Double, Double, Double)
  name.vb: Clamp(Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.InverseClamp(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.InverseClamp(System.Int32,System.Int32,System.Int32)
  id: InverseClamp(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: InverseClamp(int, int, int)
  nameWithType: GameMath.InverseClamp(int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.InverseClamp(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Force val to be outside a certain range
  example: []
  syntax:
    content: public static int InverseClamp(int val, int atLeastNeg, int atLeastPos)
    parameters:
    - id: val
      type: System.Int32
      description: ''
    - id: atLeastNeg
      type: System.Int32
      description: ''
    - id: atLeastPos
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function InverseClamp(val As Integer, atLeastNeg As Integer, atLeastPos As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.InverseClamp*
  nameWithType.vb: GameMath.InverseClamp(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.InverseClamp(Integer, Integer, Integer)
  name.vb: InverseClamp(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.Mod(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.Mod(System.Int32,System.Int32)
  id: Mod(System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Mod(int, int)
  nameWithType: GameMath.Mod(int, int)
  fullName: Vintagestory.API.MathTools.GameMath.Mod(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: C#'s %-Operation is actually not modulo but remainder, so this is the actual modulo function that ensures positive numbers as return value
  example: []
  syntax:
    content: public static int Mod(int k, int n)
    parameters:
    - id: k
      type: System.Int32
      description: ''
    - id: n
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function [Mod](k As Integer, n As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.Mod*
  nameWithType.vb: GameMath.Mod(Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Mod(Integer, Integer)
  name.vb: Mod(Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.Mod(System.UInt32,System.UInt32)
  commentId: M:Vintagestory.API.MathTools.GameMath.Mod(System.UInt32,System.UInt32)
  id: Mod(System.UInt32,System.UInt32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Mod(uint, uint)
  nameWithType: GameMath.Mod(uint, uint)
  fullName: Vintagestory.API.MathTools.GameMath.Mod(uint, uint)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static uint Mod(uint k, uint n)
    parameters:
    - id: k
      type: System.UInt32
    - id: n
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function [Mod](k As UInteger, n As UInteger) As UInteger
  overload: Vintagestory.API.MathTools.GameMath.Mod*
  nameWithType.vb: GameMath.Mod(UInteger, UInteger)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Mod(UInteger, UInteger)
  name.vb: Mod(UInteger, UInteger)
- uid: Vintagestory.API.MathTools.GameMath.Mod(System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Mod(System.Single,System.Single)
  id: Mod(System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Mod(float, float)
  nameWithType: GameMath.Mod(float, float)
  fullName: Vintagestory.API.MathTools.GameMath.Mod(float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: C#'s %-Operation is actually not modulo but remainder, so this is the actual modulo function that ensures positive numbers as return value
  example: []
  syntax:
    content: public static float Mod(float k, float n)
    parameters:
    - id: k
      type: System.Single
      description: ''
    - id: n
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function [Mod](k As Single, n As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Mod*
  nameWithType.vb: GameMath.Mod(Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Mod(Single, Single)
  name.vb: Mod(Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.Mod(System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Mod(System.Double,System.Double)
  id: Mod(System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Mod(double, double)
  nameWithType: GameMath.Mod(double, double)
  fullName: Vintagestory.API.MathTools.GameMath.Mod(double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: C#'s %-Operation is actually not modulo but remainder, so this is the actual modulo function that ensures positive numbers as return value
  example: []
  syntax:
    content: public static double Mod(double k, double n)
    parameters:
    - id: k
      type: System.Double
      description: ''
    - id: n
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function [Mod](k As Double, n As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Mod*
  nameWithType.vb: GameMath.Mod(Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Mod(Double, Double)
  name.vb: Mod(Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.RoundRandom(System.Random,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.RoundRandom(System.Random,System.Single)
  id: RoundRandom(System.Random,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: RoundRandom(Random, float)
  nameWithType: GameMath.RoundRandom(Random, float)
  fullName: Vintagestory.API.MathTools.GameMath.RoundRandom(System.Random, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: 'Treats given value as a statistical average. Example: 2.1 will turn into 2 90% of the times and into 3 10% of times.'
  example: []
  syntax:
    content: public static int RoundRandom(Random rand, float value)
    parameters:
    - id: rand
      type: System.Random
      description: ''
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function RoundRandom(rand As Random, value As Single) As Integer
  overload: Vintagestory.API.MathTools.GameMath.RoundRandom*
  nameWithType.vb: GameMath.RoundRandom(Random, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.RoundRandom(System.Random, Single)
  name.vb: RoundRandom(Random, Single)
- uid: Vintagestory.API.MathTools.GameMath.RoundRandom(Vintagestory.API.MathTools.IRandom,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.RoundRandom(Vintagestory.API.MathTools.IRandom,System.Single)
  id: RoundRandom(Vintagestory.API.MathTools.IRandom,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: RoundRandom(IRandom, float)
  nameWithType: GameMath.RoundRandom(IRandom, float)
  fullName: Vintagestory.API.MathTools.GameMath.RoundRandom(Vintagestory.API.MathTools.IRandom, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: 'Treats given value as a statistical average. Example: 2.1 will turn into 2 90% of the times and into 3 10% of times.'
  example: []
  syntax:
    content: public static int RoundRandom(IRandom rand, float value)
    parameters:
    - id: rand
      type: Vintagestory.API.MathTools.IRandom
      description: ''
    - id: value
      type: System.Single
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function RoundRandom(rand As IRandom, value As Single) As Integer
  overload: Vintagestory.API.MathTools.GameMath.RoundRandom*
  nameWithType.vb: GameMath.RoundRandom(IRandom, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.RoundRandom(Vintagestory.API.MathTools.IRandom, Single)
  name.vb: RoundRandom(IRandom, Single)
- uid: Vintagestory.API.MathTools.GameMath.AngleDegDistance(System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.AngleDegDistance(System.Single,System.Single)
  id: AngleDegDistance(System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: AngleDegDistance(float, float)
  nameWithType: GameMath.AngleDegDistance(float, float)
  fullName: Vintagestory.API.MathTools.GameMath.AngleDegDistance(float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the shortest distance between 2 angles

    See also https://stackoverflow.com/a/14498790/1873041
  example: []
  syntax:
    content: public static float AngleDegDistance(float start, float end)
    parameters:
    - id: start
      type: System.Single
      description: ''
    - id: end
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function AngleDegDistance(start As Single, [end] As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.AngleDegDistance*
  nameWithType.vb: GameMath.AngleDegDistance(Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.AngleDegDistance(Single, Single)
  name.vb: AngleDegDistance(Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.AngleRadDistance(System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.AngleRadDistance(System.Single,System.Single)
  id: AngleRadDistance(System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: AngleRadDistance(float, float)
  nameWithType: GameMath.AngleRadDistance(float, float)
  fullName: Vintagestory.API.MathTools.GameMath.AngleRadDistance(float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the shortest distance between 2 angles

    See also <a href="https://stackoverflow.com/a/14498790/1873041">https://stackoverflow.com/a/14498790/1873041</a>
  example: []
  syntax:
    content: public static float AngleRadDistance(float start, float end)
    parameters:
    - id: start
      type: System.Single
      description: ''
    - id: end
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function AngleRadDistance(start As Single, [end] As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.AngleRadDistance*
  nameWithType.vb: GameMath.AngleRadDistance(Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.AngleRadDistance(Single, Single)
  name.vb: AngleRadDistance(Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.NormaliseAngleRad(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.NormaliseAngleRad(System.Single)
  id: NormaliseAngleRad(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: NormaliseAngleRad(float)
  nameWithType: GameMath.NormaliseAngleRad(float)
  fullName: Vintagestory.API.MathTools.GameMath.NormaliseAngleRad(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: For angles in radians, normalise to the range 0 to 2 * PI and also, if barely close to a right angle, set it to a right angle (fixes loss of precision after multiple rotation operations etc.)
  example: []
  syntax:
    content: public static float NormaliseAngleRad(float angleRad)
    parameters:
    - id: angleRad
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function NormaliseAngleRad(angleRad As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.NormaliseAngleRad*
  nameWithType.vb: GameMath.NormaliseAngleRad(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.NormaliseAngleRad(Single)
  name.vb: NormaliseAngleRad(Single)
- uid: Vintagestory.API.MathTools.GameMath.Smallest(System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Smallest(System.Double,System.Double)
  id: Smallest(System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Smallest(double, double)
  nameWithType: GameMath.Smallest(double, double)
  fullName: Vintagestory.API.MathTools.GameMath.Smallest(double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the smallest number, ignoring the sign of either value. Examples:<br />

    Smallest(1, 3) returns 1

    Smallest(-20, 3) returns 3
  example: []
  syntax:
    content: public static double Smallest(double a, double b)
    parameters:
    - id: a
      type: System.Double
      description: ''
    - id: b
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function Smallest(a As Double, b As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Smallest*
  nameWithType.vb: GameMath.Smallest(Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Smallest(Double, Double)
  name.vb: Smallest(Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.Largest(System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Largest(System.Double,System.Double)
  id: Largest(System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Largest(double, double)
  nameWithType: GameMath.Largest(double, double)
  fullName: Vintagestory.API.MathTools.GameMath.Largest(double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Returns the smallest number, ignoring the sign of either value
  example: []
  syntax:
    content: public static double Largest(double a, double b)
    parameters:
    - id: a
      type: System.Double
      description: ''
    - id: b
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function Largest(a As Double, b As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Largest*
  nameWithType.vb: GameMath.Largest(Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Largest(Double, Double)
  name.vb: Largest(Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.CyclicValueDistance(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.CyclicValueDistance(System.Single,System.Single,System.Single)
  id: CyclicValueDistance(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: CyclicValueDistance(float, float, float)
  nameWithType: GameMath.CyclicValueDistance(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.CyclicValueDistance(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the shortest distance between 2 values that are cyclical (e.g. angles, daytime hours, etc.)

    See also <a href="https://stackoverflow.com/a/14498790/1873041">https://stackoverflow.com/a/14498790/1873041</a>
  example: []
  syntax:
    content: public static float CyclicValueDistance(float start, float end, float period)
    parameters:
    - id: start
      type: System.Single
      description: ''
    - id: end
      type: System.Single
      description: ''
    - id: period
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function CyclicValueDistance(start As Single, [end] As Single, period As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.CyclicValueDistance*
  nameWithType.vb: GameMath.CyclicValueDistance(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.CyclicValueDistance(Single, Single, Single)
  name.vb: CyclicValueDistance(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.CyclicValueDistance(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.CyclicValueDistance(System.Double,System.Double,System.Double)
  id: CyclicValueDistance(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: CyclicValueDistance(double, double, double)
  nameWithType: GameMath.CyclicValueDistance(double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.CyclicValueDistance(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Returns the shortest distance between 2 values that are cyclical (e.g. angles, daytime hours, etc.)

    See also <a href="https://stackoverflow.com/a/14498790/1873041">https://stackoverflow.com/a/14498790/1873041</a>
  example: []
  syntax:
    content: public static double CyclicValueDistance(double start, double end, double period)
    parameters:
    - id: start
      type: System.Double
      description: ''
    - id: end
      type: System.Double
      description: ''
    - id: period
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function CyclicValueDistance(start As Double, [end] As Double, period As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.CyclicValueDistance*
  nameWithType.vb: GameMath.CyclicValueDistance(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.CyclicValueDistance(Double, Double, Double)
  name.vb: CyclicValueDistance(Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.GenGaussKernel(System.Double,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.GenGaussKernel(System.Double,System.Int32)
  id: GenGaussKernel(System.Double,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: GenGaussKernel(double, int)
  nameWithType: GameMath.GenGaussKernel(double, int)
  fullName: Vintagestory.API.MathTools.GameMath.GenGaussKernel(double, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Generates a gaussian blur kernel to be used when blurring something
  example: []
  syntax:
    content: public static double[,] GenGaussKernel(double sigma = 1, int size = 5)
    parameters:
    - id: sigma
      type: System.Double
      description: ''
    - id: size
      type: System.Int32
      description: ''
    return:
      type: System.Double[,]
      description: ''
    content.vb: Public Shared Function GenGaussKernel(sigma As Double = 1, size As Integer = 5) As Double(,)
  overload: Vintagestory.API.MathTools.GameMath.GenGaussKernel*
  nameWithType.vb: GameMath.GenGaussKernel(Double, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.GenGaussKernel(Double, Integer)
  name.vb: GenGaussKernel(Double, Integer)
- uid: Vintagestory.API.MathTools.GameMath.BiLerpColorMap(Vintagestory.API.Datastructures.IntDataMap2D,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiLerpColorMap(Vintagestory.API.Datastructures.IntDataMap2D,System.Int32)
  id: BiLerpColorMap(Vintagestory.API.Datastructures.IntDataMap2D,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiLerpColorMap(IntDataMap2D, int)
  nameWithType: GameMath.BiLerpColorMap(IntDataMap2D, int)
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpColorMap(Vintagestory.API.Datastructures.IntDataMap2D, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Does linear interpolation on a 2d map for each of the 4 bytes individually (e.g. RGBA color). It's basically a bilinear zoom of an image like you know it from common image editing software. Only intended for square images.

    The resulting map will be without any paddding (also requires at least 1 padding at bottom and left side)
  example: []
  syntax:
    content: public static int[] BiLerpColorMap(IntDataMap2D map, int zoom)
    parameters:
    - id: map
      type: Vintagestory.API.Datastructures.IntDataMap2D
      description: ''
    - id: zoom
      type: System.Int32
      description: ''
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public Shared Function BiLerpColorMap(map As IntDataMap2D, zoom As Integer) As Integer()
  overload: Vintagestory.API.MathTools.GameMath.BiLerpColorMap*
  nameWithType.vb: GameMath.BiLerpColorMap(IntDataMap2D, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiLerpColorMap(Vintagestory.API.Datastructures.IntDataMap2D, Integer)
  name.vb: BiLerpColorMap(IntDataMap2D, Integer)
- uid: Vintagestory.API.MathTools.GameMath.BiLerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiLerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: BiLerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiLerpByte(float, float, int, int, int, int, int)
  nameWithType: GameMath.BiLerpByte(float, float, int, int, int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpByte(float, float, int, int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Linear Interpolates one selected bytes of the 4 ints
  example: []
  syntax:
    content: public static byte BiLerpByte(float lx, float ly, int byteIndex, int leftTop, int rightTop, int leftBottom, int rightBottom)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: ly
      type: System.Single
      description: ''
    - id: byteIndex
      type: System.Int32
      description: 0, 1, 2 or 3
    - id: leftTop
      type: System.Int32
      description: ''
    - id: rightTop
      type: System.Int32
      description: ''
    - id: leftBottom
      type: System.Int32
      description: ''
    - id: rightBottom
      type: System.Int32
      description: ''
    return:
      type: System.Byte
      description: ''
    content.vb: Public Shared Function BiLerpByte(lx As Single, ly As Single, byteIndex As Integer, leftTop As Integer, rightTop As Integer, leftBottom As Integer, rightBottom As Integer) As Byte
  overload: Vintagestory.API.MathTools.GameMath.BiLerpByte*
  nameWithType.vb: GameMath.BiLerpByte(Single, Single, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiLerpByte(Single, Single, Integer, Integer, Integer, Integer, Integer)
  name.vb: BiLerpByte(Single, Single, Integer, Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.BiSerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiSerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: BiSerpByte(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiSerpByte(float, float, int, int, int, int, int)
  nameWithType: GameMath.BiSerpByte(float, float, int, int, int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.BiSerpByte(float, float, int, int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Linear Interpolates one selected bytes of the 4 ints
  example: []
  syntax:
    content: public static byte BiSerpByte(float lx, float ly, int byteIndex, int leftTop, int rightTop, int leftBottom, int rightBottom)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: ly
      type: System.Single
      description: ''
    - id: byteIndex
      type: System.Int32
      description: 0, 1, 2 or 3
    - id: leftTop
      type: System.Int32
      description: ''
    - id: rightTop
      type: System.Int32
      description: ''
    - id: leftBottom
      type: System.Int32
      description: ''
    - id: rightBottom
      type: System.Int32
      description: ''
    return:
      type: System.Byte
      description: ''
    content.vb: Public Shared Function BiSerpByte(lx As Single, ly As Single, byteIndex As Integer, leftTop As Integer, rightTop As Integer, leftBottom As Integer, rightBottom As Integer) As Byte
  overload: Vintagestory.API.MathTools.GameMath.BiSerpByte*
  nameWithType.vb: GameMath.BiSerpByte(Single, Single, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiSerpByte(Single, Single, Integer, Integer, Integer, Integer, Integer)
  name.vb: BiSerpByte(Single, Single, Integer, Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  id: BiLerpRgbaColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiLerpRgbaColor(float, float, int, int, int, int)
  nameWithType: GameMath.BiLerpRgbaColor(float, float, int, int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor(float, float, int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Linear Interpolates the bytes of the int individually (i.e. interpolates RGB values individually)
  example: []
  syntax:
    content: public static int BiLerpRgbaColor(float lx, float ly, int leftTop, int rightTop, int leftBottom, int rightBottom)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: ly
      type: System.Single
      description: ''
    - id: leftTop
      type: System.Int32
      description: ''
    - id: rightTop
      type: System.Int32
      description: ''
    - id: leftBottom
      type: System.Int32
      description: ''
    - id: rightBottom
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function BiLerpRgbaColor(lx As Single, ly As Single, leftTop As Integer, rightTop As Integer, leftBottom As Integer, rightBottom As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor*
  nameWithType.vb: GameMath.BiLerpRgbaColor(Single, Single, Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor(Single, Single, Integer, Integer, Integer, Integer)
  name.vb: BiLerpRgbaColor(Single, Single, Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.BiLerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiLerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  id: BiLerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiLerpRgbColor(float, float, int, int, int, int)
  nameWithType: GameMath.BiLerpRgbColor(float, float, int, int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpRgbColor(float, float, int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Linear Interpolates the lower 3 bytes of the int individually (i.e. interpolates RGB values individually)
  example: []
  syntax:
    content: public static int BiLerpRgbColor(float lx, float ly, int leftTop, int rightTop, int leftBottom, int rightBottom)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: ly
      type: System.Single
      description: ''
    - id: leftTop
      type: System.Int32
      description: ''
    - id: rightTop
      type: System.Int32
      description: ''
    - id: leftBottom
      type: System.Int32
      description: ''
    - id: rightBottom
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function BiLerpRgbColor(lx As Single, ly As Single, leftTop As Integer, rightTop As Integer, leftBottom As Integer, rightBottom As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.BiLerpRgbColor*
  nameWithType.vb: GameMath.BiLerpRgbColor(Single, Single, Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiLerpRgbColor(Single, Single, Integer, Integer, Integer, Integer)
  name.vb: BiLerpRgbColor(Single, Single, Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.BiSerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiSerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  id: BiSerpRgbColor(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiSerpRgbColor(float, float, int, int, int, int)
  nameWithType: GameMath.BiSerpRgbColor(float, float, int, int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.BiSerpRgbColor(float, float, int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Smoothstep Interpolates the lower 3 bytes of the int individually (i.e. interpolates RGB values individually)
  example: []
  syntax:
    content: public static int BiSerpRgbColor(float lx, float ly, int leftTop, int rightTop, int leftBottom, int rightBottom)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: ly
      type: System.Single
      description: ''
    - id: leftTop
      type: System.Int32
      description: ''
    - id: rightTop
      type: System.Int32
      description: ''
    - id: leftBottom
      type: System.Int32
      description: ''
    - id: rightBottom
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function BiSerpRgbColor(lx As Single, ly As Single, leftTop As Integer, rightTop As Integer, leftBottom As Integer, rightBottom As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.BiSerpRgbColor*
  nameWithType.vb: GameMath.BiSerpRgbColor(Single, Single, Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiSerpRgbColor(Single, Single, Integer, Integer, Integer, Integer)
  name.vb: BiSerpRgbColor(Single, Single, Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.LerpRgbColor(System.Single,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.LerpRgbColor(System.Single,System.Int32,System.Int32)
  id: LerpRgbColor(System.Single,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: LerpRgbColor(float, int, int)
  nameWithType: GameMath.LerpRgbColor(float, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.LerpRgbColor(float, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Linear Interpolates the lower 3 bytes of the int individually (i.e. interpolates RGB values individually)
  example: []
  syntax:
    content: public static int LerpRgbColor(float lx, int left, int right)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: left
      type: System.Int32
      description: ''
    - id: right
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function LerpRgbColor(lx As Single, left As Integer, right As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.LerpRgbColor*
  nameWithType.vb: GameMath.LerpRgbColor(Single, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.LerpRgbColor(Single, Integer, Integer)
  name.vb: LerpRgbColor(Single, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.LerpRgbaColor(System.Single,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.LerpRgbaColor(System.Single,System.Int32,System.Int32)
  id: LerpRgbaColor(System.Single,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: LerpRgbaColor(float, int, int)
  nameWithType: GameMath.LerpRgbaColor(float, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.LerpRgbaColor(float, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Linear Interpolates the 4 bytes of the int individually (i.e. interpolates RGB values individually)
  example: []
  syntax:
    content: public static int LerpRgbaColor(float lx, int left, int right)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: left
      type: System.Int32
      description: ''
    - id: right
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function LerpRgbaColor(lx As Single, left As Integer, right As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.LerpRgbaColor*
  nameWithType.vb: GameMath.LerpRgbaColor(Single, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.LerpRgbaColor(Single, Integer, Integer)
  name.vb: LerpRgbaColor(Single, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.LerpByte(System.Single,System.Byte,System.Byte)
  commentId: M:Vintagestory.API.MathTools.GameMath.LerpByte(System.Single,System.Byte,System.Byte)
  id: LerpByte(System.Single,System.Byte,System.Byte)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: LerpByte(float, byte, byte)
  nameWithType: GameMath.LerpByte(float, byte, byte)
  fullName: Vintagestory.API.MathTools.GameMath.LerpByte(float, byte, byte)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Linear Interpolates a single byte
  example: []
  syntax:
    content: public static byte LerpByte(float lx, byte left, byte right)
    parameters:
    - id: lx
      type: System.Single
      description: ''
    - id: left
      type: System.Byte
      description: ''
    - id: right
      type: System.Byte
      description: ''
    return:
      type: System.Byte
      description: ''
    content.vb: Public Shared Function LerpByte(lx As Single, left As Byte, right As Byte) As Byte
  overload: Vintagestory.API.MathTools.GameMath.LerpByte*
  nameWithType.vb: GameMath.LerpByte(Single, Byte, Byte)
  fullName.vb: Vintagestory.API.MathTools.GameMath.LerpByte(Single, Byte, Byte)
  name.vb: LerpByte(Single, Byte, Byte)
- uid: Vintagestory.API.MathTools.GameMath.BiLerp(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiLerp(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: BiLerp(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiLerp(float, float, float, float, float, float)
  nameWithType: GameMath.BiLerp(float, float, float, float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.BiLerp(float, float, float, float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Basic Bilinear Lerp
  example: []
  syntax:
    content: public static float BiLerp(float topleft, float topright, float botleft, float botright, float x, float z)
    parameters:
    - id: topleft
      type: System.Single
      description: ''
    - id: topright
      type: System.Single
      description: ''
    - id: botleft
      type: System.Single
      description: ''
    - id: botright
      type: System.Single
      description: ''
    - id: x
      type: System.Single
      description: ''
    - id: z
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function BiLerp(topleft As Single, topright As Single, botleft As Single, botright As Single, x As Single, z As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.BiLerp*
  nameWithType.vb: GameMath.BiLerp(Single, Single, Single, Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiLerp(Single, Single, Single, Single, Single, Single)
  name.vb: BiLerp(Single, Single, Single, Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.BiLerp(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.BiLerp(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: BiLerp(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BiLerp(double, double, double, double, double, double)
  nameWithType: GameMath.BiLerp(double, double, double, double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.BiLerp(double, double, double, double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Basic Bilinear Lerp
  example: []
  syntax:
    content: public static double BiLerp(double topleft, double topright, double botleft, double botright, double x, double z)
    parameters:
    - id: topleft
      type: System.Double
      description: ''
    - id: topright
      type: System.Double
      description: ''
    - id: botleft
      type: System.Double
      description: ''
    - id: botright
      type: System.Double
      description: ''
    - id: x
      type: System.Double
      description: ''
    - id: z
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function BiLerp(topleft As Double, topright As Double, botleft As Double, botright As Double, x As Double, z As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.BiLerp*
  nameWithType.vb: GameMath.BiLerp(Double, Double, Double, Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BiLerp(Double, Double, Double, Double, Double, Double)
  name.vb: BiLerp(Double, Double, Double, Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.Mix(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Mix(System.Single,System.Single,System.Single)
  id: Mix(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Mix(float, float, float)
  nameWithType: GameMath.Mix(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.Mix(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Same as <xref href="Vintagestory.API.MathTools.GameMath.Lerp(System.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static float Mix(float v0, float v1, float t)
    parameters:
    - id: v0
      type: System.Single
      description: ''
    - id: v1
      type: System.Single
      description: ''
    - id: t
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Mix(v0 As Single, v1 As Single, t As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Mix*
  nameWithType.vb: GameMath.Mix(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Mix(Single, Single, Single)
  name.vb: Mix(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.Mix(System.Int32,System.Int32,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Mix(System.Int32,System.Int32,System.Single)
  id: Mix(System.Int32,System.Int32,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Mix(int, int, float)
  nameWithType: GameMath.Mix(int, int, float)
  fullName: Vintagestory.API.MathTools.GameMath.Mix(int, int, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Same as <xref href="Vintagestory.API.MathTools.GameMath.Lerp(System.Single%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static int Mix(int v0, int v1, float t)
    parameters:
    - id: v0
      type: System.Int32
      description: ''
    - id: v1
      type: System.Int32
      description: ''
    - id: t
      type: System.Single
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Mix(v0 As Integer, v1 As Integer, t As Single) As Integer
  overload: Vintagestory.API.MathTools.GameMath.Mix*
  nameWithType.vb: GameMath.Mix(Integer, Integer, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Mix(Integer, Integer, Single)
  name.vb: Mix(Integer, Integer, Single)
- uid: Vintagestory.API.MathTools.GameMath.Lerp(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Lerp(System.Single,System.Single,System.Single)
  id: Lerp(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Lerp(float, float, float)
  nameWithType: GameMath.Lerp(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.Lerp(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Basic Lerp
  example: []
  syntax:
    content: public static float Lerp(float v0, float v1, float t)
    parameters:
    - id: v0
      type: System.Single
      description: ''
    - id: v1
      type: System.Single
      description: ''
    - id: t
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Lerp(v0 As Single, v1 As Single, t As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Lerp*
  nameWithType.vb: GameMath.Lerp(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Lerp(Single, Single, Single)
  name.vb: Lerp(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.Lerp(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Lerp(System.Double,System.Double,System.Double)
  id: Lerp(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Lerp(double, double, double)
  nameWithType: GameMath.Lerp(double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.Lerp(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Basic Lerp
  example: []
  syntax:
    content: public static double Lerp(double v0, double v1, double t)
    parameters:
    - id: v0
      type: System.Double
      description: ''
    - id: v1
      type: System.Double
      description: ''
    - id: t
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function Lerp(v0 As Double, v1 As Double, t As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Lerp*
  nameWithType.vb: GameMath.Lerp(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Lerp(Double, Double, Double)
  name.vb: Lerp(Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.Serp(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Serp(System.Single,System.Single,System.Single)
  id: Serp(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Serp(float, float, float)
  nameWithType: GameMath.Serp(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.Serp(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Smooth Interpolation using inlined Smoothstep
  example: []
  syntax:
    content: public static float Serp(float v0, float v1, float t)
    parameters:
    - id: v0
      type: System.Single
      description: ''
    - id: v1
      type: System.Single
      description: ''
    - id: t
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Serp(v0 As Single, v1 As Single, t As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Serp*
  nameWithType.vb: GameMath.Serp(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Serp(Single, Single, Single)
  name.vb: Serp(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp(System.Double,System.Double[],System.Double[])
  commentId: M:Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp(System.Double,System.Double[],System.Double[])
  id: CPCatmullRomSplineLerp(System.Double,System.Double[],System.Double[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: CPCatmullRomSplineLerp(double, double[], double[])
  nameWithType: GameMath.CPCatmullRomSplineLerp(double, double[], double[])
  fullName: Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp(double, double[], double[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Unlike the other implementation here, which uses the default "uniform"

    treatment of t, this computation is used to calculate the same values but

    introduces the ability to "parameterize" the t values used in the

    calculation. This is based on Figure 3 from

    http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
  example: []
  syntax:
    content: public static double CPCatmullRomSplineLerp(double t, double[] p, double[] time)
    parameters:
    - id: t
      type: System.Double
      description: the actual interpolation ratio from 0 to 1 representing the position between p1 and p2 to interpolate the value.
    - id: p
      type: System.Double[]
      description: An array of double values of length 4, where interpolation occurs from p1 to p2.
    - id: time
      type: System.Double[]
      description: An array of time measures of length 4, corresponding to each p value.
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function CPCatmullRomSplineLerp(t As Double, p As Double(), time As Double()) As Double
  overload: Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp*
  nameWithType.vb: GameMath.CPCatmullRomSplineLerp(Double, Double(), Double())
  fullName.vb: Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp(Double, Double(), Double())
  name.vb: CPCatmullRomSplineLerp(Double, Double(), Double())
- uid: Vintagestory.API.MathTools.GameMath.SmoothStep(System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.SmoothStep(System.Single)
  id: SmoothStep(System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: SmoothStep(float)
  nameWithType: GameMath.SmoothStep(float)
  fullName: Vintagestory.API.MathTools.GameMath.SmoothStep(float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Better Lerp but more CPU intensive, see also https://en.wikipedia.org/wiki/Smoothstep
  example: []
  syntax:
    content: public static float SmoothStep(float x)
    parameters:
    - id: x
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function SmoothStep(x As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.SmoothStep*
  nameWithType.vb: GameMath.SmoothStep(Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.SmoothStep(Single)
  name.vb: SmoothStep(Single)
- uid: Vintagestory.API.MathTools.GameMath.SmoothStep(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.SmoothStep(System.Double)
  id: SmoothStep(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: SmoothStep(double)
  nameWithType: GameMath.SmoothStep(double)
  fullName: Vintagestory.API.MathTools.GameMath.SmoothStep(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Better Lerp but more CPU intensive, see also https://en.wikipedia.org/wiki/Smoothstep
  example: []
  syntax:
    content: public static double SmoothStep(double x)
    parameters:
    - id: x
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function SmoothStep(x As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.SmoothStep*
  nameWithType.vb: GameMath.SmoothStep(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.SmoothStep(Double)
  name.vb: SmoothStep(Double)
- uid: Vintagestory.API.MathTools.GameMath.Smootherstep(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Smootherstep(System.Single,System.Single,System.Single)
  id: Smootherstep(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Smootherstep(float, float, float)
  nameWithType: GameMath.Smootherstep(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.Smootherstep(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Better Lerp but more CPU intensive, see also https://en.wikipedia.org/wiki/Smoothstep
  example: []
  syntax:
    content: public static float Smootherstep(float edge0, float edge1, float x)
    parameters:
    - id: edge0
      type: System.Single
      description: ''
    - id: edge1
      type: System.Single
      description: ''
    - id: x
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Smootherstep(edge0 As Single, edge1 As Single, x As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.Smootherstep*
  nameWithType.vb: GameMath.Smootherstep(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Smootherstep(Single, Single, Single)
  name.vb: Smootherstep(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.Smootherstep(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Smootherstep(System.Double,System.Double,System.Double)
  id: Smootherstep(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Smootherstep(double, double, double)
  nameWithType: GameMath.Smootherstep(double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.Smootherstep(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Better Lerp but more CPU intensive, see also https://en.wikipedia.org/wiki/Smoothstep
  example: []
  syntax:
    content: public static double Smootherstep(double edge0, double edge1, double x)
    parameters:
    - id: edge0
      type: System.Double
      description: ''
    - id: edge1
      type: System.Double
      description: ''
    - id: x
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function Smootherstep(edge0 As Double, edge1 As Double, x As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Smootherstep*
  nameWithType.vb: GameMath.Smootherstep(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Smootherstep(Double, Double, Double)
  name.vb: Smootherstep(Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.Smootherstep(System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.Smootherstep(System.Double)
  id: Smootherstep(System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Smootherstep(double)
  nameWithType: GameMath.Smootherstep(double)
  fullName: Vintagestory.API.MathTools.GameMath.Smootherstep(double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Better Lerp but more CPU intensive, see also https://en.wikipedia.org/wiki/Smoothstep. x must be in range of 0..1
  example: []
  syntax:
    content: public static double Smootherstep(double x)
    parameters:
    - id: x
      type: System.Double
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function Smootherstep(x As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.Smootherstep*
  nameWithType.vb: GameMath.Smootherstep(Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Smootherstep(Double)
  name.vb: Smootherstep(Double)
- uid: Vintagestory.API.MathTools.GameMath.TriangleStep(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.TriangleStep(System.Int32,System.Int32,System.Int32)
  id: TriangleStep(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: TriangleStep(int, int, int)
  nameWithType: GameMath.TriangleStep(int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.TriangleStep(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: " Returns a value between 0..1. Returns 0 if val is smaller than left or greater than right. For val == (left+right)/2 the return value is 1. Every other value is a linear interpolation based on the distance to the middle value. Ascii art representation:\n\n1  |      /\\\n   |     /  \\\n0.5|    /    \\\n   |   /      \\\n   |  /        \\\n0  __/__________\\______\n  left          right"
  example: []
  syntax:
    content: public static float TriangleStep(int val, int left, int right)
    parameters:
    - id: val
      type: System.Int32
      description: ''
    - id: left
      type: System.Int32
      description: ''
    - id: right
      type: System.Int32
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function TriangleStep(val As Integer, left As Integer, right As Integer) As Single
  overload: Vintagestory.API.MathTools.GameMath.TriangleStep*
  nameWithType.vb: GameMath.TriangleStep(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.TriangleStep(Integer, Integer, Integer)
  name.vb: TriangleStep(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.TriangleStep(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.TriangleStep(System.Single,System.Single,System.Single)
  id: TriangleStep(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: TriangleStep(float, float, float)
  nameWithType: GameMath.TriangleStep(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.TriangleStep(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: " Returns a value between 0..1. Returns 0 if val is smaller than left or greater than right. For val == (left+right)/2 the return value is 1. Every other value is a linear interpolation based on the distance to the middle value. Ascii art representation:\n\n1  |      /\\\n   |     /  \\\n0.5|    /    \\\n   |   /      \\\n   |  /        \\\n0  __/__________\\______\n  left          right"
  example: []
  syntax:
    content: public static float TriangleStep(float val, float left, float right)
    parameters:
    - id: val
      type: System.Single
      description: ''
    - id: left
      type: System.Single
      description: ''
    - id: right
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function TriangleStep(val As Single, left As Single, right As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.TriangleStep*
  nameWithType.vb: GameMath.TriangleStep(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.TriangleStep(Single, Single, Single)
  name.vb: TriangleStep(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.TriangleStepFast(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.TriangleStepFast(System.Int32,System.Int32,System.Int32)
  id: TriangleStepFast(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: TriangleStepFast(int, int, int)
  nameWithType: GameMath.TriangleStepFast(int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.TriangleStepFast(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Same as TriangleStep but skipping the step to calc mid and range.
  example: []
  syntax:
    content: public static float TriangleStepFast(int val, int mid, int range)
    parameters:
    - id: val
      type: System.Int32
      description: ''
    - id: mid
      type: System.Int32
      description: ''
    - id: range
      type: System.Int32
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function TriangleStepFast(val As Integer, mid As Integer, range As Integer) As Single
  overload: Vintagestory.API.MathTools.GameMath.TriangleStepFast*
  nameWithType.vb: GameMath.TriangleStepFast(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.TriangleStepFast(Integer, Integer, Integer)
  name.vb: TriangleStepFast(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.Max(System.Double[])
  commentId: M:Vintagestory.API.MathTools.GameMath.Max(System.Double[])
  id: Max(System.Double[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Max(params double[])
  nameWithType: GameMath.Max(params double[])
  fullName: Vintagestory.API.MathTools.GameMath.Max(params double[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double Max(params double[] values)
    parameters:
    - id: values
      type: System.Double[]
    return:
      type: System.Double
    content.vb: Public Shared Function Max(ParamArray values As Double()) As Double
  overload: Vintagestory.API.MathTools.GameMath.Max*
  nameWithType.vb: GameMath.Max(ParamArray Double())
  fullName.vb: Vintagestory.API.MathTools.GameMath.Max(ParamArray Double())
  name.vb: Max(ParamArray Double())
- uid: Vintagestory.API.MathTools.GameMath.Max(System.Single[])
  commentId: M:Vintagestory.API.MathTools.GameMath.Max(System.Single[])
  id: Max(System.Single[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Max(params float[])
  nameWithType: GameMath.Max(params float[])
  fullName: Vintagestory.API.MathTools.GameMath.Max(params float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Max(params float[] values)
    parameters:
    - id: values
      type: System.Single[]
    return:
      type: System.Single
    content.vb: Public Shared Function Max(ParamArray values As Single()) As Single
  overload: Vintagestory.API.MathTools.GameMath.Max*
  nameWithType.vb: GameMath.Max(ParamArray Single())
  fullName.vb: Vintagestory.API.MathTools.GameMath.Max(ParamArray Single())
  name.vb: Max(ParamArray Single())
- uid: Vintagestory.API.MathTools.GameMath.Max(System.Int32[])
  commentId: M:Vintagestory.API.MathTools.GameMath.Max(System.Int32[])
  id: Max(System.Int32[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Max(params int[])
  nameWithType: GameMath.Max(params int[])
  fullName: Vintagestory.API.MathTools.GameMath.Max(params int[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static int Max(params int[] values)
    parameters:
    - id: values
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function Max(ParamArray values As Integer()) As Integer
  overload: Vintagestory.API.MathTools.GameMath.Max*
  nameWithType.vb: GameMath.Max(ParamArray Integer())
  fullName.vb: Vintagestory.API.MathTools.GameMath.Max(ParamArray Integer())
  name.vb: Max(ParamArray Integer())
- uid: Vintagestory.API.MathTools.GameMath.Min(System.Int32[])
  commentId: M:Vintagestory.API.MathTools.GameMath.Min(System.Int32[])
  id: Min(System.Int32[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Min(params int[])
  nameWithType: GameMath.Min(params int[])
  fullName: Vintagestory.API.MathTools.GameMath.Min(params int[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static int Min(params int[] values)
    parameters:
    - id: values
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function Min(ParamArray values As Integer()) As Integer
  overload: Vintagestory.API.MathTools.GameMath.Min*
  nameWithType.vb: GameMath.Min(ParamArray Integer())
  fullName.vb: Vintagestory.API.MathTools.GameMath.Min(ParamArray Integer())
  name.vb: Min(ParamArray Integer())
- uid: Vintagestory.API.MathTools.GameMath.Min(System.Single[])
  commentId: M:Vintagestory.API.MathTools.GameMath.Min(System.Single[])
  id: Min(System.Single[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Min(params float[])
  nameWithType: GameMath.Min(params float[])
  fullName: Vintagestory.API.MathTools.GameMath.Min(params float[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float Min(params float[] values)
    parameters:
    - id: values
      type: System.Single[]
    return:
      type: System.Single
    content.vb: Public Shared Function Min(ParamArray values As Single()) As Single
  overload: Vintagestory.API.MathTools.GameMath.Min*
  nameWithType.vb: GameMath.Min(ParamArray Single())
  fullName.vb: Vintagestory.API.MathTools.GameMath.Min(ParamArray Single())
  name.vb: Min(ParamArray Single())
- uid: Vintagestory.API.MathTools.GameMath.SmoothMin(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.SmoothMin(System.Single,System.Single,System.Single)
  id: SmoothMin(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: SmoothMin(float, float, float)
  nameWithType: GameMath.SmoothMin(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.SmoothMin(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float SmoothMin(float a, float b, float smoothingFactor)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: smoothingFactor
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SmoothMin(a As Single, b As Single, smoothingFactor As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.SmoothMin*
  nameWithType.vb: GameMath.SmoothMin(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.SmoothMin(Single, Single, Single)
  name.vb: SmoothMin(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.SmoothMax(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.SmoothMax(System.Single,System.Single,System.Single)
  id: SmoothMax(System.Single,System.Single,System.Single)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: SmoothMax(float, float, float)
  nameWithType: GameMath.SmoothMax(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.SmoothMax(float, float, float)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static float SmoothMax(float a, float b, float smoothingFactor)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: smoothingFactor
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SmoothMax(a As Single, b As Single, smoothingFactor As Single) As Single
  overload: Vintagestory.API.MathTools.GameMath.SmoothMax*
  nameWithType.vb: GameMath.SmoothMax(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.SmoothMax(Single, Single, Single)
  name.vb: SmoothMax(Single, Single, Single)
- uid: Vintagestory.API.MathTools.GameMath.SmoothMin(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.SmoothMin(System.Double,System.Double,System.Double)
  id: SmoothMin(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: SmoothMin(double, double, double)
  nameWithType: GameMath.SmoothMin(double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.SmoothMin(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double SmoothMin(double a, double b, double smoothingFactor)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: smoothingFactor
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function SmoothMin(a As Double, b As Double, smoothingFactor As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.SmoothMin*
  nameWithType.vb: GameMath.SmoothMin(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.SmoothMin(Double, Double, Double)
  name.vb: SmoothMin(Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.SmoothMax(System.Double,System.Double,System.Double)
  commentId: M:Vintagestory.API.MathTools.GameMath.SmoothMax(System.Double,System.Double,System.Double)
  id: SmoothMax(System.Double,System.Double,System.Double)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: SmoothMax(double, double, double)
  nameWithType: GameMath.SmoothMax(double, double, double)
  fullName: Vintagestory.API.MathTools.GameMath.SmoothMax(double, double, double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static double SmoothMax(double a, double b, double smoothingFactor)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: smoothingFactor
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function SmoothMax(a As Double, b As Double, smoothingFactor As Double) As Double
  overload: Vintagestory.API.MathTools.GameMath.SmoothMax*
  nameWithType.vb: GameMath.SmoothMax(Double, Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.SmoothMax(Double, Double, Double)
  name.vb: SmoothMax(Double, Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.Crc32(System.String)
  commentId: M:Vintagestory.API.MathTools.GameMath.Crc32(System.String)
  id: Crc32(System.String)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Crc32(string)
  nameWithType: GameMath.Crc32(string)
  fullName: Vintagestory.API.MathTools.GameMath.Crc32(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static uint Crc32(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.UInt32
    content.vb: Public Shared Function Crc32(input As String) As UInteger
  overload: Vintagestory.API.MathTools.GameMath.Crc32*
  nameWithType.vb: GameMath.Crc32(String)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Crc32(String)
  name.vb: Crc32(String)
- uid: Vintagestory.API.MathTools.GameMath.Crc32(System.Byte[])
  commentId: M:Vintagestory.API.MathTools.GameMath.Crc32(System.Byte[])
  id: Crc32(System.Byte[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Crc32(byte[])
  nameWithType: GameMath.Crc32(byte[])
  fullName: Vintagestory.API.MathTools.GameMath.Crc32(byte[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static uint Crc32(byte[] input)
    parameters:
    - id: input
      type: System.Byte[]
    return:
      type: System.UInt32
    content.vb: Public Shared Function Crc32(input As Byte()) As UInteger
  overload: Vintagestory.API.MathTools.GameMath.Crc32*
  nameWithType.vb: GameMath.Crc32(Byte())
  fullName.vb: Vintagestory.API.MathTools.GameMath.Crc32(Byte())
  name.vb: Crc32(Byte())
- uid: Vintagestory.API.MathTools.GameMath.DotNetStringHash(System.String)
  commentId: M:Vintagestory.API.MathTools.GameMath.DotNetStringHash(System.String)
  id: DotNetStringHash(System.String)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: DotNetStringHash(string)
  nameWithType: GameMath.DotNetStringHash(string)
  fullName: Vintagestory.API.MathTools.GameMath.DotNetStringHash(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: >-
    Pretty much taken directly from the string.GetHashCode() implementation, but on these methods the documentation states: "You should never persist or use a hash code outside the application domain in which it was created, [...]."

    Hence, this is one basic 32bit bit implementation that can be used in a platform independent, persistent way.
  example: []
  syntax:
    content: public static int DotNetStringHash(string text)
    parameters:
    - id: text
      type: System.String
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function DotNetStringHash(text As String) As Integer
  overload: Vintagestory.API.MathTools.GameMath.DotNetStringHash*
  nameWithType.vb: GameMath.DotNetStringHash(String)
  fullName.vb: Vintagestory.API.MathTools.GameMath.DotNetStringHash(String)
  name.vb: DotNetStringHash(String)
- uid: Vintagestory.API.MathTools.GameMath.Md5Hash(System.String)
  commentId: M:Vintagestory.API.MathTools.GameMath.Md5Hash(System.String)
  id: Md5Hash(System.String)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Md5Hash(string)
  nameWithType: GameMath.Md5Hash(string)
  fullName: Vintagestory.API.MathTools.GameMath.Md5Hash(string)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: See also https://msdn.microsoft.com/en-us/library/system.security.cryptography.md5%28v=vs.110%29.aspx
  example: []
  syntax:
    content: public static string Md5Hash(string input)
    parameters:
    - id: input
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Md5Hash(input As String) As String
  overload: Vintagestory.API.MathTools.GameMath.Md5Hash*
  nameWithType.vb: GameMath.Md5Hash(String)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Md5Hash(String)
  name.vb: Md5Hash(String)
- uid: Vintagestory.API.MathTools.GameMath.oaatHashMany(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHashMany(System.Int32,System.Int32)
  id: oaatHashMany(System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHashMany(int, int)
  nameWithType: GameMath.oaatHashMany(int, int)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHashMany(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: A single iteration of Bob Jenkins' One-At-A-Time hashing algorithm.
  example: []
  syntax:
    content: public static int oaatHashMany(int x, int count)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function oaatHashMany(x As Integer, count As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.oaatHashMany*
  nameWithType.vb: GameMath.oaatHashMany(Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.oaatHashMany(Integer, Integer)
  name.vb: oaatHashMany(Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.oaatHashUMany(System.UInt32)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHashUMany(System.UInt32)
  id: oaatHashUMany(System.UInt32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHashUMany(uint)
  nameWithType: GameMath.oaatHashUMany(uint)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHashUMany(uint)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Bob Jenkins' One-At-A-Time hashing algorithm
  example: []
  syntax:
    content: public static uint oaatHashUMany(uint x)
    parameters:
    - id: x
      type: System.UInt32
      description: ''
    return:
      type: System.UInt32
      description: ''
    content.vb: Public Shared Function oaatHashUMany(x As UInteger) As UInteger
  overload: Vintagestory.API.MathTools.GameMath.oaatHashUMany*
  nameWithType.vb: GameMath.oaatHashUMany(UInteger)
  fullName.vb: Vintagestory.API.MathTools.GameMath.oaatHashUMany(UInteger)
  name.vb: oaatHashUMany(UInteger)
- uid: Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec2i)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec2i)
  id: oaatHash(Vintagestory.API.MathTools.Vec2i)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHash(Vec2i)
  nameWithType: GameMath.oaatHash(Vec2i)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec2i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Bob Jenkins' One-At-A-Time hashing algorithm. Fast, but not very random.
  example: []
  syntax:
    content: public static int oaatHash(Vec2i v)
    parameters:
    - id: v
      type: Vintagestory.API.MathTools.Vec2i
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function oaatHash(v As Vec2i) As Integer
  overload: Vintagestory.API.MathTools.GameMath.oaatHash*
- uid: Vintagestory.API.MathTools.GameMath.oaatHash(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHash(System.Int32,System.Int32)
  id: oaatHash(System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHash(int, int)
  nameWithType: GameMath.oaatHash(int, int)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHash(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Bob Jenkins' One-At-A-Time hashing algorithm. Fast, but not very random.
  example: []
  syntax:
    content: public static int oaatHash(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function oaatHash(x As Integer, y As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.oaatHash*
  nameWithType.vb: GameMath.oaatHash(Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.oaatHash(Integer, Integer)
  name.vb: oaatHash(Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec3i)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec3i)
  id: oaatHash(Vintagestory.API.MathTools.Vec3i)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHash(Vec3i)
  nameWithType: GameMath.oaatHash(Vec3i)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec3i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Bob Jenkins' One-At-A-Time hashing algorithm. Fast, but not very random.
  example: []
  syntax:
    content: public static int oaatHash(Vec3i v)
    parameters:
    - id: v
      type: Vintagestory.API.MathTools.Vec3i
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function oaatHash(v As Vec3i) As Integer
  overload: Vintagestory.API.MathTools.GameMath.oaatHash*
- uid: Vintagestory.API.MathTools.GameMath.oaatHash(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHash(System.Int32,System.Int32,System.Int32)
  id: oaatHash(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHash(int, int, int)
  nameWithType: GameMath.oaatHash(int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHash(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Bob Jenkins' One-At-A-Time hashing algorithm. Fast, but not very random.
  example: []
  syntax:
    content: public static int oaatHash(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function oaatHash(x As Integer, y As Integer, z As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.oaatHash*
  nameWithType.vb: GameMath.oaatHash(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.oaatHash(Integer, Integer, Integer)
  name.vb: oaatHash(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.oaatHashU(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHashU(System.Int32,System.Int32,System.Int32)
  id: oaatHashU(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHashU(int, int, int)
  nameWithType: GameMath.oaatHashU(int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHashU(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Bob Jenkins' One-At-A-Time hashing algorithm. Fast, but not very random.
  example: []
  syntax:
    content: public static uint oaatHashU(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: System.UInt32
      description: ''
    content.vb: Public Shared Function oaatHashU(x As Integer, y As Integer, z As Integer) As UInteger
  overload: Vintagestory.API.MathTools.GameMath.oaatHashU*
  nameWithType.vb: GameMath.oaatHashU(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.oaatHashU(Integer, Integer, Integer)
  name.vb: oaatHashU(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec4i)
  commentId: M:Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec4i)
  id: oaatHash(Vintagestory.API.MathTools.Vec4i)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: oaatHash(Vec4i)
  nameWithType: GameMath.oaatHash(Vec4i)
  fullName: Vintagestory.API.MathTools.GameMath.oaatHash(Vintagestory.API.MathTools.Vec4i)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Bob Jenkins' One-At-A-Time hashing algorithm. Fast, but not very random.
  example: []
  syntax:
    content: public static int oaatHash(Vec4i v)
    parameters:
    - id: v
      type: Vintagestory.API.MathTools.Vec4i
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function oaatHash(v As Vec4i) As Integer
  overload: Vintagestory.API.MathTools.GameMath.oaatHash*
- uid: Vintagestory.API.MathTools.GameMath.PrettyBadHash(System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.PrettyBadHash(System.Int32,System.Int32)
  id: PrettyBadHash(System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: PrettyBadHash(int, int)
  nameWithType: GameMath.PrettyBadHash(int, int)
  fullName: Vintagestory.API.MathTools.GameMath.PrettyBadHash(int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: A really bad, but very fast hashing method.
  example: []
  syntax:
    content: public static float PrettyBadHash(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function PrettyBadHash(x As Integer, y As Integer) As Single
  overload: Vintagestory.API.MathTools.GameMath.PrettyBadHash*
  nameWithType.vb: GameMath.PrettyBadHash(Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.PrettyBadHash(Integer, Integer)
  name.vb: PrettyBadHash(Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.MurmurHash3Mod(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.MurmurHash3Mod(System.Int32,System.Int32,System.Int32,System.Int32)
  id: MurmurHash3Mod(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: MurmurHash3Mod(int, int, int, int)
  nameWithType: GameMath.MurmurHash3Mod(int, int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.MurmurHash3Mod(int, int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: A not so fast, but higher quality than oaatHash(). See also https://en.wikipedia.org/wiki/MurmurHash. Includes a modulo operation.
  example: []
  syntax:
    content: public static int MurmurHash3Mod(int x, int y, int z, int mod)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    - id: mod
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function MurmurHash3Mod(x As Integer, y As Integer, z As Integer, [mod] As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.MurmurHash3Mod*
  nameWithType.vb: GameMath.MurmurHash3Mod(Integer, Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.MurmurHash3Mod(Integer, Integer, Integer, Integer)
  name.vb: MurmurHash3Mod(Integer, Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.MurmurHash3(System.Int32,System.Int32,System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.MurmurHash3(System.Int32,System.Int32,System.Int32)
  id: MurmurHash3(System.Int32,System.Int32,System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: MurmurHash3(int, int, int)
  nameWithType: GameMath.MurmurHash3(int, int, int)
  fullName: Vintagestory.API.MathTools.GameMath.MurmurHash3(int, int, int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: A not so fast, but higher quality than oaatHash(). See also https://en.wikipedia.org/wiki/MurmurHash
  example: []
  syntax:
    content: public static int MurmurHash3(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function MurmurHash3(x As Integer, y As Integer, z As Integer) As Integer
  overload: Vintagestory.API.MathTools.GameMath.MurmurHash3*
  nameWithType.vb: GameMath.MurmurHash3(Integer, Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.MurmurHash3(Integer, Integer, Integer)
  name.vb: MurmurHash3(Integer, Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.R2Sequence1D(System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.R2Sequence1D(System.Int32)
  id: R2Sequence1D(System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: R2Sequence1D(int)
  nameWithType: GameMath.R2Sequence1D(int)
  fullName: Vintagestory.API.MathTools.GameMath.R2Sequence1D(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Quasirandom sequence by Martin Roberts (http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/)
  example: []
  syntax:
    content: public static double R2Sequence1D(int n)
    parameters:
    - id: n
      type: System.Int32
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Shared Function R2Sequence1D(n As Integer) As Double
  overload: Vintagestory.API.MathTools.GameMath.R2Sequence1D*
  nameWithType.vb: GameMath.R2Sequence1D(Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.R2Sequence1D(Integer)
  name.vb: R2Sequence1D(Integer)
- uid: Vintagestory.API.MathTools.GameMath.R2Sequence2D(System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.R2Sequence2D(System.Int32)
  id: R2Sequence2D(System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: R2Sequence2D(int)
  nameWithType: GameMath.R2Sequence2D(int)
  fullName: Vintagestory.API.MathTools.GameMath.R2Sequence2D(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Quasirandom sequence by Martin Roberts (http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/)
  example: []
  syntax:
    content: public static Vec2d R2Sequence2D(int n)
    parameters:
    - id: n
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec2d
      description: ''
    content.vb: Public Shared Function R2Sequence2D(n As Integer) As Vec2d
  overload: Vintagestory.API.MathTools.GameMath.R2Sequence2D*
  nameWithType.vb: GameMath.R2Sequence2D(Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.R2Sequence2D(Integer)
  name.vb: R2Sequence2D(Integer)
- uid: Vintagestory.API.MathTools.GameMath.R2Sequence3D(System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.R2Sequence3D(System.Int32)
  id: R2Sequence3D(System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: R2Sequence3D(int)
  nameWithType: GameMath.R2Sequence3D(int)
  fullName: Vintagestory.API.MathTools.GameMath.R2Sequence3D(int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Quasirandom sequence by Martin Roberts (http://extremelearning.com.au/unreasonable-effectiveness-of-quasirandom-sequences/)
  example: []
  syntax:
    content: public static Vec3d R2Sequence3D(int n)
    parameters:
    - id: n
      type: System.Int32
      description: ''
    return:
      type: Vintagestory.API.MathTools.Vec3d
      description: ''
    content.vb: Public Shared Function R2Sequence3D(n As Integer) As Vec3d
  overload: Vintagestory.API.MathTools.GameMath.R2Sequence3D*
  nameWithType.vb: GameMath.R2Sequence3D(Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.R2Sequence3D(Integer)
  name.vb: R2Sequence3D(Integer)
- uid: Vintagestory.API.MathTools.GameMath.FlipVal(System.Int32@,System.Int32@)
  commentId: M:Vintagestory.API.MathTools.GameMath.FlipVal(System.Int32@,System.Int32@)
  id: FlipVal(System.Int32@,System.Int32@)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: FlipVal(ref int, ref int)
  nameWithType: GameMath.FlipVal(ref int, ref int)
  fullName: Vintagestory.API.MathTools.GameMath.FlipVal(ref int, ref int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Assigns the value of x1 to x2 and vice versa
  example: []
  syntax:
    content: public static void FlipVal(ref int x1, ref int x2)
    parameters:
    - id: x1
      type: System.Int32
      description: ''
    - id: x2
      type: System.Int32
      description: ''
    content.vb: Public Shared Sub FlipVal(x1 As Integer, x2 As Integer)
  overload: Vintagestory.API.MathTools.GameMath.FlipVal*
  nameWithType.vb: GameMath.FlipVal(Integer, Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.FlipVal(Integer, Integer)
  name.vb: FlipVal(Integer, Integer)
- uid: Vintagestory.API.MathTools.GameMath.FlipVal(System.Double@,System.Double@)
  commentId: M:Vintagestory.API.MathTools.GameMath.FlipVal(System.Double@,System.Double@)
  id: FlipVal(System.Double@,System.Double@)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: FlipVal(ref double, ref double)
  nameWithType: GameMath.FlipVal(ref double, ref double)
  fullName: Vintagestory.API.MathTools.GameMath.FlipVal(ref double, ref double)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Assigns the value of x1 to x2 and vice versa
  example: []
  syntax:
    content: public static void FlipVal(ref double x1, ref double x2)
    parameters:
    - id: x1
      type: System.Double
      description: ''
    - id: x2
      type: System.Double
      description: ''
    content.vb: Public Shared Sub FlipVal(x1 As Double, x2 As Double)
  overload: Vintagestory.API.MathTools.GameMath.FlipVal*
  nameWithType.vb: GameMath.FlipVal(Double, Double)
  fullName.vb: Vintagestory.API.MathTools.GameMath.FlipVal(Double, Double)
  name.vb: FlipVal(Double, Double)
- uid: Vintagestory.API.MathTools.GameMath.Shuffle``1(System.Random,``0[])
  commentId: M:Vintagestory.API.MathTools.GameMath.Shuffle``1(System.Random,``0[])
  id: Shuffle``1(System.Random,``0[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Shuffle<T>(Random, T[])
  nameWithType: GameMath.Shuffle<T>(Random, T[])
  fullName: Vintagestory.API.MathTools.GameMath.Shuffle<T>(System.Random, T[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Performs a Fisher-Yates shuffle in linear time or O(n)
  example: []
  syntax:
    content: public static void Shuffle<T>(Random rand, T[] array)
    parameters:
    - id: rand
      type: System.Random
      description: ''
    - id: array
      type: '{T}[]'
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub Shuffle(Of T)(rand As Random, array As T())
  overload: Vintagestory.API.MathTools.GameMath.Shuffle*
  nameWithType.vb: GameMath.Shuffle(Of T)(Random, T())
  fullName.vb: Vintagestory.API.MathTools.GameMath.Shuffle(Of T)(System.Random, T())
  name.vb: Shuffle(Of T)(Random, T())
- uid: Vintagestory.API.MathTools.GameMath.Shuffle``1(System.Random,System.Collections.Generic.List{``0})
  commentId: M:Vintagestory.API.MathTools.GameMath.Shuffle``1(System.Random,System.Collections.Generic.List{``0})
  id: Shuffle``1(System.Random,System.Collections.Generic.List{``0})
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Shuffle<T>(Random, List<T>)
  nameWithType: GameMath.Shuffle<T>(Random, List<T>)
  fullName: Vintagestory.API.MathTools.GameMath.Shuffle<T>(System.Random, System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Performs a Fisher-Yates shuffle in linear time or O(n)
  example: []
  syntax:
    content: public static void Shuffle<T>(Random rand, List<T> array)
    parameters:
    - id: rand
      type: System.Random
      description: ''
    - id: array
      type: System.Collections.Generic.List{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub Shuffle(Of T)(rand As Random, array As List(Of T))
  overload: Vintagestory.API.MathTools.GameMath.Shuffle*
  nameWithType.vb: GameMath.Shuffle(Of T)(Random, List(Of T))
  fullName.vb: Vintagestory.API.MathTools.GameMath.Shuffle(Of T)(System.Random, System.Collections.Generic.List(Of T))
  name.vb: Shuffle(Of T)(Random, List(Of T))
- uid: Vintagestory.API.MathTools.GameMath.Shuffle``1(Vintagestory.API.MathTools.LCGRandom,System.Collections.Generic.List{``0})
  commentId: M:Vintagestory.API.MathTools.GameMath.Shuffle``1(Vintagestory.API.MathTools.LCGRandom,System.Collections.Generic.List{``0})
  id: Shuffle``1(Vintagestory.API.MathTools.LCGRandom,System.Collections.Generic.List{``0})
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Shuffle<T>(LCGRandom, List<T>)
  nameWithType: GameMath.Shuffle<T>(LCGRandom, List<T>)
  fullName: Vintagestory.API.MathTools.GameMath.Shuffle<T>(Vintagestory.API.MathTools.LCGRandom, System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Performs a Fisher-Yates shuffle in linear time or O(n)
  example: []
  syntax:
    content: public static void Shuffle<T>(LCGRandom rand, List<T> array)
    parameters:
    - id: rand
      type: Vintagestory.API.MathTools.LCGRandom
      description: ''
    - id: array
      type: System.Collections.Generic.List{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub Shuffle(Of T)(rand As LCGRandom, array As List(Of T))
  overload: Vintagestory.API.MathTools.GameMath.Shuffle*
  nameWithType.vb: GameMath.Shuffle(Of T)(LCGRandom, List(Of T))
  fullName.vb: Vintagestory.API.MathTools.GameMath.Shuffle(Of T)(Vintagestory.API.MathTools.LCGRandom, System.Collections.Generic.List(Of T))
  name.vb: Shuffle(Of T)(LCGRandom, List(Of T))
- uid: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3D)
  commentId: M:Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3D)
  id: BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3D)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BresenHamPlotLine3d(int, int, int, int, int, int, PlotDelegate3D)
  nameWithType: GameMath.BresenHamPlotLine3d(int, int, int, int, int, int, PlotDelegate3D)
  fullName: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(int, int, int, int, int, int, Vintagestory.API.MathTools.PlotDelegate3D)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Plot a 3d line, see also http://members.chello.at/~easyfilter/bresenham.html
  example: []
  syntax:
    content: public static void BresenHamPlotLine3d(int x0, int y0, int z0, int x1, int y1, int z1, PlotDelegate3D onPlot)
    parameters:
    - id: x0
      type: System.Int32
      description: ''
    - id: y0
      type: System.Int32
      description: ''
    - id: z0
      type: System.Int32
      description: ''
    - id: x1
      type: System.Int32
      description: ''
    - id: y1
      type: System.Int32
      description: ''
    - id: z1
      type: System.Int32
      description: ''
    - id: onPlot
      type: Vintagestory.API.MathTools.PlotDelegate3D
      description: ''
    content.vb: Public Shared Sub BresenHamPlotLine3d(x0 As Integer, y0 As Integer, z0 As Integer, x1 As Integer, y1 As Integer, z1 As Integer, onPlot As PlotDelegate3D)
  overload: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d*
  nameWithType.vb: GameMath.BresenHamPlotLine3d(Integer, Integer, Integer, Integer, Integer, Integer, PlotDelegate3D)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(Integer, Integer, Integer, Integer, Integer, Integer, Vintagestory.API.MathTools.PlotDelegate3D)
  name.vb: BresenHamPlotLine3d(Integer, Integer, Integer, Integer, Integer, Integer, PlotDelegate3D)
- uid: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3DBlockPos)
  commentId: M:Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3DBlockPos)
  id: BresenHamPlotLine3d(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate3DBlockPos)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BresenHamPlotLine3d(int, int, int, int, int, int, PlotDelegate3DBlockPos)
  nameWithType: GameMath.BresenHamPlotLine3d(int, int, int, int, int, int, PlotDelegate3DBlockPos)
  fullName: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(int, int, int, int, int, int, Vintagestory.API.MathTools.PlotDelegate3DBlockPos)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Plot a 3d line, see also http://members.chello.at/~easyfilter/bresenham.html
  example: []
  syntax:
    content: public static void BresenHamPlotLine3d(int x0, int y0, int z0, int x1, int y1, int z1, PlotDelegate3DBlockPos onPlot)
    parameters:
    - id: x0
      type: System.Int32
      description: ''
    - id: y0
      type: System.Int32
      description: ''
    - id: z0
      type: System.Int32
      description: ''
    - id: x1
      type: System.Int32
      description: ''
    - id: y1
      type: System.Int32
      description: ''
    - id: z1
      type: System.Int32
      description: ''
    - id: onPlot
      type: Vintagestory.API.MathTools.PlotDelegate3DBlockPos
      description: ''
    content.vb: Public Shared Sub BresenHamPlotLine3d(x0 As Integer, y0 As Integer, z0 As Integer, x1 As Integer, y1 As Integer, z1 As Integer, onPlot As PlotDelegate3DBlockPos)
  overload: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d*
  nameWithType.vb: GameMath.BresenHamPlotLine3d(Integer, Integer, Integer, Integer, Integer, Integer, PlotDelegate3DBlockPos)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d(Integer, Integer, Integer, Integer, Integer, Integer, Vintagestory.API.MathTools.PlotDelegate3DBlockPos)
  name.vb: BresenHamPlotLine3d(Integer, Integer, Integer, Integer, Integer, Integer, PlotDelegate3DBlockPos)
- uid: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate2D)
  commentId: M:Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate2D)
  id: BresenHamPlotLine2d(System.Int32,System.Int32,System.Int32,System.Int32,Vintagestory.API.MathTools.PlotDelegate2D)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BresenHamPlotLine2d(int, int, int, int, PlotDelegate2D)
  nameWithType: GameMath.BresenHamPlotLine2d(int, int, int, int, PlotDelegate2D)
  fullName: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d(int, int, int, int, Vintagestory.API.MathTools.PlotDelegate2D)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Plot a 2d line, see also http://members.chello.at/~easyfilter/bresenham.html
  example: []
  syntax:
    content: public static void BresenHamPlotLine2d(int x0, int y0, int x1, int y1, PlotDelegate2D onPlot)
    parameters:
    - id: x0
      type: System.Int32
      description: ''
    - id: y0
      type: System.Int32
      description: ''
    - id: x1
      type: System.Int32
      description: ''
    - id: y1
      type: System.Int32
      description: ''
    - id: onPlot
      type: Vintagestory.API.MathTools.PlotDelegate2D
      description: ''
    content.vb: Public Shared Sub BresenHamPlotLine2d(x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer, onPlot As PlotDelegate2D)
  overload: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d*
  nameWithType.vb: GameMath.BresenHamPlotLine2d(Integer, Integer, Integer, Integer, PlotDelegate2D)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d(Integer, Integer, Integer, Integer, Vintagestory.API.MathTools.PlotDelegate2D)
  name.vb: BresenHamPlotLine2d(Integer, Integer, Integer, Integer, PlotDelegate2D)
- uid: Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4f)
  commentId: M:Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4f)
  id: ToEulerAngles(Vintagestory.API.MathTools.Vec4f)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: ToEulerAngles(Vec4f)
  nameWithType: GameMath.ToEulerAngles(Vec4f)
  fullName: Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4f)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static Vec3f ToEulerAngles(Vec4f q)
    parameters:
    - id: q
      type: Vintagestory.API.MathTools.Vec4f
    return:
      type: Vintagestory.API.MathTools.Vec3f
    content.vb: Public Shared Function ToEulerAngles(q As Vec4f) As Vec3f
  overload: Vintagestory.API.MathTools.GameMath.ToEulerAngles*
- uid: Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4d)
  commentId: M:Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4d)
  id: ToEulerAngles(Vintagestory.API.MathTools.Vec4d)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: ToEulerAngles(Vec4d)
  nameWithType: GameMath.ToEulerAngles(Vec4d)
  fullName: Vintagestory.API.MathTools.GameMath.ToEulerAngles(Vintagestory.API.MathTools.Vec4d)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static Vec3d ToEulerAngles(Vec4d q)
    parameters:
    - id: q
      type: Vintagestory.API.MathTools.Vec4d
    return:
      type: Vintagestory.API.MathTools.Vec3d
    content.vb: Public Shared Function ToEulerAngles(q As Vec4d) As Vec3d
  overload: Vintagestory.API.MathTools.GameMath.ToEulerAngles*
- uid: Vintagestory.API.MathTools.GameMath.IntFromBools(System.Int32[])
  commentId: M:Vintagestory.API.MathTools.GameMath.IntFromBools(System.Int32[])
  id: IntFromBools(System.Int32[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: IntFromBools(int[])
  nameWithType: GameMath.IntFromBools(int[])
  fullName: Vintagestory.API.MathTools.GameMath.IntFromBools(int[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static int IntFromBools(int[] intBools)
    parameters:
    - id: intBools
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function IntFromBools(intBools As Integer()) As Integer
  overload: Vintagestory.API.MathTools.GameMath.IntFromBools*
  nameWithType.vb: GameMath.IntFromBools(Integer())
  fullName.vb: Vintagestory.API.MathTools.GameMath.IntFromBools(Integer())
  name.vb: IntFromBools(Integer())
- uid: Vintagestory.API.MathTools.GameMath.IntFromBools(System.Boolean[])
  commentId: M:Vintagestory.API.MathTools.GameMath.IntFromBools(System.Boolean[])
  id: IntFromBools(System.Boolean[])
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: IntFromBools(bool[])
  nameWithType: GameMath.IntFromBools(bool[])
  fullName: Vintagestory.API.MathTools.GameMath.IntFromBools(bool[])
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static int IntFromBools(bool[] bools)
    parameters:
    - id: bools
      type: System.Boolean[]
    return:
      type: System.Int32
    content.vb: Public Shared Function IntFromBools(bools As Boolean()) As Integer
  overload: Vintagestory.API.MathTools.GameMath.IntFromBools*
  nameWithType.vb: GameMath.IntFromBools(Boolean())
  fullName.vb: Vintagestory.API.MathTools.GameMath.IntFromBools(Boolean())
  name.vb: IntFromBools(Boolean())
- uid: Vintagestory.API.MathTools.GameMath.BoolsFromInt(System.Boolean[],System.Int32)
  commentId: M:Vintagestory.API.MathTools.GameMath.BoolsFromInt(System.Boolean[],System.Int32)
  id: BoolsFromInt(System.Boolean[],System.Int32)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: BoolsFromInt(bool[], int)
  nameWithType: GameMath.BoolsFromInt(bool[], int)
  fullName: Vintagestory.API.MathTools.GameMath.BoolsFromInt(bool[], int)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  syntax:
    content: public static void BoolsFromInt(bool[] bools, int v)
    parameters:
    - id: bools
      type: System.Boolean[]
    - id: v
      type: System.Int32
    content.vb: Public Shared Sub BoolsFromInt(bools As Boolean(), v As Integer)
  overload: Vintagestory.API.MathTools.GameMath.BoolsFromInt*
  nameWithType.vb: GameMath.BoolsFromInt(Boolean(), Integer)
  fullName.vb: Vintagestory.API.MathTools.GameMath.BoolsFromInt(Boolean(), Integer)
  name.vb: BoolsFromInt(Boolean(), Integer)
- uid: Vintagestory.API.MathTools.GameMath.Map``1(``0,``0,``0,``0,``0)
  commentId: M:Vintagestory.API.MathTools.GameMath.Map``1(``0,``0,``0,``0,``0)
  id: Map``1(``0,``0,``0,``0,``0)
  parent: Vintagestory.API.MathTools.GameMath
  langs:
  - csharp
  - vb
  name: Map<T>(T, T, T, T, T)
  nameWithType: GameMath.Map<T>(T, T, T, T, T)
  fullName: Vintagestory.API.MathTools.GameMath.Map<T>(T, T, T, T, T)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.MathTools
  summary: Map a value from one range to another
  example: []
  syntax:
    content: 'public static T Map<T>(T value, T fromMin, T fromMax, T toMin, T toMax) where T : INumber<T>'
    parameters:
    - id: value
      type: '{T}'
      description: ''
    - id: fromMin
      type: '{T}'
      description: ''
    - id: fromMax
      type: '{T}'
      description: ''
    - id: toMin
      type: '{T}'
      description: ''
    - id: toMax
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function Map(Of T As INumber(Of T))(value As T, fromMin As T, fromMax As T, toMin As T, toMax As T) As T
  overload: Vintagestory.API.MathTools.GameMath.Map*
  nameWithType.vb: GameMath.Map(Of T)(T, T, T, T, T)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Map(Of T)(T, T, T, T, T)
  name.vb: Map(Of T)(T, T, T, T, T)
references:
- uid: Vintagestory.API.MathTools
  commentId: N:Vintagestory.API.MathTools
  href: Vintagestory.html
  name: Vintagestory.API.MathTools
  nameWithType: Vintagestory.API.MathTools
  fullName: Vintagestory.API.MathTools
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.MathTools
    name: MathTools
    href: Vintagestory.API.MathTools.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Vintagestory.API.MathTools.GameMath.Sin*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Sin
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Sin_System_Single_
  name: Sin
  nameWithType: GameMath.Sin
  fullName: Vintagestory.API.MathTools.GameMath.Sin
- uid: Vintagestory.API.MathTools.GameMath.Cos*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Cos
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Cos_System_Single_
  name: Cos
  nameWithType: GameMath.Cos
  fullName: Vintagestory.API.MathTools.GameMath.Cos
- uid: Vintagestory.API.MathTools.GameMath.Acos*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Acos
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Acos_System_Single_
  name: Acos
  nameWithType: GameMath.Acos
  fullName: Vintagestory.API.MathTools.GameMath.Acos
- uid: Vintagestory.API.MathTools.GameMath.Asin*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Asin
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Asin_System_Single_
  name: Asin
  nameWithType: GameMath.Asin
  fullName: Vintagestory.API.MathTools.GameMath.Asin
- uid: Vintagestory.API.MathTools.GameMath.Tan*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Tan
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Tan_System_Single_
  name: Tan
  nameWithType: GameMath.Tan
  fullName: Vintagestory.API.MathTools.GameMath.Tan
- uid: Vintagestory.API.MathTools.GameMath.FastSin*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.FastSin
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_FastSin_System_Single_
  name: FastSin
  nameWithType: GameMath.FastSin
  fullName: Vintagestory.API.MathTools.GameMath.FastSin
- uid: Vintagestory.API.MathTools.GameMath.FastCos*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.FastCos
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_FastCos_System_Single_
  name: FastCos
  nameWithType: GameMath.FastCos
  fullName: Vintagestory.API.MathTools.GameMath.FastCos
- uid: Vintagestory.API.MathTools.GameMath.FastSinDeg*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.FastSinDeg
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_FastSinDeg_System_Single_
  name: FastSinDeg
  nameWithType: GameMath.FastSinDeg
  fullName: Vintagestory.API.MathTools.GameMath.FastSinDeg
- uid: Vintagestory.API.MathTools.GameMath.FastCosDeg*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.FastCosDeg
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_FastCosDeg_System_Single_
  name: FastCosDeg
  nameWithType: GameMath.FastCosDeg
  fullName: Vintagestory.API.MathTools.GameMath.FastCosDeg
- uid: Vintagestory.API.MathTools.GameMath.Sqrt*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Sqrt
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Sqrt_System_Single_
  name: Sqrt
  nameWithType: GameMath.Sqrt
  fullName: Vintagestory.API.MathTools.GameMath.Sqrt
- uid: Vintagestory.API.MathTools.GameMath.RootSumOfSquares*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.RootSumOfSquares
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_RootSumOfSquares_System_Single_System_Single_System_Single_
  name: RootSumOfSquares
  nameWithType: GameMath.RootSumOfSquares
  fullName: Vintagestory.API.MathTools.GameMath.RootSumOfSquares
- uid: Vintagestory.API.MathTools.GameMath.SumOfSquares*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.SumOfSquares
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_SumOfSquares_System_Double_System_Double_System_Double_
  name: SumOfSquares
  nameWithType: GameMath.SumOfSquares
  fullName: Vintagestory.API.MathTools.GameMath.SumOfSquares
- uid: Vintagestory.API.MathTools.GameMath.Square*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Square
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Square_System_Double_
  name: Square
  nameWithType: GameMath.Square
  fullName: Vintagestory.API.MathTools.GameMath.Square
- uid: Vintagestory.API.MathTools.GameMath.Clamp*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Clamp
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Clamp_System_Single_System_Single_System_Single_
  name: Clamp
  nameWithType: GameMath.Clamp
  fullName: Vintagestory.API.MathTools.GameMath.Clamp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Vintagestory.API.MathTools.GameMath.InverseClamp*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.InverseClamp
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_InverseClamp_System_Int32_System_Int32_System_Int32_
  name: InverseClamp
  nameWithType: GameMath.InverseClamp
  fullName: Vintagestory.API.MathTools.GameMath.InverseClamp
- uid: Vintagestory.API.MathTools.GameMath.Mod*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Mod
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Mod_System_Int32_System_Int32_
  name: Mod
  nameWithType: GameMath.Mod
  fullName: Vintagestory.API.MathTools.GameMath.Mod
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Vintagestory.API.MathTools.GameMath.RoundRandom*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.RoundRandom
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_RoundRandom_System_Random_System_Single_
  name: RoundRandom
  nameWithType: GameMath.RoundRandom
  fullName: Vintagestory.API.MathTools.GameMath.RoundRandom
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: Vintagestory.API.MathTools.IRandom
  commentId: T:Vintagestory.API.MathTools.IRandom
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.IRandom.html
  name: IRandom
  nameWithType: IRandom
  fullName: Vintagestory.API.MathTools.IRandom
- uid: Vintagestory.API.MathTools.GameMath.AngleDegDistance*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.AngleDegDistance
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_AngleDegDistance_System_Single_System_Single_
  name: AngleDegDistance
  nameWithType: GameMath.AngleDegDistance
  fullName: Vintagestory.API.MathTools.GameMath.AngleDegDistance
- uid: Vintagestory.API.MathTools.GameMath.AngleRadDistance*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.AngleRadDistance
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_AngleRadDistance_System_Single_System_Single_
  name: AngleRadDistance
  nameWithType: GameMath.AngleRadDistance
  fullName: Vintagestory.API.MathTools.GameMath.AngleRadDistance
- uid: Vintagestory.API.MathTools.GameMath.NormaliseAngleRad*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.NormaliseAngleRad
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_NormaliseAngleRad_System_Single_
  name: NormaliseAngleRad
  nameWithType: GameMath.NormaliseAngleRad
  fullName: Vintagestory.API.MathTools.GameMath.NormaliseAngleRad
- uid: Vintagestory.API.MathTools.GameMath.Smallest*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Smallest
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Smallest_System_Double_System_Double_
  name: Smallest
  nameWithType: GameMath.Smallest
  fullName: Vintagestory.API.MathTools.GameMath.Smallest
- uid: Vintagestory.API.MathTools.GameMath.Largest*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Largest
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Largest_System_Double_System_Double_
  name: Largest
  nameWithType: GameMath.Largest
  fullName: Vintagestory.API.MathTools.GameMath.Largest
- uid: Vintagestory.API.MathTools.GameMath.CyclicValueDistance*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.CyclicValueDistance
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_CyclicValueDistance_System_Single_System_Single_System_Single_
  name: CyclicValueDistance
  nameWithType: GameMath.CyclicValueDistance
  fullName: Vintagestory.API.MathTools.GameMath.CyclicValueDistance
- uid: Vintagestory.API.MathTools.GameMath.GenGaussKernel*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.GenGaussKernel
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_GenGaussKernel_System_Double_System_Int32_
  name: GenGaussKernel
  nameWithType: GameMath.GenGaussKernel
  fullName: Vintagestory.API.MathTools.GameMath.GenGaussKernel
- uid: System.Double[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[,]
  nameWithType: double[,]
  fullName: double[,]
  nameWithType.vb: Double(,)
  fullName.vb: Double(,)
  name.vb: Double(,)
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: ','
  - name: )
- uid: Vintagestory.API.MathTools.GameMath.BiLerpColorMap*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BiLerpColorMap
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BiLerpColorMap_Vintagestory_API_Datastructures_IntDataMap2D_System_Int32_
  name: BiLerpColorMap
  nameWithType: GameMath.BiLerpColorMap
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpColorMap
- uid: Vintagestory.API.Datastructures.IntDataMap2D
  commentId: T:Vintagestory.API.Datastructures.IntDataMap2D
  parent: Vintagestory.API.Datastructures
  href: Vintagestory.API.Datastructures.IntDataMap2D.html
  name: IntDataMap2D
  nameWithType: IntDataMap2D
  fullName: Vintagestory.API.Datastructures.IntDataMap2D
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Vintagestory.API.Datastructures
  commentId: N:Vintagestory.API.Datastructures
  href: Vintagestory.html
  name: Vintagestory.API.Datastructures
  nameWithType: Vintagestory.API.Datastructures
  fullName: Vintagestory.API.Datastructures
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Datastructures
    name: Datastructures
    href: Vintagestory.API.Datastructures.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Datastructures
    name: Datastructures
    href: Vintagestory.API.Datastructures.html
- uid: Vintagestory.API.MathTools.GameMath.BiLerpByte*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BiLerpByte
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BiLerpByte_System_Single_System_Single_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: BiLerpByte
  nameWithType: GameMath.BiLerpByte
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpByte
- uid: Vintagestory.API.MathTools.GameMath.BiSerpByte*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BiSerpByte
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BiSerpByte_System_Single_System_Single_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: BiSerpByte
  nameWithType: GameMath.BiSerpByte
  fullName: Vintagestory.API.MathTools.GameMath.BiSerpByte
- uid: Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BiLerpRgbaColor_System_Single_System_Single_System_Int32_System_Int32_System_Int32_System_Int32_
  name: BiLerpRgbaColor
  nameWithType: GameMath.BiLerpRgbaColor
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpRgbaColor
- uid: Vintagestory.API.MathTools.GameMath.BiLerpRgbColor*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BiLerpRgbColor
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BiLerpRgbColor_System_Single_System_Single_System_Int32_System_Int32_System_Int32_System_Int32_
  name: BiLerpRgbColor
  nameWithType: GameMath.BiLerpRgbColor
  fullName: Vintagestory.API.MathTools.GameMath.BiLerpRgbColor
- uid: Vintagestory.API.MathTools.GameMath.BiSerpRgbColor*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BiSerpRgbColor
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BiSerpRgbColor_System_Single_System_Single_System_Int32_System_Int32_System_Int32_System_Int32_
  name: BiSerpRgbColor
  nameWithType: GameMath.BiSerpRgbColor
  fullName: Vintagestory.API.MathTools.GameMath.BiSerpRgbColor
- uid: Vintagestory.API.MathTools.GameMath.LerpRgbColor*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.LerpRgbColor
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_LerpRgbColor_System_Single_System_Int32_System_Int32_
  name: LerpRgbColor
  nameWithType: GameMath.LerpRgbColor
  fullName: Vintagestory.API.MathTools.GameMath.LerpRgbColor
- uid: Vintagestory.API.MathTools.GameMath.LerpRgbaColor*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.LerpRgbaColor
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_LerpRgbaColor_System_Single_System_Int32_System_Int32_
  name: LerpRgbaColor
  nameWithType: GameMath.LerpRgbaColor
  fullName: Vintagestory.API.MathTools.GameMath.LerpRgbaColor
- uid: Vintagestory.API.MathTools.GameMath.LerpByte*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.LerpByte
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_LerpByte_System_Single_System_Byte_System_Byte_
  name: LerpByte
  nameWithType: GameMath.LerpByte
  fullName: Vintagestory.API.MathTools.GameMath.LerpByte
- uid: Vintagestory.API.MathTools.GameMath.BiLerp*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BiLerp
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BiLerp_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: BiLerp
  nameWithType: GameMath.BiLerp
  fullName: Vintagestory.API.MathTools.GameMath.BiLerp
- uid: Vintagestory.API.MathTools.GameMath.Lerp(System.Single,System.Single,System.Single)
  commentId: M:Vintagestory.API.MathTools.GameMath.Lerp(System.Single,System.Single,System.Single)
  isExternal: true
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Lerp_System_Single_System_Single_System_Single_
  name: Lerp(float, float, float)
  nameWithType: GameMath.Lerp(float, float, float)
  fullName: Vintagestory.API.MathTools.GameMath.Lerp(float, float, float)
  nameWithType.vb: GameMath.Lerp(Single, Single, Single)
  fullName.vb: Vintagestory.API.MathTools.GameMath.Lerp(Single, Single, Single)
  name.vb: Lerp(Single, Single, Single)
  spec.csharp:
  - uid: Vintagestory.API.MathTools.GameMath.Lerp(System.Single,System.Single,System.Single)
    name: Lerp
    href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Lerp_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Vintagestory.API.MathTools.GameMath.Lerp(System.Single,System.Single,System.Single)
    name: Lerp
    href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Lerp_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Vintagestory.API.MathTools.GameMath.Mix*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Mix
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Mix_System_Single_System_Single_System_Single_
  name: Mix
  nameWithType: GameMath.Mix
  fullName: Vintagestory.API.MathTools.GameMath.Mix
- uid: Vintagestory.API.MathTools.GameMath.Lerp*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Lerp
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Lerp_System_Single_System_Single_System_Single_
  name: Lerp
  nameWithType: GameMath.Lerp
  fullName: Vintagestory.API.MathTools.GameMath.Lerp
- uid: Vintagestory.API.MathTools.GameMath.Serp*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Serp
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Serp_System_Single_System_Single_System_Single_
  name: Serp
  nameWithType: GameMath.Serp
  fullName: Vintagestory.API.MathTools.GameMath.Serp
- uid: Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_CPCatmullRomSplineLerp_System_Double_System_Double___System_Double___
  name: CPCatmullRomSplineLerp
  nameWithType: GameMath.CPCatmullRomSplineLerp
  fullName: Vintagestory.API.MathTools.GameMath.CPCatmullRomSplineLerp
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.GameMath.SmoothStep*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.SmoothStep
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_SmoothStep_System_Single_
  name: SmoothStep
  nameWithType: GameMath.SmoothStep
  fullName: Vintagestory.API.MathTools.GameMath.SmoothStep
- uid: Vintagestory.API.MathTools.GameMath.Smootherstep*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Smootherstep
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Smootherstep_System_Single_System_Single_System_Single_
  name: Smootherstep
  nameWithType: GameMath.Smootherstep
  fullName: Vintagestory.API.MathTools.GameMath.Smootherstep
- uid: Vintagestory.API.MathTools.GameMath.TriangleStep*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.TriangleStep
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_TriangleStep_System_Int32_System_Int32_System_Int32_
  name: TriangleStep
  nameWithType: GameMath.TriangleStep
  fullName: Vintagestory.API.MathTools.GameMath.TriangleStep
- uid: Vintagestory.API.MathTools.GameMath.TriangleStepFast*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.TriangleStepFast
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_TriangleStepFast_System_Int32_System_Int32_System_Int32_
  name: TriangleStepFast
  nameWithType: GameMath.TriangleStepFast
  fullName: Vintagestory.API.MathTools.GameMath.TriangleStepFast
- uid: Vintagestory.API.MathTools.GameMath.Max*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Max
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Max_System_Double___
  name: Max
  nameWithType: GameMath.Max
  fullName: Vintagestory.API.MathTools.GameMath.Max
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.GameMath.Min*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Min
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Min_System_Int32___
  name: Min
  nameWithType: GameMath.Min
  fullName: Vintagestory.API.MathTools.GameMath.Min
- uid: Vintagestory.API.MathTools.GameMath.SmoothMin*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.SmoothMin
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_SmoothMin_System_Single_System_Single_System_Single_
  name: SmoothMin
  nameWithType: GameMath.SmoothMin
  fullName: Vintagestory.API.MathTools.GameMath.SmoothMin
- uid: Vintagestory.API.MathTools.GameMath.SmoothMax*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.SmoothMax
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_SmoothMax_System_Single_System_Single_System_Single_
  name: SmoothMax
  nameWithType: GameMath.SmoothMax
  fullName: Vintagestory.API.MathTools.GameMath.SmoothMax
- uid: Vintagestory.API.MathTools.GameMath.Crc32*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Crc32
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Crc32_System_String_
  name: Crc32
  nameWithType: GameMath.Crc32
  fullName: Vintagestory.API.MathTools.GameMath.Crc32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.GameMath.DotNetStringHash*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.DotNetStringHash
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_DotNetStringHash_System_String_
  name: DotNetStringHash
  nameWithType: GameMath.DotNetStringHash
  fullName: Vintagestory.API.MathTools.GameMath.DotNetStringHash
- uid: Vintagestory.API.MathTools.GameMath.Md5Hash*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Md5Hash
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Md5Hash_System_String_
  name: Md5Hash
  nameWithType: GameMath.Md5Hash
  fullName: Vintagestory.API.MathTools.GameMath.Md5Hash
- uid: Vintagestory.API.MathTools.GameMath.oaatHashMany*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.oaatHashMany
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_oaatHashMany_System_Int32_System_Int32_
  name: oaatHashMany
  nameWithType: GameMath.oaatHashMany
  fullName: Vintagestory.API.MathTools.GameMath.oaatHashMany
- uid: Vintagestory.API.MathTools.GameMath.oaatHashUMany*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.oaatHashUMany
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_oaatHashUMany_System_UInt32_
  name: oaatHashUMany
  nameWithType: GameMath.oaatHashUMany
  fullName: Vintagestory.API.MathTools.GameMath.oaatHashUMany
- uid: Vintagestory.API.MathTools.GameMath.oaatHash*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.oaatHash
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_oaatHash_Vintagestory_API_MathTools_Vec2i_
  name: oaatHash
  nameWithType: GameMath.oaatHash
  fullName: Vintagestory.API.MathTools.GameMath.oaatHash
- uid: Vintagestory.API.MathTools.Vec2i
  commentId: T:Vintagestory.API.MathTools.Vec2i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec2i.html
  name: Vec2i
  nameWithType: Vec2i
  fullName: Vintagestory.API.MathTools.Vec2i
- uid: Vintagestory.API.MathTools.Vec3i
  commentId: T:Vintagestory.API.MathTools.Vec3i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3i.html
  name: Vec3i
  nameWithType: Vec3i
  fullName: Vintagestory.API.MathTools.Vec3i
- uid: Vintagestory.API.MathTools.GameMath.oaatHashU*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.oaatHashU
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_oaatHashU_System_Int32_System_Int32_System_Int32_
  name: oaatHashU
  nameWithType: GameMath.oaatHashU
  fullName: Vintagestory.API.MathTools.GameMath.oaatHashU
- uid: Vintagestory.API.MathTools.Vec4i
  commentId: T:Vintagestory.API.MathTools.Vec4i
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec4i.html
  name: Vec4i
  nameWithType: Vec4i
  fullName: Vintagestory.API.MathTools.Vec4i
- uid: Vintagestory.API.MathTools.GameMath.PrettyBadHash*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.PrettyBadHash
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_PrettyBadHash_System_Int32_System_Int32_
  name: PrettyBadHash
  nameWithType: GameMath.PrettyBadHash
  fullName: Vintagestory.API.MathTools.GameMath.PrettyBadHash
- uid: Vintagestory.API.MathTools.GameMath.MurmurHash3Mod*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.MurmurHash3Mod
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_MurmurHash3Mod_System_Int32_System_Int32_System_Int32_System_Int32_
  name: MurmurHash3Mod
  nameWithType: GameMath.MurmurHash3Mod
  fullName: Vintagestory.API.MathTools.GameMath.MurmurHash3Mod
- uid: Vintagestory.API.MathTools.GameMath.MurmurHash3*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.MurmurHash3
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_MurmurHash3_System_Int32_System_Int32_System_Int32_
  name: MurmurHash3
  nameWithType: GameMath.MurmurHash3
  fullName: Vintagestory.API.MathTools.GameMath.MurmurHash3
- uid: Vintagestory.API.MathTools.GameMath.R2Sequence1D*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.R2Sequence1D
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_R2Sequence1D_System_Int32_
  name: R2Sequence1D
  nameWithType: GameMath.R2Sequence1D
  fullName: Vintagestory.API.MathTools.GameMath.R2Sequence1D
- uid: Vintagestory.API.MathTools.GameMath.R2Sequence2D*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.R2Sequence2D
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_R2Sequence2D_System_Int32_
  name: R2Sequence2D
  nameWithType: GameMath.R2Sequence2D
  fullName: Vintagestory.API.MathTools.GameMath.R2Sequence2D
- uid: Vintagestory.API.MathTools.Vec2d
  commentId: T:Vintagestory.API.MathTools.Vec2d
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec2d.html
  name: Vec2d
  nameWithType: Vec2d
  fullName: Vintagestory.API.MathTools.Vec2d
- uid: Vintagestory.API.MathTools.GameMath.R2Sequence3D*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.R2Sequence3D
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_R2Sequence3D_System_Int32_
  name: R2Sequence3D
  nameWithType: GameMath.R2Sequence3D
  fullName: Vintagestory.API.MathTools.GameMath.R2Sequence3D
- uid: Vintagestory.API.MathTools.Vec3d
  commentId: T:Vintagestory.API.MathTools.Vec3d
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3d.html
  name: Vec3d
  nameWithType: Vec3d
  fullName: Vintagestory.API.MathTools.Vec3d
- uid: Vintagestory.API.MathTools.GameMath.FlipVal*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.FlipVal
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_FlipVal_System_Int32__System_Int32__
  name: FlipVal
  nameWithType: GameMath.FlipVal
  fullName: Vintagestory.API.MathTools.GameMath.FlipVal
- uid: Vintagestory.API.MathTools.GameMath.Shuffle*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Shuffle
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Shuffle__1_System_Random___0___
  name: Shuffle
  nameWithType: GameMath.Shuffle
  fullName: Vintagestory.API.MathTools.GameMath.Shuffle
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.MathTools.LCGRandom
  commentId: T:Vintagestory.API.MathTools.LCGRandom
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.LCGRandom.html
  name: LCGRandom
  nameWithType: LCGRandom
  fullName: Vintagestory.API.MathTools.LCGRandom
- uid: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BresenHamPlotLine3d_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_Vintagestory_API_MathTools_PlotDelegate3D_
  name: BresenHamPlotLine3d
  nameWithType: GameMath.BresenHamPlotLine3d
  fullName: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine3d
- uid: Vintagestory.API.MathTools.PlotDelegate3D
  commentId: T:Vintagestory.API.MathTools.PlotDelegate3D
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.PlotDelegate3D.html
  name: PlotDelegate3D
  nameWithType: PlotDelegate3D
  fullName: Vintagestory.API.MathTools.PlotDelegate3D
- uid: Vintagestory.API.MathTools.PlotDelegate3DBlockPos
  commentId: T:Vintagestory.API.MathTools.PlotDelegate3DBlockPos
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.PlotDelegate3DBlockPos.html
  name: PlotDelegate3DBlockPos
  nameWithType: PlotDelegate3DBlockPos
  fullName: Vintagestory.API.MathTools.PlotDelegate3DBlockPos
- uid: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BresenHamPlotLine2d_System_Int32_System_Int32_System_Int32_System_Int32_Vintagestory_API_MathTools_PlotDelegate2D_
  name: BresenHamPlotLine2d
  nameWithType: GameMath.BresenHamPlotLine2d
  fullName: Vintagestory.API.MathTools.GameMath.BresenHamPlotLine2d
- uid: Vintagestory.API.MathTools.PlotDelegate2D
  commentId: T:Vintagestory.API.MathTools.PlotDelegate2D
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.PlotDelegate2D.html
  name: PlotDelegate2D
  nameWithType: PlotDelegate2D
  fullName: Vintagestory.API.MathTools.PlotDelegate2D
- uid: Vintagestory.API.MathTools.GameMath.ToEulerAngles*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.ToEulerAngles
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_ToEulerAngles_Vintagestory_API_MathTools_Vec4f_
  name: ToEulerAngles
  nameWithType: GameMath.ToEulerAngles
  fullName: Vintagestory.API.MathTools.GameMath.ToEulerAngles
- uid: Vintagestory.API.MathTools.Vec4f
  commentId: T:Vintagestory.API.MathTools.Vec4f
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec4f.html
  name: Vec4f
  nameWithType: Vec4f
  fullName: Vintagestory.API.MathTools.Vec4f
- uid: Vintagestory.API.MathTools.Vec3f
  commentId: T:Vintagestory.API.MathTools.Vec3f
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec3f.html
  name: Vec3f
  nameWithType: Vec3f
  fullName: Vintagestory.API.MathTools.Vec3f
- uid: Vintagestory.API.MathTools.Vec4d
  commentId: T:Vintagestory.API.MathTools.Vec4d
  parent: Vintagestory.API.MathTools
  href: Vintagestory.API.MathTools.Vec4d.html
  name: Vec4d
  nameWithType: Vec4d
  fullName: Vintagestory.API.MathTools.Vec4d
- uid: Vintagestory.API.MathTools.GameMath.IntFromBools*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.IntFromBools
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_IntFromBools_System_Int32___
  name: IntFromBools
  nameWithType: GameMath.IntFromBools
  fullName: Vintagestory.API.MathTools.GameMath.IntFromBools
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: Vintagestory.API.MathTools.GameMath.BoolsFromInt*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.BoolsFromInt
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_BoolsFromInt_System_Boolean___System_Int32_
  name: BoolsFromInt
  nameWithType: GameMath.BoolsFromInt
  fullName: Vintagestory.API.MathTools.GameMath.BoolsFromInt
- uid: Vintagestory.API.MathTools.GameMath.Map*
  commentId: Overload:Vintagestory.API.MathTools.GameMath.Map
  href: Vintagestory.API.MathTools.GameMath.html#Vintagestory_API_MathTools_GameMath_Map__1___0___0___0___0___0_
  name: Map
  nameWithType: GameMath.Map
  fullName: Vintagestory.API.MathTools.GameMath.Map
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
