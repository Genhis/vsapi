### YamlMime:ManagedReference
items:
- uid: Vintagestory.API.Util.DictExtensions
  commentId: T:Vintagestory.API.Util.DictExtensions
  id: DictExtensions
  parent: Vintagestory.API.Util
  children:
  - Vintagestory.API.Util.DictExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})
  - Vintagestory.API.Util.DictExtensions.Get``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  - Vintagestory.API.Util.DictExtensions.RemoveAllByKey``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.Boolean})
  - Vintagestory.API.Util.DictExtensions.RemoveAll``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,System.Boolean})
  - Vintagestory.API.Util.DictExtensions.Remove``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0)
  langs:
  - csharp
  - vb
  name: DictExtensions
  nameWithType: DictExtensions
  fullName: Vintagestory.API.Util.DictExtensions
  type: Class
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static class DictExtensions
    content.vb: Public Module DictExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Vintagestory.API.Util.DictExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})
  commentId: M:Vintagestory.API.Util.DictExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})
  id: AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})
  isExtensionMethod: true
  parent: Vintagestory.API.Util.DictExtensions
  langs:
  - csharp
  - vb
  name: AddRange<K, V>(IDictionary<K, V>, IDictionary<K, V>)
  nameWithType: DictExtensions.AddRange<K, V>(IDictionary<K, V>, IDictionary<K, V>)
  fullName: Vintagestory.API.Util.DictExtensions.AddRange<K, V>(System.Collections.Generic.IDictionary<K, V>, System.Collections.Generic.IDictionary<K, V>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Add several elements to dict
  example: []
  syntax:
    content: public static void AddRange<K, V>(this IDictionary<K, V> dict, IDictionary<K, V> elems)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{K},{V}}
      description: ''
    - id: elems
      type: System.Collections.Generic.IDictionary{{K},{V}}
      description: ''
    typeParameters:
    - id: K
      description: ''
    - id: V
      description: ''
    content.vb: Public Shared Sub AddRange(Of K, V)(dict As IDictionary(Of K, V), elems As IDictionary(Of K, V))
  overload: Vintagestory.API.Util.DictExtensions.AddRange*
  nameWithType.vb: DictExtensions.AddRange(Of K, V)(IDictionary(Of K, V), IDictionary(Of K, V))
  fullName.vb: Vintagestory.API.Util.DictExtensions.AddRange(Of K, V)(System.Collections.Generic.IDictionary(Of K, V), System.Collections.Generic.IDictionary(Of K, V))
  name.vb: AddRange(Of K, V)(IDictionary(Of K, V), IDictionary(Of K, V))
- uid: Vintagestory.API.Util.DictExtensions.Get``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  commentId: M:Vintagestory.API.Util.DictExtensions.Get``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  id: Get``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.DictExtensions
  langs:
  - csharp
  - vb
  name: Get<K, V>(IDictionary<K, V>, K, V)
  nameWithType: DictExtensions.Get<K, V>(IDictionary<K, V>, K, V)
  fullName: Vintagestory.API.Util.DictExtensions.Get<K, V>(System.Collections.Generic.IDictionary<K, V>, K, V)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  summary: Get value or defaultValue if key does not exists
  example: []
  syntax:
    content: public static V Get<K, V>(this IDictionary<K, V> dict, K key, V defaultValue = default)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{K},{V}}
      description: ''
    - id: key
      type: '{K}'
      description: ''
    - id: defaultValue
      type: '{V}'
      description: ''
    typeParameters:
    - id: K
      description: ''
    - id: V
      description: ''
    return:
      type: '{V}'
      description: ''
    content.vb: Public Shared Function [Get](Of K, V)(dict As IDictionary(Of K, V), key As K, defaultValue As V = Nothing) As V
  overload: Vintagestory.API.Util.DictExtensions.Get*
  nameWithType.vb: DictExtensions.Get(Of K, V)(IDictionary(Of K, V), K, V)
  fullName.vb: Vintagestory.API.Util.DictExtensions.Get(Of K, V)(System.Collections.Generic.IDictionary(Of K, V), K, V)
  name.vb: Get(Of K, V)(IDictionary(Of K, V), K, V)
- uid: Vintagestory.API.Util.DictExtensions.Remove``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0)
  commentId: M:Vintagestory.API.Util.DictExtensions.Remove``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0)
  id: Remove``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0)
  isExtensionMethod: true
  parent: Vintagestory.API.Util.DictExtensions
  langs:
  - csharp
  - vb
  name: Remove<K, V>(ConcurrentDictionary<K, V>, K)
  nameWithType: DictExtensions.Remove<K, V>(ConcurrentDictionary<K, V>, K)
  fullName: Vintagestory.API.Util.DictExtensions.Remove<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static void Remove<K, V>(this ConcurrentDictionary<K, V> dict, K key)
    parameters:
    - id: dict
      type: System.Collections.Concurrent.ConcurrentDictionary{{K},{V}}
    - id: key
      type: '{K}'
    typeParameters:
    - id: K
    - id: V
    content.vb: Public Shared Sub Remove(Of K, V)(dict As ConcurrentDictionary(Of K, V), key As K)
  overload: Vintagestory.API.Util.DictExtensions.Remove*
  nameWithType.vb: DictExtensions.Remove(Of K, V)(ConcurrentDictionary(Of K, V), K)
  fullName.vb: Vintagestory.API.Util.DictExtensions.Remove(Of K, V)(System.Collections.Concurrent.ConcurrentDictionary(Of K, V), K)
  name.vb: Remove(Of K, V)(ConcurrentDictionary(Of K, V), K)
- uid: Vintagestory.API.Util.DictExtensions.RemoveAll``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,System.Boolean})
  commentId: M:Vintagestory.API.Util.DictExtensions.RemoveAll``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,System.Boolean})
  id: RemoveAll``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,``1,System.Boolean})
  isExtensionMethod: true
  parent: Vintagestory.API.Util.DictExtensions
  langs:
  - csharp
  - vb
  name: RemoveAll<K, V>(IDictionary<K, V>, Func<K, V, bool>)
  nameWithType: DictExtensions.RemoveAll<K, V>(IDictionary<K, V>, Func<K, V, bool>)
  fullName: Vintagestory.API.Util.DictExtensions.RemoveAll<K, V>(System.Collections.Generic.IDictionary<K, V>, System.Func<K, V, bool>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static void RemoveAll<K, V>(this IDictionary<K, V> dict, Func<K, V, bool> predicate)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{K},{V}}
    - id: predicate
      type: System.Func{{K},{V},System.Boolean}
    typeParameters:
    - id: K
    - id: V
    content.vb: Public Shared Sub RemoveAll(Of K, V)(dict As IDictionary(Of K, V), predicate As Func(Of K, V, Boolean))
  overload: Vintagestory.API.Util.DictExtensions.RemoveAll*
  nameWithType.vb: DictExtensions.RemoveAll(Of K, V)(IDictionary(Of K, V), Func(Of K, V, Boolean))
  fullName.vb: Vintagestory.API.Util.DictExtensions.RemoveAll(Of K, V)(System.Collections.Generic.IDictionary(Of K, V), System.Func(Of K, V, Boolean))
  name.vb: RemoveAll(Of K, V)(IDictionary(Of K, V), Func(Of K, V, Boolean))
- uid: Vintagestory.API.Util.DictExtensions.RemoveAllByKey``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.Boolean})
  commentId: M:Vintagestory.API.Util.DictExtensions.RemoveAllByKey``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.Boolean})
  id: RemoveAllByKey``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{``0,System.Boolean})
  isExtensionMethod: true
  parent: Vintagestory.API.Util.DictExtensions
  langs:
  - csharp
  - vb
  name: RemoveAllByKey<K, V>(IDictionary<K, V>, Func<K, bool>)
  nameWithType: DictExtensions.RemoveAllByKey<K, V>(IDictionary<K, V>, Func<K, bool>)
  fullName: Vintagestory.API.Util.DictExtensions.RemoveAllByKey<K, V>(System.Collections.Generic.IDictionary<K, V>, System.Func<K, bool>)
  type: Method
  assemblies:
  - VintagestoryAPI
  namespace: Vintagestory.API.Util
  syntax:
    content: public static void RemoveAllByKey<K, V>(this IDictionary<K, V> dict, Func<K, bool> predicate)
    parameters:
    - id: dict
      type: System.Collections.Generic.IDictionary{{K},{V}}
    - id: predicate
      type: System.Func{{K},System.Boolean}
    typeParameters:
    - id: K
    - id: V
    content.vb: Public Shared Sub RemoveAllByKey(Of K, V)(dict As IDictionary(Of K, V), predicate As Func(Of K, Boolean))
  overload: Vintagestory.API.Util.DictExtensions.RemoveAllByKey*
  nameWithType.vb: DictExtensions.RemoveAllByKey(Of K, V)(IDictionary(Of K, V), Func(Of K, Boolean))
  fullName.vb: Vintagestory.API.Util.DictExtensions.RemoveAllByKey(Of K, V)(System.Collections.Generic.IDictionary(Of K, V), System.Func(Of K, Boolean))
  name.vb: RemoveAllByKey(Of K, V)(IDictionary(Of K, V), Func(Of K, Boolean))
references:
- uid: Vintagestory.API.Util
  commentId: N:Vintagestory.API.Util
  href: Vintagestory.html
  name: Vintagestory.API.Util
  nameWithType: Vintagestory.API.Util
  fullName: Vintagestory.API.Util
  spec.csharp:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
  spec.vb:
  - uid: Vintagestory
    name: Vintagestory
    href: Vintagestory.html
  - name: .
  - uid: Vintagestory.API
    name: API
    href: Vintagestory.API.html
  - name: .
  - uid: Vintagestory.API.Util
    name: Util
    href: Vintagestory.API.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Vintagestory.API.Util.DictExtensions.AddRange*
  commentId: Overload:Vintagestory.API.Util.DictExtensions.AddRange
  href: Vintagestory.API.Util.DictExtensions.html#Vintagestory_API_Util_DictExtensions_AddRange__2_System_Collections_Generic_IDictionary___0___1__System_Collections_Generic_IDictionary___0___1__
  name: AddRange
  nameWithType: DictExtensions.AddRange
  fullName: Vintagestory.API.Util.DictExtensions.AddRange
- uid: System.Collections.Generic.IDictionary{{K},{V}}
  commentId: T:System.Collections.Generic.IDictionary{``0,``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<K, V>
  nameWithType: IDictionary<K, V>
  fullName: System.Collections.Generic.IDictionary<K, V>
  nameWithType.vb: IDictionary(Of K, V)
  fullName.vb: System.Collections.Generic.IDictionary(Of K, V)
  name.vb: IDictionary(Of K, V)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Vintagestory.API.Util.DictExtensions.Get*
  commentId: Overload:Vintagestory.API.Util.DictExtensions.Get
  href: Vintagestory.API.Util.DictExtensions.html#Vintagestory_API_Util_DictExtensions_Get__2_System_Collections_Generic_IDictionary___0___1____0___1_
  name: Get
  nameWithType: DictExtensions.Get
  fullName: Vintagestory.API.Util.DictExtensions.Get
- uid: '{K}'
  commentId: '!:K'
  definition: K
  name: K
  nameWithType: K
  fullName: K
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: K
  name: K
  nameWithType: K
  fullName: K
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: Vintagestory.API.Util.DictExtensions.Remove*
  commentId: Overload:Vintagestory.API.Util.DictExtensions.Remove
  href: Vintagestory.API.Util.DictExtensions.html#Vintagestory_API_Util_DictExtensions_Remove__2_System_Collections_Concurrent_ConcurrentDictionary___0___1____0_
  name: Remove
  nameWithType: DictExtensions.Remove
  fullName: Vintagestory.API.Util.DictExtensions.Remove
- uid: System.Collections.Concurrent.ConcurrentDictionary{{K},{V}}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{``0,``1}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  name: ConcurrentDictionary<K, V>
  nameWithType: ConcurrentDictionary<K, V>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<K, V>
  nameWithType.vb: ConcurrentDictionary(Of K, V)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of K, V)
  name.vb: ConcurrentDictionary(Of K, V)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Concurrent
    name: Concurrent
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Concurrent
    name: Concurrent
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent
- uid: Vintagestory.API.Util.DictExtensions.RemoveAll*
  commentId: Overload:Vintagestory.API.Util.DictExtensions.RemoveAll
  href: Vintagestory.API.Util.DictExtensions.html#Vintagestory_API_Util_DictExtensions_RemoveAll__2_System_Collections_Generic_IDictionary___0___1__System_Func___0___1_System_Boolean__
  name: RemoveAll
  nameWithType: DictExtensions.RemoveAll
  fullName: Vintagestory.API.Util.DictExtensions.RemoveAll
- uid: System.Func{{K},{V},System.Boolean}
  commentId: T:System.Func{``0,``1,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<K, V, bool>
  nameWithType: Func<K, V, bool>
  fullName: System.Func<K, V, bool>
  nameWithType.vb: Func(Of K, V, Boolean)
  fullName.vb: System.Func(Of K, V, Boolean)
  name.vb: Func(Of K, V, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - name: V
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Vintagestory.API.Util.DictExtensions.RemoveAllByKey*
  commentId: Overload:Vintagestory.API.Util.DictExtensions.RemoveAllByKey
  href: Vintagestory.API.Util.DictExtensions.html#Vintagestory_API_Util_DictExtensions_RemoveAllByKey__2_System_Collections_Generic_IDictionary___0___1__System_Func___0_System_Boolean__
  name: RemoveAllByKey
  nameWithType: DictExtensions.RemoveAllByKey
  fullName: Vintagestory.API.Util.DictExtensions.RemoveAllByKey
- uid: System.Func{{K},System.Boolean}
  commentId: T:System.Func{``0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<K, bool>
  nameWithType: Func<K, bool>
  fullName: System.Func<K, bool>
  nameWithType.vb: Func(Of K, Boolean)
  fullName.vb: System.Func(Of K, Boolean)
  name.vb: Func(Of K, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: K
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: K
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
